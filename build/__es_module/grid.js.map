{"version":3,"sources":["grid.tsx"],"names":[],"mappings":"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","file":"grid.js","sourcesContent":["import * as React from 'react';\r\nimport * as PropType from 'prop-types';\r\nimport FallbackScrollView, { IScrollViewUpdateEvent } from './scroll-view';\r\nimport KeyboardController, { IKeyboardControllerRemoveEvent, IKeyboardControllerPasteEvent, IKeyboardController } from './keyboard-controller';\r\nimport MouseController from './mouse-controller';\r\nimport RenderThrottler from './render-throttler';\r\nimport debounce from './debounce';\r\nimport { IUpdateSelectionEvent } from './base-controller';\r\nimport { HeaderRepository } from './header-repository';\r\nimport {\r\n    IGridProps, IGridResizeCombinedEvent, IMeasureResult, ICellRenderBaseEvent, ICellRendererEvent, TGridReadOnlyEventSource,\r\n    IGridAddress, IGridSelection, IGridView, IGridOverscan, IHeader, HeaderType, HeaderResizeBehavior, IGridReadOnlyEvent,\r\n    IGridSelectionEvent\r\n} from './types';\r\n\r\nimport Context from './context';\r\n\r\ndeclare global {\r\n    namespace JSX {\r\n        interface IntrinsicElements {\r\n            'react-bolivianite-grid': React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n        }\r\n    }\r\n}\r\n\r\nconst DUMMY_CELL_ADDRESS: IGridAddress = { row: -1, column: -1 };\r\n\r\nexport class Grid extends React.PureComponent<IGridProps, any> {\r\n    static propTypes = {\r\n        tabIndex: PropType.number,\r\n        preserveScrollbars: PropType.bool,\r\n        repository: PropType.instanceOf(HeaderRepository).isRequired,\r\n        data: PropType.any,\r\n        readOnly: PropType.bool,\r\n        overscanRows: PropType.number,\r\n        overscanColumns: PropType.number,\r\n        theme: PropType.object,\r\n        active: PropType.object,\r\n        selection: PropType.array,\r\n        onRenderCell: PropType.func.isRequired,\r\n        onRenderHeader: PropType.func.isRequired,\r\n        onRenderHeaderCorner: PropType.func,\r\n        onRenderSelection: PropType.func,\r\n        onRenderEditor: PropType.func,\r\n        onRenderResizer: PropType.func,\r\n        onAutoMeasure: PropType.func,\r\n        onSpace: PropType.func,\r\n        onRemove: PropType.func,\r\n        onNullify: PropType.func,\r\n        onCopy: PropType.func,\r\n        onPaste: PropType.func,\r\n        onRightClick: PropType.func,\r\n        onHeaderRightClick: PropType.func,\r\n        onUpdate: PropType.func,\r\n        onSelection: PropType.func,\r\n        onHeaderResize: PropType.func,\r\n        onReadOnly: PropType.func,\r\n        scrollViewClass: PropType.any\r\n    };\r\n\r\n    static defaultProps = {\r\n        tabIndex: -1,\r\n        preserveScrollbars: false,\r\n        readOnly: false,\r\n        overscanRows: 0,\r\n        overscanColumns: 0\r\n    };\r\n\r\n    //#region properties\r\n    private _detached = false;\r\n    private _blockContextMenu = false;\r\n    private _onContextMenuListener: any = null;\r\n    private _rt = new RenderThrottler();\r\n    private _scrollUpdateTrottled = this._rt.create();\r\n    private _ref: HTMLDivElement = null;\r\n    private _refView: FallbackScrollView = null;\r\n    private _scrollerStyle: React.CSSProperties = { willChange: 'transform', zIndex: 0 };\r\n    private _lastView: IGridView = null;\r\n    private _lastOverscan: IGridOverscan = null;\r\n    private _focused = false;\r\n    private _kbCtr: IKeyboardController = null;\r\n    private _msCtr: MouseController = null;\r\n    private _currentEdit: {\r\n        row: number;\r\n        col: number;\r\n        nextValue: any;\r\n        updatedValue: boolean;\r\n    } = null;\r\n\r\n    state = {\r\n        scrollLeft: 0,\r\n        scrollTop: 0,\r\n        viewHeight: 0,\r\n        viewWidth: 0,\r\n        active: {\r\n            row: 0,\r\n            column: 0\r\n        } as IGridAddress,\r\n        edit: null as IGridAddress,\r\n        selection: [{\r\n            row: 0,\r\n            column: 0,\r\n            width: 0,\r\n            height: 0\r\n        }] as IGridSelection[],\r\n        resizeHeaderPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        },\r\n        resizeLevelPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        }\r\n    };\r\n\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=769390\r\n    private _chromeFix = {\r\n        row: -1,\r\n        column: -1\r\n    };\r\n    //#endregion\r\n\r\n    constructor(p: IGridProps, c: any) {\r\n        super(p, c);\r\n\r\n        this._onAfterUpdate = debounce(500, this._onAfterUpdate.bind(this));\r\n\r\n        this._kbCtr = new (p.keyboardControllerConstructor ?? KeyboardController)({\r\n            getState: this._ctrlGetState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll: this.scrollTo,\r\n            onUpdateSelection: this.updateSelection,\r\n            onCopy: this._ctrlCopy,\r\n            onPaste: this._ctrlPaste,\r\n            onNullify: this._ctrlNullify,\r\n            onRemove: this._ctrlRemove,\r\n            onSpace: this._ctrlSpace,\r\n            onReadOnly: this._ctrlIsCellReadOnly\r\n        });\r\n\r\n        this._msCtr = new MouseController({\r\n            getState: this._ctrlGetState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll: this.scrollTo,\r\n            onUpdateSelection: this.updateSelection,\r\n            onRightClick: this._ctrlRightClick\r\n        });\r\n    }\r\n\r\n    //#region getters\r\n    private get _theme() {\r\n        return this.props.theme || {};\r\n    }\r\n\r\n    private get _columnCount() {\r\n        return this.props.repository ? this.props.repository.columns.length : 0;\r\n    }\r\n\r\n    private get _rowCount() {\r\n        return this.props.repository ? this.props.repository.rows.length : 0;\r\n    }\r\n\r\n    private get _headersHeight() {\r\n        return this.props.repository.offsetHeight || 0;\r\n    }\r\n\r\n    private get _headersWidth() {\r\n        return this.props.repository.offsetWidth || 0;\r\n    }\r\n\r\n    private get _selection() {\r\n        return this.props.selection || this.state.selection;\r\n    }\r\n\r\n    private get _active() {\r\n        return (\r\n            this.props.onRenderSelection\r\n                ? this.props.active || this.state.active\r\n                : DUMMY_CELL_ADDRESS\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region root handlers\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._ref = r;\r\n    }\r\n\r\n    private _onRefView = (r: FallbackScrollView) => {\r\n        this._refView = r;\r\n    }\r\n\r\n    private _onBlur = () => {\r\n        this._focused = false;\r\n    }\r\n\r\n    private _onFocus = () => {\r\n        this._focused = true;\r\n    }\r\n\r\n    private _onRootMouseLeave = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n        let rect = this._ref.getBoundingClientRect();\r\n        this._msCtr.rootleave(x, y, rect);\r\n    }\r\n\r\n    private _onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        this._kbCtr.keydown(e);\r\n    }\r\n\r\n    private _onRootMouseEnter = () => {\r\n        this._msCtr.rootenter();\r\n    }\r\n\r\n    private _onRootMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        this.focus();\r\n\r\n        if (e.button === 2) {\r\n            this._blockContextMenu = true;\r\n        }\r\n    }\r\n\r\n    private _onScrollViewUpdate = (e: IScrollViewUpdateEvent) => {\r\n        this._scrollUpdateTrottled(() => {\r\n            if (this.state.viewWidth !== e.clientWidth\r\n                || this.state.viewHeight !== e.clientHeight\r\n                || this.state.scrollLeft !== e.scrollLeft\r\n                || this.state.scrollTop !== e.scrollTop\r\n            ) {\r\n                this.setState({\r\n                    viewWidth: e.clientWidth,\r\n                    viewHeight: e.clientHeight,\r\n                    scrollLeft: e.scrollLeft,\r\n                    scrollTop: e.scrollTop\r\n                });\r\n            }\r\n        });\r\n    }\r\n    //#endregion\r\n\r\n    //#region controller handlers\r\n    private _ctrlGetState = () => {\r\n        return {\r\n            enabled: !!this.props.onRenderSelection,\r\n            active: this._active,\r\n            selection: this._selection,\r\n            editor: this.state.edit,\r\n            focused: this._focused,\r\n            columns: this._columnCount,\r\n            rows: this._rowCount,\r\n            view: this._lastView,\r\n            readOnly: this.props.readOnly\r\n        };\r\n    }\r\n\r\n    private _ctrlGetActiveNotifier(prev: IGridAddress, next: IGridAddress) {\r\n        if (!this.props.onSelection || prev == next || (prev && next && prev.column === next.column && prev.row === next.row)) {\r\n            return null;\r\n        }\r\n\r\n        prev = prev ? { ...prev } : null;\r\n        next = next ? { ...next } : null;\r\n        return { previous: prev, current: next };\r\n    }\r\n\r\n    private _ctrlGetSelectionNotifier(prev: IGridSelection[], next: IGridSelection[]) {\r\n        if (!this.props.onSelection || prev == next) {\r\n            return null;\r\n        }\r\n\r\n        if (prev && next && prev.length === next.length && prev.every((a, i) => {\r\n            return (\r\n                a.column === next[i].column\r\n                && a.height === next[i].height\r\n                && a.row === next[i].row\r\n                && a.width === next[i].width\r\n            );\r\n        })) {\r\n            return null;\r\n        }\r\n\r\n        prev = prev ? prev.slice().map(a => ({ ...a })) : null;\r\n        next = next ? next.slice().map(a => ({ ...a })) : null;\r\n        return { previous: prev, current: next };\r\n    }\r\n\r\n    private _ctrlRightClick = (\r\n        cell: IGridAddress,\r\n        event: React.MouseEvent<HTMLElement>,\r\n        select: () => void,\r\n        inside: boolean\r\n    ) => {\r\n        if (this.props.onRightClick) {\r\n            this.props.onRightClick({ cell, event, select, inside });\r\n        }\r\n    }\r\n\r\n    private _ctrlCopy = (cells: IGridAddress[], withHeaders: boolean) => {\r\n        if (this.props.onCopy) {\r\n            this.props.onCopy({\r\n                withHeaders, cells,\r\n                repository: this.props.repository,\r\n                data: this.props.data,\r\n                focus: () => { this.focus(); }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _ctrlPaste = ({ clipboard, getAllSelectedCells, getLastSelectedCells, isReadOnly }: IKeyboardControllerPasteEvent) => {\r\n        if (this.props.onPaste) {\r\n            this.props.onPaste({\r\n                clipboard,\r\n                getAllSelectedCells,\r\n                getLastSelectedCells,\r\n                isReadOnly,\r\n                repository: this.props.repository,\r\n                data: this.props.data,\r\n                target: {\r\n                    ...this._active\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _ctrlNullify = (cells: IGridAddress[]) => {\r\n        if (this.props.onNullify) {\r\n            this.props.onNullify({ cells: this._ctrlOnReadOnlyFilter(cells, 'nullify') });\r\n        }\r\n    }\r\n\r\n    private _ctrlRemove = (event: IKeyboardControllerRemoveEvent) => {\r\n        if (this.props.onRemove) {\r\n            this.props.onRemove(event);\r\n        }\r\n    }\r\n\r\n    private _ctrlSpace = (cells: IGridAddress[]) => {\r\n        if (this.props.onSpace) {\r\n            this.props.onSpace({ cells });\r\n        }\r\n    }\r\n\r\n    private _ctrlIsReadOnly(e: IGridReadOnlyEvent) {\r\n        if (this.props.onReadOnly) {\r\n            return this.props.onReadOnly(e);\r\n        }\r\n\r\n        return e.column.$readOnly || e.row.$readOnly;\r\n    }\r\n\r\n    private _ctrlIsNoEditor(e: IGridReadOnlyEvent) {\r\n        return e.column.$noEditor || e.row.$noEditor;\r\n    }\r\n\r\n    private _ctrlIsCellReadOnly = ({ row, column }: IGridAddress, source: TGridReadOnlyEventSource) => {\r\n        let ch = this.props.repository.columns[column];\r\n        let rh = this.props.repository.rows[row];\r\n        return ch && rh && this._ctrlIsReadOnly({ row: rh, column: ch, source });\r\n    }\r\n\r\n    private _ctrlOnReadOnlyFilter = (cells: IGridAddress[], source: TGridReadOnlyEventSource) => {\r\n        return cells.filter(e => !this._ctrlIsCellReadOnly(e, source));\r\n    }\r\n    //#endregion\r\n\r\n    //#region elements handlers\r\n    private _onCellMouseDown = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n\r\n        if (e.button === 1) {\r\n            this._chromeFix = { row, column };\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this._msCtr.mousedown(e, row, column);\r\n    }\r\n\r\n    private _onCellTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n\r\n        this._chromeFix = { row, column };\r\n\r\n        this.focus();\r\n    }\r\n\r\n    private _onHeaderMouseDownHeader = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let type: HeaderType = Number(e.currentTarget.getAttribute('x-type'));\r\n        let id = e.currentTarget.getAttribute('x-id');\r\n        let h = this.props.repository.getHeader(id);\r\n        this.focus();\r\n\r\n        if (!h) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.onHeaderRightClick) {\r\n            this.props.onHeaderRightClick({ header: h, event: e });\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let leaves = this.props.repository.getHeaderLeaves(h);\r\n        let indices = leaves.map(v => this.props.repository.getViewIndex(v));\r\n\r\n        if (!indices.length) {\r\n            return;\r\n        }\r\n\r\n        let min = Math.min(...indices);\r\n        let max = Math.max(...indices);\r\n\r\n        this._msCtr.headerdown(e, type, min, max);\r\n    }\r\n\r\n    private _onCornerMouseDown = (e: React.MouseEvent<HTMLElement>) => {\r\n        if (!this.props.onRenderSelection || e.button !== 0 || e.defaultPrevented) {\r\n            return;\r\n        }\r\n\r\n        const select = () => {\r\n            this.setState({\r\n                selection: [{\r\n                    row: 0,\r\n                    column: 0,\r\n                    width: this._columnCount - 1,\r\n                    height: this._rowCount - 1\r\n                }]\r\n            });\r\n        };\r\n\r\n        if (this.state.edit) {\r\n            this.closeEditor(true, select);\r\n            return;\r\n        }\r\n\r\n        select();\r\n    }\r\n\r\n    private _onCellMouseEnter = (e: React.MouseEvent<HTMLElement>) => {\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n        this._msCtr.mouseenter(row, column);\r\n    }\r\n    //#endregion\r\n\r\n    private _onAutoMeasureApply(\r\n        { cells, headers }: IMeasureResult,\r\n        behavior: HeaderResizeBehavior,\r\n        workType: 'levels' | 'cells' | 'all',\r\n        headerType: HeaderType | 'all',\r\n    ) {\r\n        cells = (cells || []).filter(v => !!v);\r\n        headers = (headers || []).filter(v => !!v);\r\n\r\n        const ctr = this.props.repository;\r\n        const isReset = behavior === 'reset';\r\n\r\n        const combinedEvent: IGridResizeCombinedEvent = {\r\n            behavior\r\n        };\r\n\r\n        if ((workType === 'all' || workType === 'cells')) {\r\n            const columnHeaders = ctr.columns;\r\n            const rowHeaders = ctr.rows;\r\n\r\n            let columns: { [colIndex: string]: number } = {};\r\n            let rows: { [rowIndex: string]: number } = {};\r\n            let headerColSizes: typeof columns = {};\r\n            let headerRowSizes: typeof columns = {};\r\n\r\n            headers.forEach(({ height, width, header }) => {\r\n                let vi = ctr.getViewIndex(header);\r\n\r\n                if (ctr.getHeaderType(header) === HeaderType.Row) {\r\n                    headerRowSizes[vi] = Math.max(headerRowSizes[vi] || 0, height);\r\n                } else {\r\n                    headerColSizes[vi] = Math.max(headerColSizes[vi] || 0, width);\r\n                }\r\n            });\r\n\r\n            if (!cells.length) {\r\n                let { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n                if (firstRow !== -1 || firstColumn !== -1) {\r\n                    if (firstRow === -1) {\r\n                        firstRow = 0;\r\n                        lastRow = 0;\r\n                    } else {\r\n                        firstColumn = 0;\r\n                        lastColumn = 0;\r\n                    }\r\n\r\n                    for (let r = firstRow; r <= lastRow; r++) {\r\n                        for (let c = firstColumn; c <= lastColumn; c++) {\r\n                            cells.push({\r\n                                column: c,\r\n                                row: r,\r\n                                height: 0,\r\n                                width: 0\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let { row, column, height, width } of cells) {\r\n                columns[column] = Math.max(headerColSizes[column] || 0, columns[column] == null ? width : Math.max(width, columns[column]));\r\n                rows[row] = Math.max(headerRowSizes[row] || 0, rows[row] == null ? height : Math.max(height, rows[row]));\r\n            }\r\n\r\n            let ch = (headerType === 'all' || headerType === HeaderType.Column)\r\n                ? Object\r\n                    .keys(columns)\r\n                    .map(k => ({ columnIndex: Number(k), width: Math.round(columns[k]) }))\r\n                    .filter(({ width, columnIndex }) => {\r\n                        let h = columnHeaders[columnIndex];\r\n                        let size = this.props.repository.getSize(h);\r\n                        return h && (isReset || !ctr.getManualResized(h) && Math.round(size) < width);\r\n                    })\r\n                    .map(({ columnIndex, width }) => ({\r\n                        header: columnHeaders[columnIndex],\r\n                        size: width,\r\n                        type: ctr.getHeaderType(columnHeaders[columnIndex])\r\n                    }))\r\n                : [];\r\n\r\n            let rh = (headerType === 'all' || headerType === HeaderType.Row)\r\n                ? Object\r\n                    .keys(rows)\r\n                    .map(k => ({ rowIndex: Number(k), height: Math.round(rows[k]) }))\r\n                    .filter(({ rowIndex, height }) => {\r\n                        let h = rowHeaders[rowIndex];\r\n                        let size = this.props.repository.getSize(h);\r\n                        return h && (isReset || !ctr.getManualResized(h) && Math.round(size) < height);\r\n                    })\r\n                    .map(({ rowIndex, height }) => ({\r\n                        header: rowHeaders[rowIndex],\r\n                        size: height,\r\n                        type: ctr.getHeaderType(rowHeaders[rowIndex])\r\n                    }))\r\n                : [];\r\n\r\n            if (ch.length || rh.length) {\r\n                combinedEvent.headers = [...ch, ...rh];\r\n            }\r\n        }\r\n\r\n        if ((workType === 'all' || workType === 'levels') && headers.length) {\r\n            const topLevels: { [level: number]: number } = {};\r\n            const leftLevels: typeof topLevels = {};\r\n\r\n            for (let { header: h, height, width } of headers) {\r\n                const type = ctr.getHeaderType(h);\r\n                const level = ctr.getPositionLevel(h);\r\n\r\n                if (ctr.getManualResizedLevel(type, level) && !isReset) {\r\n                    return;\r\n                }\r\n\r\n                if (type === HeaderType.Column) {\r\n                    topLevels[level] = (height > (topLevels[level] || 0)) ? height : topLevels[level];\r\n                } else {\r\n                    leftLevels[level] = (width > (leftLevels[level] || 0)) ? width : leftLevels[level];\r\n                }\r\n            }\r\n\r\n            const top = (headerType === 'all' || headerType === HeaderType.Column)\r\n                ? Object\r\n                    .keys(topLevels)\r\n                    .map((k) => {\r\n                        const level = Number(k);\r\n                        const size = topLevels[level];\r\n\r\n                        if (size == null || !isReset && Math.round(size) <= Math.round(ctr.getTopLevelHeight(level))) {\r\n                            return null;\r\n                        }\r\n\r\n                        return {\r\n                            level, size,\r\n                            type: HeaderType.Column\r\n                        };\r\n                    })\r\n                    .filter(v => !!v)\r\n                : [];\r\n\r\n            const left = (headerType === 'all' || headerType === HeaderType.Row)\r\n                ? Object\r\n                    .keys(leftLevels)\r\n                    .map((k) => {\r\n                        const level = Number(k);\r\n                        const size = leftLevels[level];\r\n\r\n                        if (size == null || !isReset && Math.round(size) <= Math.round(ctr.getLeftLevelWidth(level))) {\r\n                            return null;\r\n                        }\r\n\r\n                        return {\r\n                            level, size,\r\n                            type: HeaderType.Row\r\n                        };\r\n                    })\r\n                    .filter(v => !!v)\r\n                : [];\r\n\r\n\r\n            if (top.length || left.length) {\r\n                combinedEvent.levels = [...top, ...left];\r\n            }\r\n        }\r\n\r\n        if (combinedEvent.headers || combinedEvent.levels) {\r\n            this.props.onHeaderResize(combinedEvent);\r\n        }\r\n    }\r\n\r\n    private _onAutoMeasure() {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        const ctr = this.props.repository;\r\n        const { columns, rows } = ctr;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let r = firstRow; r <= lastRow; r++) {\r\n            for (let c = firstColumn; c <= lastColumn; c++) {\r\n                if (columns[c] && rows[r]) {\r\n                    cells.push({\r\n                        column: c,\r\n                        row: r,\r\n                        columnHeader: columns[c],\r\n                        rowHeader: rows[r]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        const columnHeaders = ctr.getNodesBottomUp(columns.slice(firstColumn, lastColumn + 1));\r\n        const rowHeaders = ctr.getNodesBottomUp(rows.slice(firstRow, lastRow + 1));\r\n\r\n        const headers = [...columnHeaders, ...rowHeaders].map((h) => {\r\n            return {\r\n                index: ctr.getViewIndex(h),\r\n                type: ctr.getHeaderType(h),\r\n                level: ctr.getPositionLevel(h),\r\n                header: h\r\n            };\r\n        });\r\n\r\n        if (!cells.length && !headers.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            headers,\r\n            data: this.props.data,\r\n            callback: (result: IMeasureResult) => {\r\n                this._onAutoMeasureApply(result, 'auto', 'all', 'all');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAfterUpdate() {\r\n        this._onAutoMeasure();\r\n\r\n        if (this._refView) {\r\n            let style = this._refView.scrollerStyle as any;\r\n            style.willChange = '';\r\n\r\n            setTimeout(() => {\r\n                if (this._detached) {\r\n                    return;\r\n                }\r\n\r\n                style.willChange = 'transform';\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    private _createView() {\r\n        const sl = this.state.scrollLeft;\r\n        const st = this.state.scrollTop;\r\n        const vw = this.state.viewWidth - this._headersWidth;\r\n        const vh = this.state.viewHeight - this._headersHeight;\r\n\r\n        let rowsHeight = 0;\r\n        let firstRow = -1;\r\n        let lastRow = -1;\r\n        let rowIndex = 0;\r\n\r\n        for (let rh of this.props.repository.rows) {\r\n            let hsize = this.props.repository.getSize(rh);\r\n\r\n            if (firstRow === -1 && rowsHeight >= st - hsize) {\r\n                firstRow = rowIndex;\r\n            }\r\n\r\n            rowsHeight += hsize;\r\n\r\n            if (lastRow === -1 && rowsHeight >= st + vh) {\r\n                lastRow = rowIndex;\r\n                break;\r\n            }\r\n\r\n            rowIndex++;\r\n        }\r\n\r\n        if (lastRow === -1 && firstRow !== -1) {\r\n            lastRow = rowIndex;\r\n        }\r\n\r\n        let columnsWidth = 0;\r\n        let firstColumn = -1;\r\n        let lastColumn = -1;\r\n        let colIndex = 0;\r\n\r\n        for (let ch of this.props.repository.columns) {\r\n            let csize = this.props.repository.getSize(ch);\r\n            if (firstColumn === -1 && columnsWidth >= sl - csize) {\r\n                firstColumn = colIndex;\r\n            }\r\n\r\n            columnsWidth += csize;\r\n\r\n            if (lastColumn === -1 && columnsWidth >= sl + vw) {\r\n                lastColumn = colIndex;\r\n                break;\r\n            }\r\n\r\n            colIndex++;\r\n        }\r\n\r\n        if (lastColumn === -1 && firstColumn !== -1) {\r\n            lastColumn = colIndex;\r\n        }\r\n\r\n        let rhLast = this.props.repository.rows[this.props.repository.rows.length - 1];\r\n        let chLast = this.props.repository.columns[this.props.repository.columns.length - 1];\r\n\r\n        if (rhLast) {\r\n            rowsHeight = this.props.repository.getPosition(rhLast) + this.props.repository.getSize(rhLast);\r\n        }\r\n\r\n        if (chLast) {\r\n            columnsWidth = this.props.repository.getPosition(chLast) + this.props.repository.getSize(chLast);\r\n        }\r\n\r\n        this._lastView = { firstRow, lastRow, firstColumn, lastColumn, rowsHeight, columnsWidth };\r\n    }\r\n\r\n    private _createOverscan() {\r\n        if (!this._lastView) {\r\n            return;\r\n        }\r\n\r\n        let { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n\r\n        if (this.props.overscanRows) {\r\n            firstRow = Math.max(0, firstRow - this.props.overscanRows);\r\n            lastRow = Math.min(Math.max(0, this._rowCount - 1), lastRow + this.props.overscanRows);\r\n        } else {\r\n            firstRow = Math.max(0, firstRow);\r\n        }\r\n\r\n        if (this.props.overscanColumns) {\r\n            firstColumn = Math.max(0, firstColumn - this.props.overscanColumns);\r\n            lastColumn = Math.min(Math.max(0, this._columnCount - 1), lastColumn + this.props.overscanColumns);\r\n        } else {\r\n            firstColumn = Math.max(0, firstColumn);\r\n        }\r\n\r\n        this._lastOverscan = {\r\n            firstRow, lastRow, firstColumn, lastColumn\r\n        };\r\n    }\r\n\r\n    private _prepareCellProps(row: number, col: number) {\r\n        let rh = this.props.repository.rows[row];\r\n        let ch = this.props.repository.columns[col];\r\n\r\n        if (!rh || !ch) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            row: row,\r\n            column: col,\r\n            rowHeader: rh,\r\n            columnHeader: ch,\r\n            active: row === this._active.row && col === this._active.column,\r\n            data: this.props.data,\r\n            theme: this.props.theme,\r\n            style: {\r\n                top: this.props.repository.getPosition(rh),\r\n                left: this.props.repository.getPosition(ch),\r\n                height: this.props.repository.getSize(rh),\r\n                width: this.props.repository.getSize(ch),\r\n                position: 'absolute',\r\n                zIndex: 1\r\n            }\r\n        } as ICellRendererEvent;\r\n    }\r\n\r\n    private _renderCell(row: number, col: number) {\r\n        const props = this._prepareCellProps(row, col);\r\n\r\n        if (!props) {\r\n            return null;\r\n        }\r\n\r\n        const cell = this.props.onRenderCell(props);\r\n\r\n        let eventHandlers: React.HTMLProps<HTMLDivElement> = null;\r\n\r\n        if (this.props.onRenderSelection) {\r\n            eventHandlers = {\r\n                onMouseDown: this._onCellMouseDown,\r\n                onMouseEnter: this._onCellMouseEnter,\r\n                onTouchStart: this._onCellTouchStart\r\n            };\r\n        }\r\n\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `C${row}x${col}`,\r\n            ...eventHandlers\r\n        });\r\n    }\r\n\r\n    private _renderEditor(row: number, col: number) {\r\n        if (!this.props.onRenderEditor) {\r\n            return this._renderCell(row, col);\r\n        }\r\n\r\n        if (!this._currentEdit || (this._currentEdit.row !== row || this._currentEdit.col !== col)) {\r\n            this._currentEdit = {\r\n                row, col,\r\n                nextValue: null,\r\n                updatedValue: false\r\n            };\r\n        }\r\n\r\n        const props = this._prepareCellProps(row, col);\r\n\r\n        if (!props) {\r\n            return null;\r\n        }\r\n\r\n        const cell = this.props.onRenderEditor({\r\n            ...props,\r\n            close: (commit: boolean) => {\r\n                this.closeEditor(commit);\r\n            },\r\n            update: (nextValue: any) => {\r\n                this._currentEdit.nextValue = nextValue;\r\n                this._currentEdit.updatedValue = true;\r\n            }\r\n        });\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `E${row}x${col}`\r\n        });\r\n    }\r\n\r\n    private _renderData() {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const columnCount = this._columnCount;\r\n        const rowCount = this._rowCount;\r\n\r\n        if (!columnCount || !rowCount) {\r\n            return null;\r\n        }\r\n\r\n        let irlen = Math.max(0, Math.min(rowCount - firstRow, 1 + lastRow - firstRow));\r\n        let iclen = Math.max(0, Math.min(columnCount - firstColumn, 1 + lastColumn - firstColumn));\r\n        let jsx: JSX.Element[] = new Array(irlen * iclen);\r\n        let i = 0;\r\n        let { edit } = this.state;\r\n\r\n        for (let ir = 0; ir < irlen; ir++) {\r\n            for (let ic = 0; ic < iclen; ic++) {\r\n                let r = ir + firstRow;\r\n                let c = ic + firstColumn;\r\n\r\n                if (edit && edit.column === c && edit.row === r) {\r\n                    jsx[i++] = this._renderEditor(r, c);\r\n                } else {\r\n                    jsx[i++] = this._renderCell(r, c);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (edit && (\r\n            (edit.column < firstColumn) || (edit.column > lastColumn) ||\r\n            (edit.row < firstRow) || (edit.row > lastRow)\r\n        )) {\r\n            jsx.push(this._renderEditor(edit.row, edit.column));\r\n        }\r\n\r\n        let wkfix = this._chromeFix;\r\n        if (wkfix.column !== -1 && wkfix.row !== -1 && (\r\n            (wkfix.column < firstColumn) || (wkfix.column > lastColumn) ||\r\n            (wkfix.row < firstRow) || (wkfix.row > lastRow)\r\n        )) {\r\n            jsx.push(this._renderCell(wkfix.row, wkfix.column));\r\n        }\r\n\r\n        return jsx;\r\n    }\r\n\r\n    private _renderHeader(\r\n        out: JSX.Element[],\r\n        type: HeaderType,\r\n        index: number,\r\n        header: IHeader,\r\n        scrollPos: number,\r\n        lock: Set<string | number>,\r\n        parent: boolean\r\n    ) {\r\n        let { $id, $children } = header;\r\n\r\n        if (lock.has($id)) {\r\n            return;\r\n        }\r\n\r\n        lock.add($id);\r\n\r\n        let style: React.CSSProperties = {\r\n            position: 'absolute',\r\n            zIndex: 1\r\n        };\r\n\r\n        let level = this.props.repository.getLevel(header);\r\n        let headerSize = this.props.repository.getSize(header);\r\n\r\n        if (type === HeaderType.Row) {\r\n            style.left = this.props.repository.getLeftLevelPosition(level); // 0;\r\n            style.width = this.props.repository.getLeftLevelWidth(level, header.$collapsed); // headersWidth;\r\n            style.top = this.props.repository.getPosition(header) - scrollPos;\r\n            style.height = headerSize;\r\n\r\n            let levels = this.props.repository.leftLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.width = this.props.repository.offsetWidth - style.left;\r\n            }\r\n        } else {\r\n            style.top = this.props.repository.getTopLevelPosition(level);\r\n            style.height = this.props.repository.getTopLevelHeight(level, header.$collapsed); // headersHeight;\r\n            style.left = this.props.repository.getPosition(header) - scrollPos;\r\n            style.width = headerSize;\r\n\r\n            let levels = this.props.repository.topLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.height = this.props.repository.offsetHeight - style.top;\r\n            }\r\n        }\r\n\r\n        let selection = false;\r\n\r\n        if (this.props.onRenderSelection) {\r\n            for (let s of this._selection) {\r\n                if (type === HeaderType.Row) {\r\n                    if (index >= s.row && index <= (s.row + s.height)) {\r\n                        selection = true;\r\n                        break;\r\n                    }\r\n                } else {\r\n                    if (index >= s.column && index <= (s.column + s.width)) {\r\n                        selection = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let headerParent = this.props.repository.getParent(header);\r\n\r\n        let cell = this.props.onRenderHeader({\r\n            type, header, style, parent,\r\n            selection: parent ? false : selection,\r\n            parentHeader: headerParent,\r\n            theme: this.props.theme,\r\n            viewIndex: this.props.repository.getViewIndex(header)\r\n        });\r\n\r\n        let eventHandlers: React.HTMLProps<HTMLDivElement> = null;\r\n\r\n        if (this.props.onRenderSelection) {\r\n            eventHandlers = {\r\n                onMouseDown: this._onHeaderMouseDownHeader\r\n            };\r\n        }\r\n\r\n        out.push(React.cloneElement(React.Children.only(cell), {\r\n            'x-type': type,\r\n            'x-id': $id,\r\n            'x-lvl': level,\r\n            key: $id,\r\n            ...eventHandlers\r\n        }));\r\n\r\n        if (headerParent) {\r\n            this._renderHeader(out, type, index, headerParent, scrollPos, lock, true);\r\n        }\r\n    }\r\n\r\n    private _renderHeaders(type: HeaderType, scrollPos: number) {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const isRow = type === HeaderType.Row;\r\n        const first = isRow ? firstRow : firstColumn;\r\n        const last = isRow ? lastRow : lastColumn;\r\n        const max = isRow ? this._rowCount : this._columnCount;\r\n        const headers = isRow ? this.props.repository.rows : this.props.repository.columns;\r\n\r\n        let len = Math.max(0, Math.min(max - first, 1 + last - first));\r\n        let jsx: JSX.Element[] = [];\r\n        let lock = new Set<string | number>();\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let ix = i + first;\r\n            this._renderHeader(jsx, type, ix, headers[ix], scrollPos, lock, false);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {jsx}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private _renderResizing({ scrollLeft, scrollTop }: IScrollViewUpdateEvent) {\r\n        if (!this.props.onRenderResizer || !this.state.resizeHeaderPreview && !this.state.resizeLevelPreview) {\r\n            return null;\r\n        }\r\n\r\n        let type: 'level' | 'header';\r\n        let orientation: 'horizontal' | 'vertical';\r\n\r\n        let styleInitial = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            zIndex: 100\r\n        } as React.CSSProperties;\r\n\r\n        let styleChanged = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            zIndex: 100\r\n        } as React.CSSProperties;\r\n\r\n        if (this.state.resizeHeaderPreview) {\r\n            type = 'header';\r\n\r\n            let { change, header } = this.state.resizeHeaderPreview;\r\n            let headerType = this.props.repository.getHeaderType(header);\r\n            let headerPosition = this.props.repository.getPosition(header);\r\n            let headerSize = this.props.repository.getSize(header);\r\n\r\n            if (headerType === HeaderType.Row) {\r\n                orientation = 'horizontal';\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = this.props.repository.offsetHeight + headerPosition - scrollTop;\r\n                styleInitial.height = headerSize;\r\n                styleChanged.height = headerSize + change;\r\n            } else {\r\n                orientation = 'vertical';\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = this.props.repository.offsetWidth + headerPosition - scrollLeft;\r\n                styleInitial.width = headerSize;\r\n                styleChanged.width = headerSize + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeLevelPreview) {\r\n            type = 'level';\r\n\r\n            let { change, header } = this.state.resizeLevelPreview;\r\n            let headerType = this.props.repository.getHeaderType(header);\r\n            let level = this.props.repository.getPositionLevel(header);\r\n\r\n            if (headerType === HeaderType.Row) { // resizing left level\r\n                orientation = 'vertical';\r\n                let position = this.props.repository.getLeftLevelPosition(level);\r\n                let size = this.props.repository.getLeftLevelWidth(level);\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = position;\r\n                styleInitial.width = size;\r\n                styleChanged.width = size + change;\r\n            } else { // resizing top level\r\n                orientation = 'horizontal';\r\n                let position = this.props.repository.getTopLevelPosition(level);\r\n                let size = this.props.repository.getTopLevelHeight(level);\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = position;\r\n                styleInitial.height = size;\r\n                styleChanged.height = size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeHeaderPreview || this.state.resizeLevelPreview) {\r\n            return (\r\n                <>\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleInitial, resizer: 'initial', theme: this.props.theme })}\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleChanged, resizer: 'changed', theme: this.props.theme })}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _isAddressOutOfBounds(cell: IGridAddress) {\r\n        let lastRow = this.props.repository.rows.length - 1;\r\n        let lastCol = this.props.repository.columns.length - 1;\r\n\r\n        return cell.column < 0 || cell.column > lastCol || cell.row < 0 || cell.row > lastRow;\r\n    }\r\n\r\n    private _getFilteredSelections() {\r\n        let lastCol = this.props.repository.columns.length - 1;\r\n        let lastRow = this.props.repository.rows.length - 1;\r\n\r\n        return this._selection.filter(({ column, row }) => {\r\n            return row <= lastRow && column <= lastCol;\r\n        });\r\n    }\r\n\r\n    private _renderSelections(): JSX.Element[] {\r\n        if (!this.props.onRenderSelection) {\r\n            return null;\r\n        }\r\n\r\n        const ctr = this.props.repository;\r\n\r\n        if (!ctr.columns.length || !ctr.rows.length) {\r\n            return null;\r\n        }\r\n\r\n        let jsx = this._getFilteredSelections().map(({ row, column, width, height }, i) => {\r\n            let l = ctr.getPosition(ctr.columns[column]);\r\n            let t = ctr.getPosition(ctr.rows[row]);\r\n            let w = ctr.columns.slice(column, column + width + 1).reduce((r, n) => r + ctr.getSize(n), 0);\r\n            let h = ctr.rows.slice(row, row + height + 1).reduce((r, n) => r + ctr.getSize(n), 0);\r\n\r\n            return this.props.onRenderSelection({\r\n                key: i,\r\n                active: false,\r\n                edit: !!this.state.edit,\r\n                theme: this.props.theme,\r\n                style: {\r\n                    position: 'absolute',\r\n                    zIndex: i,\r\n                    left: l,\r\n                    top: t,\r\n                    width: w,\r\n                    height: h\r\n                }\r\n            });\r\n        });\r\n\r\n        let ax = jsx.length;\r\n\r\n        if (!this._isAddressOutOfBounds(this._active)) {\r\n            let rh = ctr.rows[this._active.row];\r\n            let ch = ctr.columns[this._active.column];\r\n\r\n            jsx.push(this.props.onRenderSelection({\r\n                key: ax,\r\n                active: true,\r\n                edit: !!this.state.edit,\r\n                theme: this.props.theme,\r\n                style: {\r\n                    position: 'absolute',\r\n                    zIndex: ax,\r\n                    left: ctr.getPosition(ch),\r\n                    top: ctr.getPosition(rh),\r\n                    width: ctr.getSize(ch),\r\n                    height: ctr.getSize(rh)\r\n                }\r\n            }));\r\n        }\r\n\r\n        return jsx;\r\n    }\r\n\r\n    private _renderHeadersLayer = (event: IScrollViewUpdateEvent) => {\r\n        const { clientWidth, clientHeight, scrollLeft, scrollTop } = event;\r\n\r\n        const cornerJsx = (\r\n            this.props.onRenderHeaderCorner\r\n                ? this.props.onRenderHeaderCorner()\r\n                : null\r\n        );\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: clientWidth,\r\n                    height: clientHeight,\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1,\r\n                    overflow: 'hidden',\r\n                    position: 'absolute'\r\n                }}\r\n            >\r\n                {!!this.props.repository.offsetHeight &&\r\n                    <div\r\n                        className={this._theme.classNameGridColumns}\r\n                        style={{\r\n                            ...this._theme.styleGridColumns,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: this.props.repository.offsetWidth,\r\n                            top: 0,\r\n                            right: 0,\r\n                            height: this.props.repository.offsetHeight\r\n                        }}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Column, scrollLeft)}\r\n                    </div>\r\n                }\r\n                {!!this.props.repository.offsetWidth &&\r\n                    <div\r\n                        className={this._theme.classNameGridRows}\r\n                        style={{\r\n                            ...this._theme.styleGridRows,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: this.props.repository.offsetHeight,\r\n                            bottom: 0,\r\n                            width: this.props.repository.offsetWidth\r\n                        }}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Row, scrollTop)}\r\n                    </div>\r\n                }\r\n                {!!(this.props.repository.offsetHeight || this.props.repository.offsetWidth) &&\r\n                    <div\r\n                        className={this._theme.classNameGridCorner}\r\n                        style={{\r\n                            ...this._theme.styleGridCorner,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: 0,\r\n                            height: this.props.repository.offsetHeight,\r\n                            width: this.props.repository.offsetWidth\r\n                        }}\r\n                        onMouseDown={this._onCornerMouseDown}\r\n                    >\r\n                        {cornerJsx}\r\n                    </div>\r\n                }\r\n                {this._renderResizing(event)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _bodyRenderer = () => {\r\n        return (\r\n            <>\r\n                <div\r\n                    style={{\r\n                        height: Math.max(1, this._lastView.rowsHeight),\r\n                        width: Math.max(1, this._lastView.columnsWidth),\r\n                        boxSizing: 'border-box',\r\n                        position: 'relative',\r\n                        marginLeft: this._headersWidth,\r\n                        marginTop: this._headersHeight\r\n                    }}\r\n                >\r\n                    {this._renderData()}\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        pointerEvents: 'none',\r\n                        zIndex: 1,\r\n                        left: this._headersWidth,\r\n                        top: this._headersHeight\r\n                    }}\r\n                >\r\n                    {this._renderSelections()}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    public focus() {\r\n        if (this._ref) {\r\n            this._ref.focus();\r\n            this._focused = true;\r\n        }\r\n    }\r\n\r\n    public blur() {\r\n        if (this._ref) {\r\n            this._ref.blur();\r\n        }\r\n    }\r\n\r\n    /** TODO: instead of using column index - use cell position and viewport minus scroll size */\r\n    public scrollTo = (cell: { column?: number; row?: number; }) => {\r\n        const ctr = this.props.repository;\r\n\r\n        if (!this._refView || !ctr.columns.length || !ctr.rows.length) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n        let { column, row } = cell;\r\n\r\n        if (row != null) {\r\n            row = Math.min(Math.max(0, row), this._rowCount - 1);\r\n            if (row <= firstRow || row >= lastRow) {\r\n                let rowPos = ctr.getPosition(ctr.rows[row]);\r\n                if (row <= firstRow) { // to top\r\n                    this._refView.scrollTop = rowPos;\r\n                } else { // to bottom\r\n                    let rowSize = ctr.getSize(ctr.rows[row]);\r\n                    this._refView.scrollTop = rowPos + rowSize - this.state.viewHeight + this._headersHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (column != null) {\r\n            column = Math.min(Math.max(0, column), this._columnCount - 1);\r\n            if (column <= firstColumn || column >= lastColumn) {\r\n                let colPos = ctr.getPosition(ctr.columns[column]);\r\n                if (column <= firstColumn) { // to left\r\n                    this._refView.scrollLeft = colPos;\r\n                } else { // to right\r\n                    let colSize = ctr.getSize(ctr.columns[column]);\r\n                    this._refView.scrollLeft = colPos + colSize - this.state.viewWidth + this._headersWidth;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public openEditor = (cell: IGridAddress) => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let e = this.state.edit;\r\n\r\n        if (e) {\r\n            if (e.row === cell.row && e.column === cell.column) {\r\n                return;\r\n            }\r\n\r\n            this.closeEditor(true, () => {\r\n                this.setState({ edit: cell });\r\n            });\r\n            return;\r\n        }\r\n\r\n        let ch = this.props.repository.columns[cell.column];\r\n        let rh = this.props.repository.rows[cell.row];\r\n        let hs = { column: ch, row: rh, source: 'editor' } as IGridReadOnlyEvent;\r\n\r\n        if (ch && rh && !this._ctrlIsNoEditor(hs) && !this._ctrlIsReadOnly(hs)) {\r\n            this.setState({ edit: cell });\r\n        }\r\n    }\r\n\r\n    public closeEditor = (commit: boolean, callback?: () => void) => {\r\n        if (!this.state.edit) {\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: null }, () => {\r\n            let e = this._currentEdit;\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            if (this.props.onUpdate && e) {\r\n                let { col, row, nextValue, updatedValue } = e;\r\n\r\n                if (commit && updatedValue) {\r\n                    this.props.onUpdate({ cell: { row, column: col }, value: nextValue });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public resizeHeaders(e: IGridResizeCombinedEvent) {\r\n        if (this.props.onHeaderResize) {\r\n            this.props.onHeaderResize(e);\r\n        }\r\n    }\r\n\r\n    public updateSelection = ({ active, selection }: IUpdateSelectionEvent, callback?: () => void) => {\r\n        if (!active && !selection) {\r\n            return;\r\n        }\r\n\r\n        let nextActive = active || this._active;\r\n        let nextSelection = selection || this._selection;\r\n        let notifyActiveChanged = this._ctrlGetActiveNotifier(this._active, nextActive);\r\n        let notifySelectionChanged = this._ctrlGetSelectionNotifier(this._selection, nextSelection);\r\n\r\n        this.setState({\r\n            active: nextActive,\r\n            selection: nextSelection\r\n        }, () => {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            if (notifyActiveChanged || notifySelectionChanged) {\r\n                let e: IGridSelectionEvent = {};\r\n\r\n                if (notifyActiveChanged) {\r\n                    e.active = notifyActiveChanged;\r\n                }\r\n\r\n                if (notifySelectionChanged) {\r\n                    e.selection = notifySelectionChanged;\r\n                }\r\n\r\n                this.props.onSelection(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    public autoMeasure(headers: IHeader[], type: 'levels' | 'cells' = 'cells') {\r\n        if (!headers || !headers.length || this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const repository = this.props.repository;\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const headerType = repository.getHeaderType(headers[0]);\r\n        const diffHeaders = headers.filter(h => repository.getHeaderType(h) !== headerType);\r\n        const cellNodes: ICellRenderBaseEvent[] = [];\r\n        headers = headers.filter(h => repository.getHeaderType(h) === headerType);\r\n\r\n        if (diffHeaders.length) {\r\n            this.autoMeasure(diffHeaders, type);\r\n        }\r\n\r\n        if (type === 'cells') {\r\n            const batch = headers.map(h => repository.getHeaderLeaves(h));\r\n            const { columns, rows } = repository;\r\n\r\n            for (let list of batch) {\r\n                for (let h of list) {\r\n                    let t = repository.getHeaderType(h);\r\n\r\n                    if (t === HeaderType.Column) {\r\n                        let c = repository.getViewIndex(h);\r\n\r\n                        for (let r = firstRow; r <= lastRow; r++) {\r\n                            if (columns[c] && rows[r]) {\r\n                                cellNodes.push({\r\n                                    column: c,\r\n                                    row: r,\r\n                                    columnHeader: columns[c],\r\n                                    rowHeader: rows[r]\r\n                                });\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let r = repository.getViewIndex(h);\r\n\r\n                        for (let c = firstColumn; c <= lastColumn; c++) {\r\n                            if (columns[c] && rows[r]) {\r\n                                cellNodes.push({\r\n                                    column: c,\r\n                                    row: r,\r\n                                    columnHeader: columns[c],\r\n                                    rowHeader: rows[r]\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (type === 'cells') {\r\n            headers = repository.getNodesTopDown(headers);\r\n        } else {\r\n            const levels = new Set<number>();\r\n            headers.forEach((h) => {\r\n                levels.add(repository.getPositionLevel(h));\r\n            });\r\n\r\n            const list = (\r\n                headerType === HeaderType.Column\r\n                    ? repository.columns.slice(firstColumn, lastColumn + 1)\r\n                    : repository.rows.slice(firstRow, lastRow + 1)\r\n            );\r\n\r\n            headers = repository.getNodesBottomUp(list).filter(h => levels.has(repository.getPositionLevel(h)));\r\n        }\r\n\r\n        const headerNodes = headers.map((h) => {\r\n            return {\r\n                index: repository.getViewIndex(h),\r\n                type: repository.getHeaderType(h),\r\n                level: repository.getPositionLevel(h),\r\n                header: h\r\n            };\r\n        });\r\n\r\n        this.props.onAutoMeasure({\r\n            cells: cellNodes,\r\n            headers: headerNodes,\r\n            data: this.props.data,\r\n            callback: (result: IMeasureResult) => {\r\n                this._onAutoMeasureApply(result, 'reset', type, headerType);\r\n            }\r\n        });\r\n    }\r\n\r\n    public previewResizeHeader(resizeHeaderPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeHeaderPreview });\r\n    }\r\n\r\n    public previewResizeLevel(resizeLevelPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeLevelPreview });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        document.body.addEventListener('contextmenu', this._onContextMenuListener = (e: any) => {\r\n            if (this._blockContextMenu) {\r\n                this._blockContextMenu = false;\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentDidUpdate(pp: IGridProps) {\r\n        const isSourceChanged = pp.data !== this.props.data;\r\n        const isHeadersChanged = pp.repository !== this.props.repository;\r\n\r\n        if (this.state.edit && (isSourceChanged || isHeadersChanged)) {\r\n            this.closeEditor(false);\r\n        }\r\n\r\n        this._onAfterUpdate();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._detached = true;\r\n        document.body.removeEventListener('contextmenu', this._onContextMenuListener);\r\n        this._kbCtr.dispose();\r\n        this._msCtr.dispose();\r\n    }\r\n\r\n    public render() {\r\n        this._createView();\r\n        this._createOverscan();\r\n\r\n        const ScrollView = this.props.scrollViewClass || FallbackScrollView;\r\n\r\n        return (\r\n            <Context.Provider value={{ grid: this, repository: this.props.repository }}>\r\n                <div\r\n                    className={this._theme.classNameGrid}\r\n                    tabIndex={this.props.tabIndex}\r\n                    ref={this._onRef}\r\n                    onBlur={this._onBlur}\r\n                    onFocus={this._onFocus}\r\n                    style={{\r\n                        display: 'block',\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        position: 'relative',\r\n                        userSelect: 'none',\r\n                        outline: 'none',\r\n                        overflow: 'hidden',\r\n                        ...this._theme.styleGrid\r\n                    }}\r\n                    onKeyDown={this._onKeyDown}\r\n                    onMouseLeave={this._onRootMouseLeave}\r\n                    onMouseEnter={this._onRootMouseEnter}\r\n                    onMouseDown={this._onRootMouseDown}\r\n                >\r\n                    <ScrollView\r\n                        className={this._theme.classNameScrollView}\r\n                        ref={this._onRefView}\r\n                        onScroll={this._onScrollViewUpdate}\r\n                        style={this._scrollerStyle}\r\n                        headersRenderer={this._renderHeadersLayer}\r\n                        bodyRenderer={this._bodyRenderer}\r\n                        preserveScrollbars={this.props.preserveScrollbars}\r\n                    />\r\n                </div>\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n"]}