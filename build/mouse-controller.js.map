{"version":3,"sources":["mouse-controller.ts"],"names":[],"mappings":"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","file":"mouse-controller.js","sourcesContent":["import { MouseEvent } from 'react';\r\nimport { IGridAddress, HeaderType } from './types';\r\nimport { Controller, IControllerProps } from './base-controller';\r\n\r\nexport interface IMouseControllerProps extends IControllerProps {\r\n    onRightClick: (cell: IGridAddress, event: React.MouseEvent<HTMLElement>, select: () => void, inside: boolean) => void;\r\n}\r\n\r\nexport class MouseController extends Controller {\r\n    protected _lastMouseDown = {\r\n        time: 0,\r\n        row: -1,\r\n        column: -1\r\n    };\r\n    protected _down: {\r\n        row: number;\r\n        column: number;\r\n    } = null;\r\n    protected _scrollBySelect: { h: 'L' | 'R', v: 'T' | 'B' } = null;\r\n    protected _scrollTask: any = null;\r\n\r\n    constructor(protected _props: IMouseControllerProps) {\r\n        super(_props);\r\n        window.addEventListener('mouseup', this._mouseup);\r\n    }\r\n\r\n    protected _mouseSelectFromActive(row: number, column: number) {\r\n        let { selection, active } = this._state;\r\n        let { prev } = this._splitSelection(selection);\r\n        let last = { row, column, width: 0, height: 0 };\r\n\r\n        if (column <= active.column) {\r\n            last.width = active.column - column;\r\n        } else {\r\n            last.column = active.column;\r\n            last.width = column - active.column;\r\n        }\r\n\r\n        if (row <= active.row) {\r\n            last.height = active.row - row;\r\n        } else {\r\n            last.row = active.row;\r\n            last.height = row - active.row;\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [\r\n                ...prev,\r\n                last\r\n            ]\r\n        });\r\n    }\r\n\r\n    protected _autoscroll = () => {\r\n        if (!this._scrollBySelect) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns, view } = this._request();\r\n        let { h, v } = this._scrollBySelect;\r\n        let scroll = {\r\n            row: null as number,\r\n            column: null as number\r\n        };\r\n\r\n        if (h === 'L') {\r\n            if (view.firstColumn) {\r\n                scroll.column = view.firstColumn - 1;\r\n            }\r\n        } else if (h === 'R') {\r\n            if (view.lastColumn !== columns - 1) {\r\n                scroll.column = view.lastColumn + 1;\r\n            }\r\n        }\r\n\r\n        if (v === 'T') {\r\n            if (view.firstRow) {\r\n                scroll.row = view.firstRow - 1;\r\n            }\r\n        } else if (v === 'B') {\r\n            if (view.lastRow !== rows - 1) {\r\n                scroll.row = view.lastRow + 1;\r\n            }\r\n        }\r\n\r\n        this._props.onScroll(scroll);\r\n    }\r\n\r\n    protected _mouseup = () => {\r\n        this._down = null;\r\n        this.rootenter();\r\n    }\r\n\r\n    public rootleave(x: number, y: number, rect: ClientRect) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n\r\n        this._scrollBySelect = {\r\n            h: null,\r\n            v: null\r\n        };\r\n\r\n        if (x <= rect.left) {\r\n            this._scrollBySelect.h = 'L';\r\n        } else if (x >= rect.left + rect.width) {\r\n            this._scrollBySelect.h = 'R';\r\n        }\r\n\r\n        if (y <= rect.top) {\r\n            this._scrollBySelect.v = 'T';\r\n        } else if (y >= rect.top + rect.height) {\r\n            this._scrollBySelect.v = 'B';\r\n        }\r\n\r\n        this._scrollTask = setInterval(this._autoscroll, 50);\r\n    }\r\n\r\n    public rootenter() {\r\n        if (this._scrollTask) {\r\n            clearInterval(this._scrollTask);\r\n            this._scrollTask = null;\r\n        }\r\n\r\n        this._scrollBySelect = null;\r\n    }\r\n\r\n    public mouseenter(row: number, column: number) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n        this._mouseSelectFromActive(row, column);\r\n    }\r\n\r\n    public headerdown(e: MouseEvent<HTMLElement>, type: HeaderType, first: number, last = first) {\r\n        if (e.defaultPrevented) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        const { enabled, editor, rows, columns } = this._request();\r\n\r\n        if (!enabled || editor) {\r\n            return;\r\n        }\r\n\r\n        let active = {\r\n            row: type === HeaderType.Column ? 0 : first,\r\n            column: type === HeaderType.Column ? first : 0\r\n        };\r\n\r\n        this._props.onUpdateSelection({\r\n            active,\r\n            selection: [{\r\n                ...active,\r\n                height: type === HeaderType.Column ? rows - 1 : last - first,\r\n                width: type === HeaderType.Column ? last - first : columns - 1\r\n            }]\r\n        });\r\n    }\r\n\r\n    public mousedown(e: MouseEvent<HTMLElement>, row: number, column: number) {\r\n        const { enabled, selection, editor } = this._request();\r\n\r\n        if (!enabled) {\r\n            return;\r\n        }\r\n\r\n        const { cmdKey, shiftKey } = this._getModifiers(e);\r\n\r\n        const clickInEditor = editor && editor.row === row && editor.column === column;\r\n\r\n        if (!clickInEditor && e.button !== 1) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (editor && !clickInEditor && e.button !== 1) {\r\n            this._props.onCloseEditor(true);\r\n        }\r\n\r\n        if (!cmdKey && shiftKey && e.button === 0) {\r\n            this._mouseSelectFromActive(row, column);\r\n            this._down = { row, column };\r\n        } else if (cmdKey && !shiftKey && e.button == 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [\r\n                    ...selection,\r\n                    { row, column, height: 0, width: 0 }\r\n                ]\r\n            });\r\n            this._down = { row, column };\r\n        } else if (e.button === 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            let t = Date.now();\r\n            let openEditor = (\r\n                !clickInEditor &&\r\n                t - this._lastMouseDown.time < 500 &&\r\n                this._lastMouseDown.row === row &&\r\n                this._lastMouseDown.column === column\r\n            );\r\n\r\n            this._lastMouseDown.time = t;\r\n            this._lastMouseDown.row = row;\r\n            this._lastMouseDown.column = column;\r\n\r\n            if (openEditor) {\r\n                this._down = null;\r\n                if (editor) {\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._props.onOpenEditor({ row, column });\r\n                    });\r\n                } else {\r\n                    this._props.onOpenEditor({ row, column });\r\n                }\r\n            } else {\r\n                this._down = { row, column };\r\n            }\r\n        } else if (e.button === 2) {\r\n            e.persist();\r\n            let cell: IGridAddress = { row, column };\r\n            let inside = this._isInsideSelection(cell, selection);\r\n            let select = () => {\r\n                this._props.onUpdateSelection({\r\n                    active: { row, column },\r\n                    selection: [{ row, column, height: 0, width: 0 }]\r\n                });\r\n            };\r\n\r\n            this._props.onRightClick(cell, e, select, inside);\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this.rootenter();\r\n        window.removeEventListener('mouseup', this._mouseup);\r\n    }\r\n}\r\n\r\nexport default MouseController;\r\n"]}