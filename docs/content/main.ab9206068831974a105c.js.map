{"version":3,"sources":["webpack:///./src/components/index.tsx","webpack:///./src/components/app.tsx","webpack:///./src/components/ui/toolbar.tsx","webpack:///./src/components/ui/toolbar.scss","webpack:///./src/components/ui/app-max-width.scss","webpack:///./src/components/ui/navigation-item.tsx","webpack:///./src/components/ui/navigation-item.scss","webpack:///./src/components/ui/github-icon.tsx","webpack:///./src/components/ui/github-icon.scss","webpack:///./src/components/ui/page.tsx","webpack:///./src/components/ui/page.scss","webpack:///./src/components/ui/page-articles.tsx","webpack:///./src/components/ui/page-articles.scss","webpack:///./src/components/ui/code.tsx","webpack:///../src/models/index.ts","webpack:///../src/controllers/controller.ts","webpack:///./src/components/ui/markdown.tsx","webpack:///./src/articles/content/grid-theme.ts","webpack:///./src/components/ui/markdown.scss","webpack:///./src/components/ui/code-view.tsx","webpack:///./src/components/ui/code-view.scss","webpack:///./src/articles/content ./node_modules/raw-loader ^\\.\\/.*$","webpack:///./src/articles/content ^\\.\\/.*$","webpack:///../src/components/grid.tsx","webpack:///../src/controllers/debounce.ts","webpack:///../src/controllers/keyboard.ts","webpack:///../src/controllers/mouse.ts","webpack:///../src/models/container.ts","webpack:///../src/controllers/scrollbar-size.ts","webpack:///../src/controllers/shallow.ts","webpack:///../src/controllers/relative-position.ts","webpack:///../src/controllers/render.tsx","webpack:///../src/components/resizer.tsx","webpack:///./src/components/ui/split-view.tsx","webpack:///./src/components/ui/split-view.scss","webpack:///./src/components/ui/scroll-view.tsx","webpack:///./src/components/ui/scroll-view.scss","webpack:///./src/articles/examples.ts","webpack:///./src/articles/index.ts","webpack:///./src/articles/example-simple.md","webpack:///./src/components/app.scss","webpack:///./src/components/ui/app-max-width.tsx","webpack:///./src/articles/content/example-grid-simple.tsx?250c","webpack:///./src/articles/content/grid-theme.ts?be2e","webpack:///./src/articles/content/simple-editor.tsx?e460","webpack:///./src/articles/content/example-grid-simple.tsx","webpack:///../src/index.tsx","webpack:///../src/components/index.tsx","webpack:///../src/components/scrollview.tsx","webpack:///../src/controllers/index.ts","webpack:///../src/models/header.ts","webpack:///../src/controllers/renderthrottler.ts","webpack:///./src/articles/content/simple-editor.tsx","webpack:///./src/index.tsx","webpack:///./src/components/ui/index.tsx"],"names":["__export","__webpack_require__","React","ui_1","react_router_dom_1","examples_1","Style","App","_super","__extends","prototype","render","createElement","Fragment","Toolbar","NavigationItem","exact","location","target","href","GitHubIcon","className","main","Switch","Route","path","Page","PageArticles","source","default","footer","AppMaxWidth","classNameLayer","footerContent","Component","exports","app_max_width_1","root","layer","this","props","children","PureComponent","module","classnames","orientation","NavLink","to","_a","left","top","right","bottom","activeClassName","selected","PATH","join","size","viewBox","style","--svg-icon--size","d","index_1","_renderNavigation","navigation","navigtaion","map","i","caption","key","content","_this","apply","arguments","state","_onUpdate","prev","next","url","articles","forEach","name","article","body","loc","push","setState","_renderArticle","p","chunk","Markdown","files","example","height","CodeView","componentDidMount","componentDidUpdate","react_syntax_highlighter_1","CodeTheme","CODE_STYLE_PROPS","margin","boxSizing","overflowY","overflowX","display","background","Code","showLineNumbers","language","customStyle","IS_MACOS","navigator","platform","slice","Controller","_props","_state","_getModifiers","e","ctrlKey","altKey","shiftKey","cmdKey","getModifierState","macCmdKey","_clampAddress","column","row","_b","rows","columns","Math","min","max","_splitSelection","selection","last","pop","_getSelectedCells","_i","selection_1","length","width","r","rLast","c","cLast","Object","keys","sort","k","_request","getState","MDRenderer","_codeInlineRenderer","value","code","_codeMultilineRenderer","multilineCode","renderers","inlineCode","THEME","__assign","scrollbarWidth","scrollbarWidthMinimized","scrollbarMinimizeDistance","styleTrackRoot","transition","styleThumb","styleGridColumns","boxShadow","color","styleGridRows","styleGridCorner","borderRight","borderBottom","cellTextColor","cellBorderColor","cellBackgroundEven","cellBackgroundOdd","editorBorderColor","editorBackground","headerBorderColor","headerBorderColorSelected","headerBackgroundColorSelected","selectionBackground","selectionBackgroundActive","selectionBorder","selectionBorderActive","resizerBackground","tab","_extractFile","file","filename","_renderFileContent","D","_renderTabs","tabSelected","onClick","area-hidden","maxHeight","controls","SplitView","ScrollView","container","lock","./example-grid-simple","./example-grid-simple.tsx","./grid-theme","./grid-theme.ts","./simple-editor","./simple-editor.tsx","webpackContext","req","webpackContextResolve","id","Error","resolve","PropTypes","scrollview_1","controllers_1","models_1","Grid","call","_blockContextMenu","_onContextMenuListener","_rt","RenderThrottler","_scrollUpdateTrottled","create","_ref","_refView","_scrollerProps","willChange","zIndex","_lastView","_lastOverscan","_focused","_kbCtr","_msCtr","_currentEdit","scrollLeft","scrollTop","viewHeight","viewWidth","active","edit","resizeHeaderPreview","resizeLevelPreview","_onRef","_onRefView","_onBlur","_onFocus","_onScrollViewUpdate","clientWidth","clientHeight","_onKeyDown","persist","keydown","_onMouseDown","Number","currentTarget","getAttribute","focus","mousedown","_onMouseDownHeader","type","h","headers","getHeader","onHeaderRightClick","header","event","defaultPrevented","indices","getHeaderLeaves","v","getViewIndex","headerdown","_onMouseEnter","mouseenter","_onRootMouseLeave","x","pageX","y","pageY","rect","getBoundingClientRect","rootleave","_onRootMouseEnter","rootenter","_onRootMouseDown","button","_renderHeaderContainers","pointerEvents","headersHeight","_theme","classNameGridColumns","position","overflow","headersWidth","_renderHeaders","HeaderType","Column","classNameGridRows","Row","classNameGridCorner","_renderResizing","openEditor","cell","readOnly","closeEditor","commit","callback","onUpdate","col","nextValue","updatedValue","_onAfterUpdate","debounce","bind","editor","focused","_columnCount","_rowCount","view","onScroll","scrollTo","onUpdateSelection","KeyboardController","onCloseEditor","onOpenEditor","onCopy","cells","withHeaders","onPaste","clipboard","getAllSelectedCells","getLastSelectedCells","onNullify","onRemove","onSpace","MouseController","onRightClick","getChildContext","grid","defineProperty","theme","styleGrid","_onAutoMeasureApply","result","behavior","filter","columnHeaders","rowHeaders","result_1","rowIndex","columnIndex","ch","getManualResized","$size","getHeaderType","rh","onHeaderResize","concat","_onAutoMeasure","onAutoMeasure","firstColumn","firstRow","lastRow","lastColumn","columnHeader","rowHeader","_createView","sl","st","vw","_headersWidth","vh","_headersHeight","rowsHeight","columnsWidth","colIndex","_c","rhLast","chLast","getPosition","_createOverscan","overscanRows","overscanColumns","_prepareCellProps","_renderCell","onRenderCell","cloneElement","Children","only","x-row","x-col","onMouseDown","onMouseEnter","_renderEditor","onRenderEditor","cellProps","close","update","_renderData","columnCount","rowCount","irlen","iclen","jsx","Array","ir","ic","_renderHeader","out","index","scrollPos","parent","$id","$children","level","getLevel","getLeftLevelPosition","getLeftLevelWidth","leftLevels","getTopLevelPosition","getTopLevelHeight","topLevels","s","headerParent","getParent","onRenderHeader","parentHeader","viewIndex","x-type","x-id","isRow","first","len","ix","onRenderResizer","styleInitial","styleChanged","change","headerType","headerPosition","resizer","_renderSelections","l","t","w","reduce","n","onRenderSelection","ax","blur","rowPos","rowSize","colPos","colSize","resizeHeaders","resizeLevel","onHeaderLevelResize","autoMeasure","batch","batch_1","list_1","previewResizeHeader","previewResizeLevel","document","addEventListener","preventDefault","componentWillUnmount","removeEventListener","dispose","classNameGrid","tabIndex","ref","onBlur","onFocus","userSelect","outline","onKeyDown","onMouseLeave","scrollerProps","renderAfter","marginLeft","marginTop","childContextTypes","object","time","fn","task","args","clearTimeout","setTimeout","_paste","clipboardData","_isInput","keyCode","_moveSelection","direction","distance","nextScroll","nextActive","nextSelection","delta","newColumn","newWidth","newRow","newHeight","lastPos","_onTab","insideSelection","_onEnter","_onSpace","_onPageUpDown","pageColumns","pageRows","_onHomeEnd","_onArrows","_onCopy","_onNullify","_onRemove","rowMap","colMap","_onSelectAll","_onData","_lastMouseDown","_down","_scrollBySelect","_scrollTask","_autoscroll","scroll","_mouseup","window","_mouseSelectFromActive","setInterval","clearInterval","clickInEditor","Date","now","err","console","log","header_1","HeadersContainer","_idCounter","_idMap","viewColumns","viewRows","viewLeftLevels","viewTopLevels","types","positions","levels","parents","manualResized","_create","_calcPosition","_calcLevels","toJSON","list","assignParent","$collapsed","_createClone","_applyHeaderLevel","seek","_applyParentPosition","_proceedHeaders","from","cursor","parent_1","columnWidth","rowHeight","_getLevelPosition","_getLeaves","_getResizeList","clamp","prevSize","leaves","floor","m","_getHeaderAddress","reverse","_mapBranch","address","_recalcHeaders","_updateHeaders","branchMap","sourceList","branchList","branch","split","updateMap","getSource","updateFilter","updateHeaders","updates","mapColumns","mapRows","branchName","u","isManual_1","Infinity","getScrollbarSize","appendChild","removeChild","is","Shallow","nextKeys","prevKeys","prevKeys_1","hasOwnProperty","getRelativePosition","element","parentElement","offsetLeft","offsetTop","offsetParent","getProps","Resizer","_moving","_moveListener","_upListener","_escListener","_moved","_container","_unbind","movingType","_lastClick","_grid","start","_onChange","ev","_onMove","context","_r","contextTypes","renderthrottler_1","initial","drag","_mounted","_t","_mousemove","throttle","nextPosition","minimum","a","toArray","react_bolivianite_grid_1","classNameTrackRoot","scrollViewTrack","classNameThumb","scrollViewThumb","Article","grid_theme_1","Example","data","fill","renderCell","padding","alignItems","renderHeader","rcolor","bcolor","nextStyle","backgroundColor","justifyContent","excelIndex","renderSelection","border","b","String","fromCharCode","components_1","xEnabled","yEnabled","minimized","_scrollBarSize","_taskResize","_xpos","_ypos","_xratio","_yratio","_xsize","_ysize","_xlen","_ylen","_xmove","_xmoveScrollPos","_ymove","_ymoveScrollPos","_onRefA","_onRefX","_x","_onRefY","_y","_onScroll","_updateScrollbars","_getUpdateEventObject","_onMouseDownX","clientX","_onMouseDownY","clientY","_onMouseMove","_onRootMouseMove","_onMouseUp","forceUpdate","_onScrollMouseY","cp","nativeEvent","offsetY","sp","ss","scrollHeight","_onScrollMouseX","offsetX","scrollWidth","scrollbarTrackMinimum","_joinClassNames","cn","trim","_joinStyles","assign","_getClassNames","classNameTrack","_getStyles","styleTrack","cb","scrollbarSize","sx","sy","sm","viewportWidth","viewportHeight","round","_renderBody","ap","middleLayer","_renderXScrollbar","scrollSize","_renderYScrollbar","_renderZScrollbar","classNameTrackCorner","styleTrackCorner","offsetHeight","offsetWidth","rootWidth","rootHeight","canvasWidth","canvasHeight","newRootWidth","newRootHeight","newCanvasWidth","newCanvasHeight","currentScrollbarSize","onMouseMove","_ids","_tasks","_active","_step","f","requestAnimationFrame","Editor","initialValue","select","fontFamily","fontSize","onChange","ReactDOM","HashRouter","getElementsByTagName"],"mappings":"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","file":"content/main.ab9206068831974a105c.js","sourcesContent":["export * from './app';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/index.tsx","import * as React from 'react';\r\nimport { Toolbar, NavigationItem, GitHubIcon, Page, PageArticles, AppMaxWidth } from './ui';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport articlesExample from '~/articles/examples';\r\n\r\nconst Style = require('./app.scss');\r\n\r\nexport class App extends React.Component<any, any> {\r\n    public render() {\r\n        return (\r\n            <>\r\n                <Toolbar>\r\n                    <nav>\r\n                        <NavigationItem exact location=\"/\">\r\n                            Home\r\n                        </NavigationItem>\r\n                        <NavigationItem location=\"/examples\">\r\n                            Examples\r\n                        </NavigationItem>\r\n                        <NavigationItem location=\"/tutorial\">\r\n                            Tutorial\r\n                        </NavigationItem>\r\n                        <NavigationItem location=\"/api\">\r\n                            Api\r\n                        </NavigationItem>\r\n                    </nav>\r\n                    <div>\r\n                        <a target=\"blank\" href={process.env.GITHUB_URL}>\r\n                            <GitHubIcon />\r\n                        </a>\r\n                    </div>\r\n                </Toolbar>\r\n                <main className={Style.main}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Page>?Home?</Page>\r\n                        </Route>\r\n                        <Route exact path=\"/examples/:article?\">\r\n                            <PageArticles source={articlesExample} />\r\n                        </Route>\r\n                        <Route exact path=\"/tutorial/:article?\">\r\n                            <Page>?Tutorial?</Page>\r\n                        </Route>\r\n                        <Route exact path=\"/api/:article?\">\r\n                            <Page>?Api?</Page>\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n                <footer className={Style.footer}>\r\n                    <AppMaxWidth classNameLayer={Style.footerContent}>\r\n                        ?Footer?\r\n                    </AppMaxWidth>\r\n                </footer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/app.tsx","import * as React from 'react';\r\nconst Style = require('./toolbar.scss');\r\nimport { AppMaxWidth } from './app-max-width';\r\n\r\nexport class Toolbar extends React.PureComponent<any, any> {\r\n    public render() {\r\n        return (\r\n            <header className={Style.root}>\r\n                <AppMaxWidth>\r\n                    <div className={Style.layer}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </AppMaxWidth>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/toolbar.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"toolbar__root___1lQhY\",\"layer\":\"toolbar__layer___IB7bU\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/toolbar.scss\n// module id = 117\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"app-max-width__root___M7Ciq\",\"layer\":\"app-max-width__layer___2MB4F\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/app-max-width.scss\n// module id = 118\n// module chunks = 1","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Style = require('./navigation-item.scss');\r\n\r\nexport interface IToolbarTabProps {\r\n    exact?: boolean;\r\n    orientation?: 'left' | 'top' | 'right' | 'bottom';\r\n    location: string;\r\n}\r\n\r\nexport class NavigationItem extends React.Component<IToolbarTabProps, {}> {\r\n    public render() {\r\n        const orientation = this.props.orientation || 'bottom';\r\n\r\n        return (\r\n            <NavLink\r\n                exact={this.props.exact}\r\n                to={this.props.location}\r\n                className={classnames(Style.root, {\r\n                    [Style.left]: orientation === 'left',\r\n                    [Style.top]: orientation === 'top',\r\n                    [Style.right]: orientation === 'right',\r\n                    [Style.bottom]: orientation === 'bottom',\r\n                })}\r\n                activeClassName={Style.selected}\r\n            >\r\n                {this.props.children}\r\n            </NavLink>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/navigation-item.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"navigation-item__root___3awM5\",\"left\":\"navigation-item__left___2yB8f\",\"top\":\"navigation-item__top___1WMzF\",\"right\":\"navigation-item__right___30Tmp\",\"bottom\":\"navigation-item__bottom___3jO_J\",\"selected\":\"navigation-item__selected___3eEvG\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/navigation-item.scss\n// module id = 120\n// module chunks = 1","import * as React from 'react';\r\nconst Style = require('./github-icon.scss');\r\n\r\nconst PATH = [\r\n    `M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-`,\r\n    `.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 `,\r\n    `2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-`,\r\n    `3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 `,\r\n    `3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.`,\r\n    `5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3`\r\n].join('');\r\n\r\nexport interface IGithubIconProps {\r\n    size?: number;\r\n}\r\n\r\nexport class GitHubIcon extends React.PureComponent<IGithubIconProps, any> {\r\n    public render() {\r\n        const size = this.props.size || 24;\r\n\r\n        return (\r\n            <svg\r\n                className={Style.root}\r\n                viewBox={`0 0 ${size} ${size}`}\r\n                style={{\r\n                    '--svg-icon--size': `${size}px`\r\n                }}\r\n            >\r\n                <path d={PATH} />\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/github-icon.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"github-icon__root___2VE6z\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/github-icon.scss\n// module id = 122\n// module chunks = 1","import * as React from 'react';\r\nimport { NavigationItem, AppMaxWidth } from './index';\r\nconst Style = require('./page.scss');\r\n\r\nexport interface IPageProps {\r\n    navigation?: [string, string][];\r\n}\r\n\r\nexport class Page extends React.Component<IPageProps, {}> {\r\n    private _renderNavigation() {\r\n        if (!this.props.navigation) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <nav className={Style.navigtaion}>\r\n                {this.props.navigation.map(([location, caption], i) => {\r\n                    return (\r\n                        <NavigationItem orientation=\"left\" exact location={location} key={i}>\r\n                            {caption}\r\n                        </NavigationItem>\r\n                    );\r\n                })}\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <AppMaxWidth classNameLayer={Style.content}>\r\n                {this._renderNavigation()}\r\n                {this.props.children}\r\n            </AppMaxWidth>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/page.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"content\":\"page__content___2FPb4\",\"navigtaion\":\"page__navigtaion___3uktV\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/page.scss\n// module id = 124\n// module chunks = 1","import * as React from 'react';\r\nimport { Page, CodeView, ICodeViewProps, Markdown } from './index';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IArticlesSource } from '~/articles';\r\nconst Style = require('./page-articles.scss');\r\n\r\nexport interface IPageArticlesProps {\r\n    source?: IArticlesSource;\r\n}\r\n\r\nexport interface IPageArticlesState {\r\n    navigation?: [string, string][];\r\n    articles?: {\r\n        url: string;\r\n        body: (string | ICodeViewProps)[];\r\n    }[];\r\n}\r\n\r\nexport class PageArticles extends React.Component<IPageArticlesProps, IPageArticlesState> {\r\n    state: IPageArticlesState = {};\r\n\r\n    private _onUpdate(prev: IPageArticlesProps, next: IPageArticlesProps) {\r\n        if (prev.source === next.source || !next.source) {\r\n            return;\r\n        }\r\n\r\n        const { url, articles: body } = next.source;\r\n\r\n        let navigation: [string, string][] = [];\r\n        let articles: {\r\n            url: string;\r\n            body: (string | ICodeViewProps)[];\r\n        }[] = [];\r\n\r\n        body.forEach(({ name, caption, body: article }) => {\r\n            const loc = name ? `/${url}/${name}` : `/${url}`;\r\n\r\n            if (name) {\r\n                navigation.push([loc, caption]);\r\n            }\r\n\r\n            articles.push({\r\n                url: loc,\r\n                body: article\r\n            });\r\n        });\r\n\r\n        this.setState({ navigation, articles });\r\n    }\r\n\r\n    private _renderArticle(body: (string | ICodeViewProps)[]): JSX.Element[] {\r\n        return body.map((p, i) => {\r\n            if (typeof p === 'string') {\r\n                return (\r\n                    <section\r\n                        className={Style.chunk}\r\n                        key={i}\r\n                    >\r\n                        <Markdown source={p} />\r\n                    </section>\r\n                );\r\n            }\r\n\r\n            const { files, example, height } = p;\r\n\r\n            return (\r\n                <CodeView\r\n                    className={Style.chunk}\r\n                    key={i}\r\n                    files={files}\r\n                    example={example}\r\n                    height={height}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this._onUpdate({}, this.props);\r\n    }\r\n\r\n    public componentDidUpdate(prev: IPageArticlesProps) {\r\n        this._onUpdate(prev, this.props);\r\n    }\r\n\r\n    public render() {\r\n        if (!this.state.articles) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Page navigation={this.state.navigation}>\r\n                <Switch>\r\n                    {this.state.articles.map(({ url, body }) => {\r\n                        return (\r\n                            <Route exact path={url} key={url}>\r\n                                <article className={Style.body}>\r\n                                    {this._renderArticle(body)}\r\n                                </article>\r\n                            </Route>\r\n                        );\r\n                    })};\r\n                </Switch>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/page-articles.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"body\":\"page-articles__body___2Etmb\",\"chunk\":\"page-articles__chunk___21lRp\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/page-articles.scss\n// module id = 126\n// module chunks = 1","import * as React from 'react';\r\nimport CodeHighlighter from 'react-syntax-highlighter';\r\nconst CodeTheme = require('react-syntax-highlighter/styles/hljs/obsidian');\r\n\r\nconst CODE_STYLE_PROPS: React.CSSProperties = {\r\n    margin: 0,\r\n    boxSizing: 'border-box',\r\n    overflowY: 'visible',\r\n    overflowX: 'visible',\r\n    display: 'block',\r\n    background: 'transparent'\r\n};\r\n\r\nexport interface ICodeProps {\r\n        className?: string;\r\n    showLineNumbers?: boolean;\r\n    language: string;\r\n    source: string;\r\n}\r\n\r\nexport class Code extends React.PureComponent<ICodeProps, any> {\r\n    public render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <CodeHighlighter\r\n                    showLineNumbers={this.props.showLineNumbers}\r\n                    language={this.props.language}\r\n                    style={CodeTheme.default}\r\n                    customStyle={CODE_STYLE_PROPS}\r\n                >\r\n                    {this.props.source || ''}\r\n                </CodeHighlighter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/code.tsx","export * from './header';\r\nexport * from './container';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/index.ts","import { KeyboardEvent, MouseEvent } from 'react';\r\nimport { IGridAddress, IGridSelection, IGridView } from '../components';\r\n\r\nconst IS_MACOS = navigator.platform.slice(0, 3) === 'Mac';\r\n\r\nexport interface IState {\r\n    focused: boolean;\r\n    editor: IGridAddress;\r\n    active: IGridAddress;\r\n    selection: IGridSelection[];\r\n    view: IGridView;\r\n    rows: number;\r\n    columns: number;\r\n    readOnly: boolean;\r\n}\r\n\r\nexport interface IUpdateSelectionEvent {\r\n    active?: IGridAddress;\r\n    selection?: IGridSelection[];\r\n}\r\n\r\nexport interface IControllerProps {\r\n    getState: () => IState;\r\n    onScroll: (cell: IGridAddress) => void;\r\n    onUpdateSelection: (next: IUpdateSelectionEvent, callback?: () => void) => void;\r\n    onCloseEditor: (commit: boolean, onClosed?: () => void) => void;\r\n    onOpenEditor: (next: IGridAddress) => void;\r\n}\r\n\r\nexport class Controller {\r\n    protected _state: IState = null;\r\n\r\n    constructor(protected _props: IControllerProps) { }\r\n\r\n    protected _getModifiers(e: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement>) {\r\n        const { ctrlKey, altKey, shiftKey } = e;\r\n        const cmdKey = e.getModifierState('Meta'); // Command key for Mac OS\r\n\r\n        return {\r\n            ctrlKey,\r\n            macCmdKey: cmdKey,\r\n            cmdKey: IS_MACOS ? cmdKey : ctrlKey,\r\n            shiftKey,\r\n            altKey\r\n        };\r\n    }\r\n\r\n    protected _clampAddress({ column, row }: IGridAddress) {\r\n        const { rows, columns } = this._state;\r\n        return {\r\n            column: Math.min(Math.max(0, column), columns - 1),\r\n            row: Math.min(Math.max(0, row), rows - 1)\r\n        } as IGridAddress;\r\n    }\r\n\r\n    protected _splitSelection(selection: IGridSelection[]) {\r\n        let prev = selection.slice();\r\n        let last = prev.pop();\r\n\r\n        return {\r\n            prev, last\r\n        };\r\n    }\r\n\r\n    protected _getSelectedCells(selection: IGridSelection[]) {\r\n        let map: {\r\n            [key: string]: IGridAddress;\r\n        } = {};\r\n\r\n        for (const { column, row, height, width } of selection) {\r\n            for (let r = row, rLast = row + height; r <= rLast; r++) {\r\n                for (let c = column, cLast = column + width; c <= cLast; c++) {\r\n                    let key = `${r}x${c}`;\r\n\r\n                    if (map[key]) {\r\n                        continue;\r\n                    }\r\n\r\n                    map[key] = { row: r, column: c };\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.keys(map).sort().map(k => map[k]);\r\n    }\r\n\r\n    protected _request() {\r\n        return this._state = this._props.getState();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/controller.ts","import * as React from 'react';\r\nimport * as MDRenderer from 'react-markdown';\r\nimport { Code } from './index';\r\n\r\nconst Style = require('./markdown.scss');\r\n\r\nexport interface IMarkdownProps {\r\n    source?: string;\r\n}\r\n\r\ninterface IRenderer {\r\n    children?: any;\r\n    language: string;\r\n    value: string;\r\n}\r\n\r\nexport class Markdown extends React.Component<IMarkdownProps, any> {\r\n    private _codeInlineRenderer = ({ value }: IRenderer) => {\r\n        return (\r\n            <code className={Style.code}>\r\n                {value}\r\n            </code>\r\n        );\r\n    }\r\n\r\n    private _codeMultilineRenderer = ({ language, value }: IRenderer) => {\r\n        return (\r\n            <Code\r\n                className={Style.multilineCode}\r\n                showLineNumbers\r\n                language={language}\r\n                source={value}\r\n            />\r\n        );\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <MDRenderer\r\n                className={Style.main}\r\n                source={this.props.source || ''}\r\n                renderers={{\r\n                    inlineCode: this._codeInlineRenderer,\r\n                    code: this._codeMultilineRenderer\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/markdown.tsx","import { IGridTheme } from 'react-bolivianite-grid';\r\n\r\nconst REQUIRED_THEME: IGridTheme = {\r\n    // Scroller theme\r\n    scrollbarWidth: 15,\r\n    scrollbarWidthMinimized: 5,\r\n    scrollbarMinimizeDistance: 100,\r\n    styleTrackRoot: {\r\n        transition: 'ease all 100ms',\r\n        background: `rgba(0, 0, 0, 0.2)`\r\n    },\r\n    styleThumb: {\r\n        background: `rgba(0, 0, 0, 0.8)`\r\n    },\r\n\r\n    // Grid theme\r\n    style: {\r\n        background: '#FFFFFF'\r\n    },\r\n    styleGridColumns: {\r\n        background: '#3C3744',\r\n        boxShadow: '0 0 5px #000',\r\n        color: '#DBDADD'\r\n    },\r\n    styleGridRows: {\r\n        background: '#3C3744',\r\n        boxShadow: '0 0 5px #000',\r\n        color: '#DBDADD'\r\n    },\r\n    styleGridCorner: {\r\n        borderRight: 'solid 1px #000',\r\n        borderBottom: 'solid 1px #000',\r\n        background: '#3C3744',\r\n        color: '#DBDADD',\r\n        boxSizing: 'border-box'\r\n    },\r\n};\r\n\r\nconst THEME = {\r\n    ...REQUIRED_THEME,\r\n\r\n    // Custom grid theme properties\r\n    cellTextColor: '#211E26',\r\n    cellBorderColor: '#918B9C',\r\n    cellBackgroundEven: '#EFEFEF',\r\n    cellBackgroundOdd: '#FFFFFF',\r\n    editorBorderColor: '#918B9C',\r\n    editorBackground: '#FFFFFF',\r\n    headerBorderColor: '#000000',\r\n    headerBorderColorSelected: '#0F0126',\r\n    headerBackgroundColorSelected: '#0F0126',\r\n    selectionBackground: 'rgba(15, 1, 38, 0.2)',\r\n    selectionBackgroundActive: 'transparent',\r\n    selectionBorder: 'solid 1px #0F0126',\r\n    selectionBorderActive: 'solid 2px #0F0126',\r\n    resizerBackground: 'rgba(0, 0, 0, 0.4)'\r\n};\r\n\r\nexport default THEME;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/content/grid-theme.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\"code\":\"markdown__code___1S3XF\",\"multilineCode\":\"markdown__multilineCode___3gNB1\",\"main\":\"markdown__main___1QmVR\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/markdown.scss\n// module id = 417\n// module chunks = 1","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { SplitView, ScrollView, Code } from './index';\r\nconst Style = require('./code-view.scss');\r\n\r\nexport type ICodeViewFile = (\r\n    string | string[]\r\n);\r\n\r\nexport interface ICodeViewProps {\r\n    height?: number;\r\n    files: ICodeViewFile[];\r\n    example: string;\r\n}\r\n\r\nexport interface ICodeViewElementProps {\r\n    className?: string;\r\n}\r\n\r\nexport class CodeView extends React.PureComponent<ICodeViewProps & ICodeViewElementProps, any> {\r\n    state = {\r\n        tab: 0\r\n    };\r\n\r\n    private _extractFile(file: ICodeViewFile) {\r\n        let filename = '';\r\n        let language = 'javascript';\r\n        let caption = '';\r\n\r\n        if (typeof file === 'string') {\r\n            filename = file;\r\n            caption = file;\r\n        } else {\r\n            filename = file[0];\r\n            language = file[1] || language;\r\n            caption = file[2] || filename;\r\n        }\r\n\r\n        return { filename, language, caption };\r\n    }\r\n\r\n    private _renderFileContent() {\r\n        let file = (this.props.files || [])[this.state.tab];\r\n\r\n        if (!file) {\r\n            return null;\r\n        }\r\n\r\n        const { filename, language } = this._extractFile(file);\r\n\r\n        const content = require('!raw-loader!~Content/' + filename);\r\n\r\n        return (\r\n            <Code\r\n                className={Style.file}\r\n                language={language}\r\n                source={content}\r\n            />\r\n        );\r\n    }\r\n\r\n    private _renderArticle() {\r\n        const content = require('~Content/' + this.props.example);\r\n        const D = content && content.default;\r\n\r\n        if (!D) {\r\n            return null;\r\n        }\r\n\r\n        return <D />;\r\n    }\r\n\r\n    private _renderTabs() {\r\n        if (!this.props.files) {\r\n            return null;\r\n        }\r\n\r\n        return this.props.files.map((file, tab) => {\r\n            const { caption } = this._extractFile(file);\r\n\r\n            return (\r\n                <button\r\n                    key={tab}\r\n                    className={classnames(Style.tab, {\r\n                        [Style.tabSelected]: tab === this.state.tab\r\n                    })}\r\n                    onClick={() => {\r\n                        this.setState({ tab });\r\n                    }}\r\n                >\r\n                    {caption}\r\n                </button>\r\n            );\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div\r\n                area-hidden=\"true\"\r\n                className={classnames(Style.root, this.props.className)}\r\n                style={{\r\n                    maxHeight: this.props.height\r\n                }}\r\n            >\r\n                <div className={Style.controls}>\r\n                    {this._renderTabs()}\r\n                </div>\r\n                <SplitView>\r\n                    <ScrollView className={Style.container} lock={null}>\r\n                        {this._renderFileContent()}\r\n                    </ScrollView>\r\n                    <div className={Style.container}>\r\n                        {this._renderArticle()}\r\n                    </div>\r\n                </SplitView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/code-view.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"code-view__root___uaXTc\",\"controls\":\"code-view__controls___1aCoA\",\"container\":\"code-view__container___s2h-S\",\"file\":\"code-view__file___3vtRr\",\"tab\":\"code-view__tab___3wxl4\",\"tabSelected\":\"code-view__tabSelected___egggc\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/code-view.scss\n// module id = 419\n// module chunks = 1","var map = {\n\t\"./example-grid-simple\": 60,\n\t\"./example-grid-simple.tsx\": 60,\n\t\"./grid-theme\": 61,\n\t\"./grid-theme.ts\": 61,\n\t\"./simple-editor\": 62,\n\t\"./simple-editor.tsx\": 62\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 420;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/articles/content ./node_modules/raw-loader ^\\.\\/.*$\n// module id = 420\n// module chunks = 1","var map = {\n\t\"./example-grid-simple\": 63,\n\t\"./example-grid-simple.tsx\": 63,\n\t\"./grid-theme\": 35,\n\t\"./grid-theme.ts\": 35,\n\t\"./simple-editor\": 72,\n\t\"./simple-editor.tsx\": 72\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 421;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/articles/content ^\\.\\/.*$\n// module id = 421\n// module chunks = 1","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport ScrollView, { IScrollViewUpdateEvent } from './scrollview';\r\nimport {\r\n    debounce, RenderThrottler, KeyboardController,\r\n    IUpdateSelectionEvent, IKeyboardControllerRemoveEvent,\r\n    MouseController, IKeyboardControllerPasteEvent\r\n} from '../controllers';\r\nimport {\r\n    IHeader, HeaderResizeBehavior, HeadersContainer, HeaderType\r\n} from '../models';\r\nimport {\r\n    IGridProps, ICellMeasureResult, ICellRenderBaseEvent, ICellRendererEvent,\r\n    IGridResizeHeaderLevelEvent, IGridResizeHeadersEvent, IGridAddress, IGridSelection, IGridView, IGridOverscan\r\n} from './types';\r\n\r\nexport class Grid extends React.PureComponent<IGridProps, any> {\r\n    /** React v17 deprecated */\r\n    static childContextTypes = {\r\n        grid: PropTypes.object,\r\n        headers: PropTypes.object\r\n    };\r\n\r\n    /** React v17 deprecated */\r\n    getChildContext(this: Grid) {\r\n        return {\r\n            grid: this,\r\n            headers: this.props.headers as HeadersContainer /*typescript workaround*/\r\n        };\r\n    }\r\n\r\n    private _blockContextMenu = false;\r\n    private _onContextMenuListener: any = null;\r\n    private _rt = new RenderThrottler();\r\n    private _scrollUpdateTrottled = this._rt.create();\r\n    private _ref: HTMLDivElement = null;\r\n    private _refView: ScrollView = null;\r\n    private _scrollerProps: React.HTMLProps<HTMLDivElement> = { style: { willChange: 'transform', zIndex: 0 } };\r\n    private _lastView: IGridView = null;\r\n    private _lastOverscan: IGridOverscan = null;\r\n    private _focused = false;\r\n    private _kbCtr: KeyboardController = null;\r\n    private _msCtr: MouseController = null;\r\n    private _currentEdit: {\r\n        row: number;\r\n        col: number;\r\n        nextValue: any;\r\n        updatedValue: boolean;\r\n    } = null;\r\n\r\n    state = {\r\n        scrollLeft: 0,\r\n        scrollTop: 0,\r\n        viewHeight: 0,\r\n        viewWidth: 0,\r\n        active: {\r\n            row: 0,\r\n            column: 0\r\n        } as IGridAddress,\r\n        edit: null as IGridAddress,\r\n        selection: [{\r\n            row: 0,\r\n            column: 0,\r\n            width: 0,\r\n            height: 0\r\n        }] as IGridSelection[],\r\n        resizeHeaderPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        },\r\n        resizeLevelPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        }\r\n    };\r\n\r\n    constructor(p: IGridProps, c: any) {\r\n        super(p, c);\r\n\r\n        this._onAfterUpdate = debounce(500, this._onAfterUpdate.bind(this));\r\n\r\n        const getState = () => ({\r\n            active: this.state.active,\r\n            editor: this.state.edit,\r\n            selection: this.state.selection,\r\n            focused: this._focused,\r\n            columns: this._columnCount,\r\n            rows: this._rowCount,\r\n            view: this._lastView,\r\n            readOnly: this.props.readOnly\r\n        });\r\n\r\n        const onScroll = this.scrollTo.bind(this);\r\n        const onUpdateSelection = ({ active, selection }: IUpdateSelectionEvent, callback: () => void) => {\r\n            if (!active && !selection) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                active: active || this.state.active,\r\n                selection: selection || this.state.selection\r\n            }, callback);\r\n        };\r\n\r\n        const onRightClick = (cell: IGridAddress) => {\r\n            if (this.props.onRightClick) {\r\n                this.props.onRightClick(cell);\r\n            }\r\n        };\r\n\r\n        const onCopy = (cells: IGridAddress[], withHeaders: boolean) => {\r\n            if (this.props.onCopy) {\r\n                this.props.onCopy({ withHeaders, cells });\r\n            }\r\n        };\r\n\r\n        const onPaste = ({ clipboard, getAllSelectedCells, getLastSelectedCells }: IKeyboardControllerPasteEvent) => {\r\n            if (this.props.onPaste) {\r\n                this.props.onPaste({\r\n                    clipboard,\r\n                    getAllSelectedCells,\r\n                    getLastSelectedCells,\r\n                    target: {\r\n                        ...this.state.active\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        const onNullify = (cells: IGridAddress[]) => {\r\n            if (this.props.onNullify) {\r\n                this.props.onNullify({ cells });\r\n            }\r\n        };\r\n\r\n        const onRemove = (event: IKeyboardControllerRemoveEvent) => {\r\n            if (this.props.onRemove) {\r\n                this.props.onRemove(event);\r\n            }\r\n        };\r\n\r\n        const onSpace = (cells: IGridAddress[]) => {\r\n            if (this.props.onSpace) {\r\n                this.props.onSpace({ cells });\r\n            }\r\n        };\r\n\r\n        this._kbCtr = new KeyboardController({\r\n            getState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll,\r\n            onUpdateSelection,\r\n            onCopy,\r\n            onPaste,\r\n            onNullify,\r\n            onRemove,\r\n            onSpace\r\n        });\r\n\r\n        this._msCtr = new MouseController({\r\n            getState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll,\r\n            onUpdateSelection,\r\n            onRightClick\r\n        });\r\n    }\r\n\r\n    private get _theme() {\r\n        let theme = { ...(this.props.theme || {}) };\r\n        theme.styleGrid = theme.styleGrid || {};\r\n        theme.styleGridColumns = theme.styleGridColumns || {};\r\n        theme.styleGridRows = theme.styleGridRows || {};\r\n        theme.styleGridCorner = theme.styleGridCorner || {};\r\n        return theme;\r\n    }\r\n\r\n    private get _columnCount() {\r\n        return this.props.headers ? this.props.headers.columns.length : 0;\r\n    }\r\n\r\n    private get _rowCount() {\r\n        return this.props.headers ? this.props.headers.rows.length : 0;\r\n    }\r\n\r\n    private get _headersHeight() {\r\n        return this.props.headers.headersHeight || 0;\r\n    }\r\n\r\n    private get _headersWidth() {\r\n        return this.props.headers.headersWidth || 0;\r\n    }\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._ref = r;\r\n    }\r\n\r\n    private _onRefView = (r: ScrollView) => {\r\n        this._refView = r;\r\n    }\r\n\r\n    private _onBlur = () => {\r\n        this._focused = false;\r\n    }\r\n\r\n    private _onFocus = () => {\r\n        this._focused = true;\r\n    }\r\n\r\n    private _onScrollViewUpdate = (e: IScrollViewUpdateEvent) => {\r\n        this._scrollUpdateTrottled(() => {\r\n            if (this.state.viewWidth !== e.clientWidth || this.state.viewHeight !== e.clientHeight) {\r\n                this.setState({ viewWidth: e.clientWidth, viewHeight: e.clientHeight });\r\n            }\r\n\r\n            if (this.state.scrollLeft !== e.scrollLeft) {\r\n                this.setState({ scrollLeft: e.scrollLeft });\r\n            }\r\n\r\n            if (this.state.scrollTop !== e.scrollTop) {\r\n                this.setState({ scrollTop: e.scrollTop });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAutoMeasureApply(result: ICellMeasureResult[], behavior: HeaderResizeBehavior) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        result = result.filter(v => !!v);\r\n\r\n        if (!result.length) {\r\n            return;\r\n        }\r\n\r\n        const columnHeaders = this.props.headers.columns;\r\n        const rowHeaders = this.props.headers.rows;\r\n\r\n        let columns: { [colIndex: string]: number } = {};\r\n        let rows: { [rowIndex: string]: number } = {};\r\n\r\n        for (let { rowIndex, columnIndex, height, width } of result) {\r\n            columns[columnIndex] = columns[columnIndex] == null ? width : Math.max(width, columns[columnIndex]);\r\n            rows[rowIndex] = rows[rowIndex] == null ? height : Math.max(height, rows[rowIndex]);\r\n        }\r\n\r\n        let ch = Object\r\n            .keys(columns)\r\n            .map(k => ({ columnIndex: Number(k), width: columns[k] }))\r\n            .filter(({ width, columnIndex }) => {\r\n                let h = columnHeaders[columnIndex];\r\n                return h && (behavior === 'reset' || !this.props.headers.getManualResized(h) && h.$size < width);\r\n            })\r\n            .map(({ columnIndex, width }) => ({\r\n                header: columnHeaders[columnIndex],\r\n                size: width,\r\n                type: this.props.headers.getHeaderType(columnHeaders[columnIndex])\r\n            }));\r\n\r\n        let rh = Object\r\n            .keys(rows)\r\n            .map(k => ({ rowIndex: Number(k), height: rows[k] }))\r\n            .filter(({ rowIndex, height }) => {\r\n                let h = rowHeaders[rowIndex];\r\n                return h && (behavior === 'reset' || !this.props.headers.getManualResized(h) && h.$size < height);\r\n            })\r\n            .map(({ rowIndex, height }) => ({\r\n                header: rowHeaders[rowIndex],\r\n                size: height,\r\n                type: this.props.headers.getHeaderType(rowHeaders[rowIndex])\r\n            }));\r\n\r\n        if (ch.length || rh.length) {\r\n            this.props.onHeaderResize({ headers: [...ch, ...rh], behavior: behavior });\r\n        }\r\n    }\r\n\r\n    private _onAutoMeasure() {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const { columns, rows } = this.props.headers;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let r = firstRow; r <= lastRow; r++) {\r\n            for (let c = firstColumn; c <= lastColumn; c++) {\r\n                cells.push({\r\n                    columnIndex: c,\r\n                    rowIndex: r,\r\n                    source: this.props.source,\r\n                    columnHeader: columns[c],\r\n                    rowHeader: rows[r]\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            callback: (result: ICellMeasureResult[]) => {\r\n                this._onAutoMeasureApply(result, 'auto');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAfterUpdate() {\r\n        this._onAutoMeasure();\r\n    }\r\n\r\n    private _onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        this._kbCtr.keydown(e);\r\n    }\r\n\r\n    private _onMouseDown = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n\r\n        this.focus();\r\n\r\n        this._msCtr.mousedown(e, row, column);\r\n    }\r\n\r\n    private _onMouseDownHeader = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let type: HeaderType = Number(e.currentTarget.getAttribute('x-type'));\r\n        let id = e.currentTarget.getAttribute('x-id');\r\n        let h = this.props.headers.getHeader(id);\r\n        this.focus();\r\n\r\n        if (!h) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.onHeaderRightClick) {\r\n            this.props.onHeaderRightClick({ header: h, event: e });\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let leaves = this.props.headers.getHeaderLeaves(h);\r\n        let indices = leaves.map(v => this.props.headers.getViewIndex(v));\r\n\r\n        if (!indices.length) {\r\n            return;\r\n        }\r\n\r\n        let min = Math.min(...indices);\r\n        let max = Math.max(...indices);\r\n\r\n        this._msCtr.headerdown(e, type, min, max);\r\n    }\r\n\r\n    private _onMouseEnter = (e: React.MouseEvent<HTMLElement>) => {\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n        this._msCtr.mouseenter(row, column);\r\n    }\r\n\r\n    private _onRootMouseLeave = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        let x = e.pageX;\r\n        let y = e.pageY;\r\n        let rect = this._ref.getBoundingClientRect();\r\n        this._msCtr.rootleave(x, y, rect);\r\n    }\r\n\r\n    private _onRootMouseEnter = () => {\r\n        this._msCtr.rootenter();\r\n    }\r\n\r\n    private _onRootMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (e.button === 2) {\r\n            this._blockContextMenu = true;\r\n        }\r\n    }\r\n\r\n    private _createView() {\r\n        const sl = this.state.scrollLeft;\r\n        const st = this.state.scrollTop;\r\n        const vw = this.state.viewWidth - this._headersWidth;\r\n        const vh = this.state.viewHeight - this._headersHeight;\r\n\r\n        let rowsHeight = 0;\r\n        let firstRow = -1;\r\n        let lastRow = -1;\r\n        let rowIndex = 0;\r\n\r\n        for (let rh of this.props.headers.rows) {\r\n            if (firstRow === -1 && rowsHeight >= st - rh.$size) {\r\n                firstRow = rowIndex;\r\n            }\r\n\r\n            rowsHeight += rh.$size;\r\n\r\n            if (lastRow === -1 && rowsHeight >= st + vh /*+ (this._theme.scrollbarWidth || 0)*/) {\r\n                lastRow = rowIndex;\r\n                break;\r\n            }\r\n\r\n            rowIndex++;\r\n        }\r\n\r\n        if (lastRow === -1 && firstRow !== -1) {\r\n            lastRow = rowIndex;\r\n        }\r\n\r\n        let columnsWidth = 0;\r\n        let firstColumn = -1;\r\n        let lastColumn = -1;\r\n        let colIndex = 0;\r\n\r\n        for (let ch of this.props.headers.columns) {\r\n            if (firstColumn === -1 && columnsWidth >= sl - ch.$size) {\r\n                firstColumn = colIndex;\r\n            }\r\n\r\n            columnsWidth += ch.$size;\r\n\r\n            if (lastColumn === -1 && columnsWidth >= sl + vw /*+ (this._theme.scrollbarWidth || 0)*/) {\r\n                lastColumn = colIndex;\r\n                break;\r\n            }\r\n\r\n            colIndex++;\r\n        }\r\n\r\n        if (lastColumn === -1 && firstColumn !== -1) {\r\n            lastColumn = colIndex;\r\n        }\r\n\r\n        let rhLast = this.props.headers.rows[this.props.headers.rows.length - 1];\r\n        let chLast = this.props.headers.columns[this.props.headers.columns.length - 1];\r\n        rowsHeight = this.props.headers.getPosition(rhLast) + rhLast.$size;\r\n        columnsWidth = this.props.headers.getPosition(chLast) + chLast.$size;\r\n\r\n        this._lastView = { firstRow, lastRow, firstColumn, lastColumn, rowsHeight, columnsWidth };\r\n    }\r\n\r\n    private _createOverscan() {\r\n        if (!this._lastView) {\r\n            return;\r\n        }\r\n\r\n        let { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n\r\n        if (this.props.overscanRows) {\r\n            firstRow = Math.max(0, firstRow - this.props.overscanRows);\r\n            lastRow = Math.min(Math.max(0, this._rowCount - 1), lastRow + this.props.overscanRows);\r\n        } else {\r\n            firstRow = Math.max(0, firstRow);\r\n        }\r\n\r\n        if (this.props.overscanColumns) {\r\n            firstColumn = Math.max(0, firstColumn - this.props.overscanColumns);\r\n            lastColumn = Math.min(Math.max(0, this._columnCount - 1), lastColumn + this.props.overscanColumns);\r\n        } else {\r\n            firstColumn = Math.max(0, firstColumn);\r\n        }\r\n\r\n        this._lastOverscan = {\r\n            firstRow, lastRow, firstColumn, lastColumn\r\n        };\r\n    }\r\n\r\n    private _prepareCellProps(row: number, col: number) {\r\n        let rh = this.props.headers.rows[row];\r\n        let ch = this.props.headers.columns[col];\r\n\r\n        return {\r\n            rowIndex: row,\r\n            columnIndex: col,\r\n            rowHeader: rh,\r\n            columnHeader: ch,\r\n            active: row === this.state.active.row && col === this.state.active.column,\r\n            source: this.props.source,\r\n            theme: this.props.theme,\r\n            style: {\r\n                top: this.props.headers.getPosition(rh),\r\n                left: this.props.headers.getPosition(ch),\r\n                height: rh.$size,\r\n                width: ch.$size,\r\n                position: 'absolute',\r\n                zIndex: 1\r\n            }\r\n        } as ICellRendererEvent;\r\n    }\r\n\r\n    private _renderCell(row: number, col: number) {\r\n        let cell = this.props.onRenderCell(this._prepareCellProps(row, col));\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `C${row}x${col}`,\r\n            onMouseDown: this._onMouseDown,\r\n            onMouseEnter: this._onMouseEnter\r\n        });\r\n    }\r\n\r\n    private _renderEditor(row: number, col: number) {\r\n        if (!this.props.onRenderEditor) {\r\n            return this._renderCell(row, col);\r\n        }\r\n\r\n\r\n        if (!this._currentEdit || (this._currentEdit.row !== row || this._currentEdit.col !== col)) {\r\n            this._currentEdit = {\r\n                row, col,\r\n                nextValue: null,\r\n                updatedValue: false\r\n            };\r\n        }\r\n\r\n        let cellProps = this._prepareCellProps(row, col);\r\n        let cell = this.props.onRenderEditor({\r\n            ...cellProps,\r\n            close: (commit: boolean) => {\r\n                this.closeEditor(commit);\r\n            },\r\n            update: (nextValue: any) => {\r\n                this._currentEdit.nextValue = nextValue;\r\n                this._currentEdit.updatedValue = true;\r\n            }\r\n        });\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `E${row}x${col}`\r\n        });\r\n    }\r\n\r\n    private _renderData() {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const columnCount = this._columnCount;\r\n        const rowCount = this._rowCount;\r\n\r\n        if (!columnCount || !rowCount) {\r\n            return null;\r\n        }\r\n\r\n        let irlen = Math.max(0, Math.min(rowCount - firstRow, 1 + lastRow - firstRow));\r\n        let iclen = Math.max(0, Math.min(columnCount - firstColumn, 1 + lastColumn - firstColumn));\r\n        let jsx: JSX.Element[] = new Array(irlen * iclen);\r\n        let i = 0;\r\n        let { edit } = this.state;\r\n\r\n        for (let ir = 0; ir < irlen; ir++) {\r\n            for (let ic = 0; ic < iclen; ic++) {\r\n                let r = ir + firstRow;\r\n                let c = ic + firstColumn;\r\n\r\n                if (edit && edit.column === c && edit.row === r) {\r\n                    jsx[i++] = this._renderEditor(r, c);\r\n                } else {\r\n                    jsx[i++] = this._renderCell(r, c);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (edit && (\r\n            (edit.column < firstColumn) || (edit.column > lastColumn) ||\r\n            (edit.row < firstRow) || (edit.row > lastRow)\r\n        )\r\n        ) {\r\n            jsx.push(this._renderEditor(edit.row, edit.column));\r\n        }\r\n\r\n        return jsx;\r\n    }\r\n\r\n    private _renderHeader(\r\n        out: JSX.Element[],\r\n        type: HeaderType,\r\n        index: number,\r\n        header: IHeader,\r\n        scrollPos: number,\r\n        lock: { [id: string]: boolean },\r\n        parent: boolean\r\n    ) {\r\n        let { $id, $children } = header;\r\n\r\n        if (lock[$id]) {\r\n            return;\r\n        }\r\n\r\n        lock[$id] = true;\r\n\r\n        let style: React.CSSProperties = {\r\n            position: 'absolute',\r\n            zIndex: 1\r\n        };\r\n\r\n        let level = this.props.headers.getLevel(header);\r\n\r\n        if (type === HeaderType.Row) {\r\n            style.left = this.props.headers.getLeftLevelPosition(level); // 0;\r\n            style.width = this.props.headers.getLeftLevelWidth(level); // headersWidth;\r\n            style.top = this.props.headers.getPosition(header) - scrollPos;\r\n            style.height = header.$size;\r\n\r\n            let levels = this.props.headers.leftLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.width = this.props.headers.headersWidth - style.left;\r\n            }\r\n        } else {\r\n            style.top = this.props.headers.getTopLevelPosition(level);\r\n            style.height = this.props.headers.getTopLevelHeight(level); // headersHeight;\r\n            style.left = this.props.headers.getPosition(header) - scrollPos;\r\n            style.width = header.$size;\r\n\r\n            let levels = this.props.headers.topLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.height = this.props.headers.headersHeight - style.top;\r\n            }\r\n        }\r\n\r\n        let selection = false;\r\n\r\n        for (let s of this.state.selection) {\r\n            if (type === HeaderType.Row) {\r\n                if (index >= s.row && index <= (s.row + s.height)) {\r\n                    selection = true;\r\n                    break;\r\n                }\r\n            } else {\r\n                if (index >= s.column && index <= (s.column + s.width)) {\r\n                    selection = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let headerParent = this.props.headers.getParent(header);\r\n\r\n        let cell = this.props.onRenderHeader({\r\n            type, header, style, parent,\r\n            selection: parent ? false : selection,\r\n            parentHeader: headerParent,\r\n            theme: this.props.theme,\r\n            viewIndex: this.props.headers.getViewIndex(header)\r\n        });\r\n\r\n        out.push(React.cloneElement(React.Children.only(cell), {\r\n            'x-type': type,\r\n            'x-id': $id,\r\n            key: $id,\r\n            onMouseDown: this._onMouseDownHeader\r\n        }));\r\n\r\n        if (headerParent) {\r\n            this._renderHeader(out, type, index, headerParent, scrollPos, lock, true);\r\n        }\r\n    }\r\n\r\n    private _renderHeaders(type: HeaderType, scrollPos: number) {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const isRow = type === HeaderType.Row;\r\n        const first = isRow ? firstRow : firstColumn;\r\n        const last = isRow ? lastRow : lastColumn;\r\n        const max = isRow ? this._rowCount : this._columnCount;\r\n        const headers = isRow ? this.props.headers.rows : this.props.headers.columns;\r\n\r\n        let len = Math.max(0, Math.min(max - first, 1 + last - first));\r\n        let jsx: JSX.Element[] = [];\r\n        let lock: { [id: string]: boolean } = {};\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let ix = i + first;\r\n            this._renderHeader(jsx, type, ix, headers[ix], scrollPos, lock, false);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {jsx}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private _renderResizing({ scrollLeft, scrollTop }: IScrollViewUpdateEvent) {\r\n        if (!this.props.onRenderResizer || !this.state.resizeHeaderPreview && !this.state.resizeLevelPreview) {\r\n            return null;\r\n        }\r\n\r\n        let type: 'level' | 'header';\r\n        let orientation: 'horizontal' | 'vertical';\r\n\r\n        let styleInitial = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none'\r\n        } as React.CSSProperties;\r\n\r\n        let styleChanged = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none'\r\n        } as React.CSSProperties;\r\n\r\n        if (this.state.resizeHeaderPreview) {\r\n            type = 'header';\r\n\r\n            let { change, header } = this.state.resizeHeaderPreview;\r\n            let headerType = this.props.headers.getHeaderType(header);\r\n            let headerPosition = this.props.headers.getPosition(header);\r\n\r\n            if (headerType === HeaderType.Row) {\r\n                orientation = 'horizontal';\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = this.props.headers.headersHeight + headerPosition - scrollTop;\r\n                styleInitial.height = header.$size;\r\n                styleChanged.height = header.$size + change;\r\n            } else {\r\n                orientation = 'vertical';\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = this.props.headers.headersWidth + headerPosition - scrollLeft;\r\n                styleInitial.width = header.$size;\r\n                styleChanged.width = header.$size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeLevelPreview) {\r\n            type = 'level';\r\n\r\n            let { change, header } = this.state.resizeLevelPreview;\r\n            let headerType = this.props.headers.getHeaderType(header);\r\n            let level = this.props.headers.getLevel(header);\r\n\r\n            if (headerType === HeaderType.Row) { // resizing left level\r\n                orientation = 'vertical';\r\n                let position = this.props.headers.getLeftLevelPosition(level);\r\n                let size = this.props.headers.getLeftLevelWidth(level);\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = position - scrollLeft;\r\n                styleInitial.width = size;\r\n                styleChanged.width = size + change;\r\n            } else { // resizing top level\r\n                orientation = 'horizontal';\r\n                let position = this.props.headers.getTopLevelPosition(level);\r\n                let size = this.props.headers.getTopLevelHeight(level);\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = position - scrollTop;\r\n                styleInitial.height = size;\r\n                styleChanged.height = size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeHeaderPreview || this.state.resizeLevelPreview) {\r\n            return (\r\n                <>\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleInitial, resizer: 'initial', theme: this.props.theme })}\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleChanged, resizer: 'changed', theme: this.props.theme })}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _renderHeaderContainers = (event: IScrollViewUpdateEvent) => {\r\n        const { clientWidth, clientHeight, scrollLeft, scrollTop } = event;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: clientWidth/* + this._theme.scrollSize*/,\r\n                    height: clientHeight/* + this._theme.scrollSize*/,\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                {!!this.props.headers.headersHeight &&\r\n                    <div\r\n                        className={this._theme.classNameGridColumns}\r\n                        style={{\r\n                            ...this._theme.styleGridColumns,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: this.props.headers.headersWidth,\r\n                            top: 0,\r\n                            right: 0,\r\n                            height: this.props.headers.headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Column, scrollLeft)}\r\n                    </div>\r\n                }\r\n                {!!this.props.headers.headersWidth &&\r\n                    <div\r\n                        className={this._theme.classNameGridRows}\r\n                        style={{\r\n                            ...this._theme.styleGridRows,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: this.props.headers.headersHeight,\r\n                            bottom: 0,\r\n                            width: this.props.headers.headersWidth\r\n                        }}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Row, scrollTop)}\r\n                    </div>\r\n                }\r\n                {!!(this.props.headers.headersHeight || this.props.headers.headersWidth) &&\r\n                    <div\r\n                        className={this._theme.classNameGridCorner}\r\n                        style={{\r\n                            ...this._theme.styleGridCorner,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: 0,\r\n                            height: this.props.headers.headersHeight,\r\n                            width: this.props.headers.headersWidth\r\n                        }}\r\n                    >\r\n                    </div>\r\n                }\r\n                {this._renderResizing(event)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderSelections(): JSX.Element[] {\r\n        if (!this.props.headers.columns.length || !this.props.headers.rows.length) {\r\n            return null;\r\n        }\r\n\r\n        let jsx = this.state.selection.map(({ row, column, width, height }, i) => {\r\n            let l = this.props.headers.getPosition(this.props.headers.columns[column]);\r\n            let t = this.props.headers.getPosition(this.props.headers.rows[row]);\r\n            let w = this.props.headers.columns.slice(column, column + width + 1).reduce((r, n) => r + n.$size, 0);\r\n            let h = this.props.headers.rows.slice(row, row + height + 1).reduce((r, n) => r + n.$size, 0);\r\n\r\n            return this.props.onRenderSelection({\r\n                key: i,\r\n                active: false,\r\n                edit: !!this.state.edit,\r\n                theme: this.props.theme,\r\n                style: {\r\n                    position: 'absolute',\r\n                    zIndex: i,\r\n                    left: l,\r\n                    top: t,\r\n                    width: w,\r\n                    height: h\r\n                }\r\n            });\r\n        });\r\n\r\n        let ax = jsx.length;\r\n\r\n        let rh = this.props.headers.rows[this.state.active.row];\r\n        let ch = this.props.headers.columns[this.state.active.column];\r\n\r\n        jsx.push(this.props.onRenderSelection({\r\n            key: ax,\r\n            active: true,\r\n            edit: !!this.state.edit,\r\n            theme: this.props.theme,\r\n            style: {\r\n                position: 'absolute',\r\n                zIndex: ax,\r\n                left: this.props.headers.getPosition(ch),\r\n                top: this.props.headers.getPosition(rh),\r\n                width: ch.$size,\r\n                height: rh.$size\r\n            }\r\n        }));\r\n\r\n        return jsx;\r\n    }\r\n\r\n    public focus() {\r\n        if (this._ref) {\r\n            this._ref.focus();\r\n        }\r\n    }\r\n\r\n    public blur() {\r\n        if (this._ref) {\r\n            this._ref.blur();\r\n        }\r\n    }\r\n\r\n    /** TODO: instead of using column index - use cell position and viewport minus scroll size */\r\n    public scrollTo(cell: { column?: number; row?: number; }) {\r\n        if (!this._refView || !this.props.headers.columns.length || !this.props.headers.rows.length) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n        let { column, row } = cell;\r\n\r\n        if (row != null) {\r\n            row = Math.min(Math.max(0, row), this._rowCount - 1);\r\n            if (row <= firstRow || row >= lastRow) {\r\n                let rowPos = this.props.headers.getPosition(this.props.headers.rows[row]);\r\n                if (row <= firstRow) { // to top\r\n                    this._refView.scrollTop = rowPos;\r\n                } else { // to bottom\r\n                    let rowSize = this.props.headers.rows[row].$size;\r\n                    this._refView.scrollTop = rowPos + rowSize - this.state.viewHeight + this._headersHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (column != null) {\r\n            column = Math.min(Math.max(0, column), this._columnCount - 1);\r\n            if (column <= firstColumn || column >= lastColumn) {\r\n                let colPos = this.props.headers.getPosition(this.props.headers.columns[column]);\r\n                if (column <= firstColumn) { // to left\r\n                    this._refView.scrollLeft = colPos;\r\n                } else { // to right\r\n                    let colSize = this.props.headers.columns[column].$size;\r\n                    this._refView.scrollLeft = colPos + colSize - this.state.viewWidth + this._headersWidth;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public openEditor = (cell: IGridAddress) => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let e = this.state.edit;\r\n\r\n        if (e) {\r\n            if (e.row === cell.row && e.column === cell.column) {\r\n                return;\r\n            }\r\n\r\n            this.closeEditor(true, () => {\r\n                this.setState({ edit: cell });\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: cell });\r\n    }\r\n\r\n    public closeEditor = (commit: boolean, callback?: () => void) => {\r\n        if (!this.state.edit) {\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: null }, () => {\r\n            let e = this._currentEdit;\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            if (this.props.onUpdate && e) {\r\n                let { col, row, nextValue, updatedValue } = e;\r\n\r\n                if (commit && updatedValue) {\r\n                    this.props.onUpdate({ cell: { row, column: col }, value: nextValue });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public resizeHeaders(e: IGridResizeHeadersEvent) {\r\n        if (this.props.onHeaderResize) {\r\n            this.props.onHeaderResize(e);\r\n        }\r\n    }\r\n\r\n    public resizeLevel(e: IGridResizeHeaderLevelEvent) {\r\n        if (this.props.onHeaderLevelResize) {\r\n            this.props.onHeaderLevelResize(e);\r\n        }\r\n    }\r\n\r\n    public autoMeasure(headers: IHeader[]) {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const batch = headers.map(h => this.props.headers.getHeaderLeaves(h));\r\n        const { columns, rows } = this.props.headers;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let list of batch) {\r\n            for (let h of list) {\r\n                let t = this.props.headers.getHeaderType(h);\r\n\r\n                if (t === HeaderType.Column) {\r\n                    let c = this.props.headers.getViewIndex(h);\r\n\r\n                    for (let r = firstRow; r <= lastRow; r++) {\r\n                        cells.push({\r\n                            columnIndex: c,\r\n                            rowIndex: r,\r\n                            source: this.props.source,\r\n                            columnHeader: columns[c],\r\n                            rowHeader: rows[r]\r\n                        });\r\n                    }\r\n                } else {\r\n                    let r = this.props.headers.getViewIndex(h);\r\n\r\n                    for (let c = firstColumn; c <= lastColumn; c++) {\r\n                        cells.push({\r\n                            columnIndex: c,\r\n                            rowIndex: r,\r\n                            source: this.props.source,\r\n                            columnHeader: columns[c],\r\n                            rowHeader: rows[r]\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            callback: (result: ICellMeasureResult[]) => {\r\n                this._onAutoMeasureApply(result, 'reset');\r\n            }\r\n        });\r\n    }\r\n\r\n    public previewResizeHeader(resizeHeaderPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeHeaderPreview });\r\n    }\r\n\r\n    public previewResizeLevel(resizeLevelPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeLevelPreview });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        document.body.addEventListener('contextmenu', this._onContextMenuListener = (e: any) => {\r\n            if (this._blockContextMenu) {\r\n                this._blockContextMenu = false;\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentDidUpdate() {\r\n        this._onAfterUpdate();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.body.removeEventListener('contextmenu', this._onContextMenuListener);\r\n        this._kbCtr.dispose();\r\n        this._msCtr.dispose();\r\n    }\r\n\r\n    public render() {\r\n        this._createView();\r\n        this._createOverscan();\r\n\r\n        const { rowsHeight, columnsWidth } = this._lastView;\r\n\r\n        return (\r\n            <div\r\n                className={this._theme.classNameGrid}\r\n                tabIndex={this.props.tabIndex == null ? -1 : this.props.tabIndex}\r\n                ref={this._onRef}\r\n                onBlur={this._onBlur}\r\n                onFocus={this._onFocus}\r\n                style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                    userSelect: 'none',\r\n                    outline: 'none',\r\n                    ...this._theme.styleGrid,\r\n                    overflow: 'hidden'\r\n                }}\r\n                onKeyDown={this._onKeyDown}\r\n                onMouseLeave={this._onRootMouseLeave}\r\n                onMouseEnter={this._onRootMouseEnter}\r\n                onMouseDown={this._onRootMouseDown}\r\n            >\r\n                <ScrollView\r\n                    ref={this._onRefView}\r\n                    onScroll={this._onScrollViewUpdate}\r\n                    scrollerProps={this._scrollerProps}\r\n                    renderAfter={this._renderHeaderContainers}\r\n                    {...this.props.theme}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: rowsHeight,\r\n                            width: columnsWidth,\r\n                            boxSizing: 'border-box',\r\n                            position: 'relative',\r\n                            marginLeft: this._headersWidth,\r\n                            marginTop: this._headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderData()}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            pointerEvents: 'none',\r\n                            zIndex: 1,\r\n                            left: this._headersWidth,\r\n                            top: this._headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderSelections()}\r\n                    </div>\r\n                </ScrollView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/grid.tsx","export function debounce(time: number, fn: Function) {\r\n    let task: any = null;\r\n\r\n    return (...args: any[]) => {\r\n        if (task) {\r\n            clearTimeout(task);\r\n        }\r\n\r\n        task = setTimeout(() => {\r\n            task = null;\r\n            fn(...args);\r\n        }, time);\r\n    };\r\n}\r\n\r\nexport default debounce;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/debounce.ts","import { KeyboardEvent } from 'react';\r\nimport { IGridAddress, IGridSelection } from '../components';\r\nimport { Controller, IControllerProps } from './controller';\r\n\r\nexport interface IKeyboardControllerRemoveEvent {\r\n    rows: number[];\r\n    columns: number[];\r\n}\r\n\r\nexport interface IKeyboardControllerPasteEvent {\r\n    clipboard: DataTransfer;\r\n    getAllSelectedCells: () => IGridAddress[];\r\n    getLastSelectedCells: () => IGridAddress[];\r\n}\r\n\r\nexport interface IKeyboardControllerProps extends IControllerProps {\r\n    onNullify: (cells: IGridAddress[]) => void;\r\n    onRemove: (props: IKeyboardControllerRemoveEvent) => void;\r\n    onSpace: (cells: IGridAddress[]) => void;\r\n    onCopy: (cells: IGridAddress[], withHeaders: boolean) => void;\r\n    onPaste: (event: IKeyboardControllerPasteEvent) => void;\r\n}\r\n\r\nexport class KeyboardController extends Controller {\r\n    constructor(protected _props: IKeyboardControllerProps) {\r\n        super(_props);\r\n\r\n        document.body.addEventListener('paste', this._paste);\r\n    }\r\n\r\n    private _isInput(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { keyCode } = e;\r\n        const { ctrlKey, altKey, macCmdKey } = this._getModifiers(e);\r\n\r\n        if (ctrlKey || altKey || macCmdKey) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            (48 <= keyCode && keyCode <= 57) ||\r\n            (65 <= keyCode && keyCode <= 90) ||\r\n            (96 <= keyCode && keyCode <= 111) ||\r\n            (186 <= keyCode && keyCode <= 222)\r\n        );\r\n    }\r\n\r\n    private _moveSelection(shiftKey: boolean, cmdKey: boolean, direction: 'left' | 'up' | 'right' | 'down', distance: number) {\r\n        const { active, rows, columns, selection } = this._state;\r\n\r\n        let nextScroll: IGridAddress = null;\r\n        let nextActive: IGridAddress = null;\r\n        let nextSelection: IGridSelection[] = null;\r\n\r\n        if (shiftKey && cmdKey) {\r\n            let { prev, last } = this._splitSelection(selection);\r\n            let next: IGridSelection = null;\r\n\r\n            switch (direction) {\r\n                case 'left':\r\n                    next = {\r\n                        ...last,\r\n                        column: 0,\r\n                        width: active.column\r\n                    };\r\n                    nextScroll = {\r\n                        row: null,\r\n                        column: 0\r\n                    };\r\n                    break;\r\n\r\n                case 'up':\r\n                    next = {\r\n                        ...last,\r\n                        row: 0,\r\n                        height: active.row\r\n                    };\r\n                    nextScroll = {\r\n                        row: 0,\r\n                        column: null\r\n                    };\r\n                    break;\r\n\r\n                case 'right':\r\n                    next = {\r\n                        ...last,\r\n                        column: active.column,\r\n                        width: columns - active.column - 1\r\n                    };\r\n                    nextScroll = {\r\n                        row: null,\r\n                        column: columns - 1\r\n                    };\r\n                    break;\r\n\r\n                case 'down':\r\n                    next = {\r\n                        ...last,\r\n                        row: active.row,\r\n                        height: rows - active.row - 1\r\n                    };\r\n                    nextScroll = {\r\n                        row: rows - 1,\r\n                        column: null\r\n                    };\r\n                    break;\r\n            }\r\n\r\n            if (next) {\r\n                nextSelection = [\r\n                    ...prev,\r\n                    next\r\n                ];\r\n            }\r\n        } else if (cmdKey) {\r\n            switch (direction) {\r\n                case 'left':\r\n                    nextActive = this._clampAddress({ row: active.row, column: 0 });\r\n                    break;\r\n\r\n                case 'up':\r\n                    nextActive = this._clampAddress({ row: 0, column: active.column });\r\n                    break;\r\n\r\n                case 'right':\r\n                    nextActive = this._clampAddress({ row: active.row, column: columns - 1 });\r\n                    break;\r\n\r\n                case 'down':\r\n                    nextActive = this._clampAddress({ row: rows - 1, column: active.column });\r\n                    break;\r\n            }\r\n\r\n            nextScroll = nextActive;\r\n\r\n            nextSelection = [{\r\n                ...nextActive,\r\n                width: 0,\r\n                height: 0\r\n            }];\r\n        } else if (shiftKey) {\r\n            let { prev, last } = this._splitSelection(selection);\r\n            let next: IGridSelection = null;\r\n            let delta = distance;\r\n\r\n            switch (direction) {\r\n                case 'left':\r\n                    if (last.column + last.width === active.column) {\r\n                        if (last.column) {\r\n                            let newColumn = last.column - distance;\r\n\r\n                            if (newColumn < 0) {\r\n                                delta = distance + newColumn;\r\n                                newColumn = 0;\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                column: newColumn,\r\n                                width: last.width + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: next.column,\r\n                                row: null\r\n                            };\r\n                        }\r\n                    } else if (last.width) {\r\n                        let newWidth = last.width - distance;\r\n\r\n                        if (newWidth < 0) {\r\n                            delta = distance + newWidth;\r\n                            newWidth = 0;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            column: last.column,\r\n                            width: newWidth\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: next.column + last.width - delta,\r\n                            row: null\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'up':\r\n                    if (last.row + last.height === active.row) {\r\n                        if (last.row) {\r\n                            let newRow = last.row - distance;\r\n\r\n                            if (newRow < 0) {\r\n                                delta = distance + newRow;\r\n                                newRow = 0;\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                row: newRow,\r\n                                height: last.height + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: null,\r\n                                row: next.row\r\n                            };\r\n                        }\r\n                    } else if (last.height) {\r\n                        let newHeight = last.height - distance;\r\n\r\n                        if (newHeight < 0) {\r\n                            delta = distance + newHeight;\r\n                            newHeight = 0;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            row: last.row,\r\n                            height: newHeight\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: null,\r\n                            row: next.row + last.height - delta\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'right':\r\n                    if (last.column === active.column) {\r\n                        let lastPos = last.column + last.width;\r\n                        if (lastPos < columns - 1) {\r\n                            if (lastPos + distance > columns - 1) {\r\n                                delta = (\r\n                                    distance >= columns - 1 - lastPos\r\n                                        ? columns - 1 - last.column\r\n                                        : last.width + distance - columns - 1\r\n                                );\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                width: last.width + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: next.column + next.width,\r\n                                row: null\r\n                            };\r\n                        }\r\n                    } else if (last.width) {\r\n                        if (last.column + delta > active.column) {\r\n                            delta = active.column - last.column;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            column: last.column + delta,\r\n                            width: last.width - delta\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: next.column,\r\n                            row: null\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'down':\r\n                    if (last.row === active.row) {\r\n                        let lastPos = last.row + last.height;\r\n\r\n                        if (lastPos < rows - 1) {\r\n                            if (lastPos + distance > rows - 1) {\r\n                                delta = (\r\n                                    distance >= rows - 1 - lastPos\r\n                                        ? rows - 1 - last.row\r\n                                        : lastPos + distance - rows - 1\r\n                                );\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                height: last.height + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: null,\r\n                                row: next.row + next.height\r\n                            };\r\n                        }\r\n                    } else if (last.height) {\r\n                        if (last.row + delta > active.row) {\r\n                            delta = active.row - last.row;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            row: last.row + delta,\r\n                            height: last.height - delta\r\n                        };\r\n                        nextScroll = {\r\n                            column: null,\r\n                            row: next.row\r\n                        };\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (next) {\r\n                nextSelection = [\r\n                    ...prev,\r\n                    next\r\n                ];\r\n            }\r\n        } else {\r\n            switch (direction) {\r\n                case 'left':\r\n                    nextActive = this._clampAddress({ row: active.row, column: active.column - distance });\r\n                    break;\r\n\r\n                case 'up':\r\n                    nextActive = this._clampAddress({ row: active.row - distance, column: active.column });\r\n                    break;\r\n\r\n                case 'right':\r\n                    nextActive = this._clampAddress({ row: active.row, column: active.column + distance });\r\n                    break;\r\n\r\n                case 'down':\r\n                    nextActive = this._clampAddress({ row: active.row + distance, column: active.column });\r\n                    break;\r\n            }\r\n\r\n            nextScroll = nextActive;\r\n\r\n            nextSelection = [{\r\n                ...nextActive,\r\n                width: 0,\r\n                height: 0\r\n            }];\r\n        }\r\n\r\n        if (nextActive || nextSelection) {\r\n            this._props.onUpdateSelection({\r\n                active: nextActive,\r\n                selection: nextSelection\r\n            });\r\n        }\r\n\r\n        if (nextScroll) {\r\n            this._props.onScroll(nextScroll);\r\n        }\r\n    }\r\n\r\n    private _onTab(e: KeyboardEvent<HTMLDivElement>, callback?: () => void) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let { active, rows, columns, selection } = this._state;\r\n\r\n        if (cmdKey) {\r\n            return;\r\n        }\r\n\r\n        let { last } = this._splitSelection(selection);\r\n        let firstRow = 0;\r\n        let firstColumn = 0;\r\n        let lastRow = rows - 1;\r\n        let lastColumn = columns - 1;\r\n        let insideSelection = false;\r\n        active = { ...active };\r\n\r\n        if (last.height || last.width) {\r\n            insideSelection = true;\r\n            firstRow = last.row;\r\n            firstColumn = last.column;\r\n            lastRow = firstRow + last.height;\r\n            lastColumn = firstColumn + last.width;\r\n        }\r\n\r\n        if (shiftKey) {\r\n            active.column--;\r\n            if (active.column < firstColumn) {\r\n                active.column = lastColumn;\r\n                active.row--;\r\n            }\r\n\r\n            if (active.row < firstRow) {\r\n                active.row = lastRow;\r\n            }\r\n        } else {\r\n            active.column++;\r\n\r\n            if (active.column > lastColumn) {\r\n                active.column = firstColumn;\r\n                active.row++;\r\n            }\r\n\r\n            if (active.row > lastRow) {\r\n                active.row = firstRow;\r\n            }\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: active,\r\n            selection: (\r\n                insideSelection\r\n                    ? null\r\n                    : [{ ...active, height: 0, width: 0 }]\r\n            )\r\n        }, () => {\r\n            this._props.onScroll(active);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private _onEnter(e: KeyboardEvent<HTMLDivElement>, callback?: () => void) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let { active, rows, selection } = this._state;\r\n\r\n        if (cmdKey) {\r\n            this._props.onOpenEditor(active);\r\n            return;\r\n        }\r\n\r\n        let { last } = this._splitSelection(selection);\r\n        let firstRow = 0;\r\n        let firstColumn = active.column;\r\n        let lastRow = rows - 1;\r\n        let lastColumn = active.column;\r\n        let insideSelection = false;\r\n        active = { ...active };\r\n\r\n        if (last.height || last.width) {\r\n            insideSelection = true;\r\n            firstRow = last.row;\r\n            firstColumn = last.column;\r\n            lastRow = firstRow + last.height;\r\n            lastColumn = firstColumn + last.width;\r\n        }\r\n\r\n        if (shiftKey) {\r\n            active.row--;\r\n\r\n            if (insideSelection) {\r\n                if (active.row < firstRow) {\r\n                    active.row = lastRow;\r\n                    active.column--;\r\n                }\r\n\r\n                if (active.column < firstColumn) {\r\n                    active.column = lastColumn;\r\n                }\r\n            } else if (active.row < 0) {\r\n                active.row = 0;\r\n            }\r\n        } else {\r\n            active.row++;\r\n\r\n            if (insideSelection) {\r\n                if (active.row > lastRow) {\r\n                    active.row = firstRow;\r\n                    active.column++;\r\n                }\r\n\r\n                if (active.column > lastColumn) {\r\n                    active.column = firstColumn;\r\n                }\r\n            } else if (active.row > rows - 1) {\r\n                active.row = rows - 1;\r\n            }\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: active,\r\n            selection: (\r\n                insideSelection\r\n                    ? null\r\n                    : [{ ...active, height: 0, width: 0 }]\r\n            )\r\n        }, () => {\r\n            this._props.onScroll(active);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private _onSpace(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onSpace(cells);\r\n    }\r\n\r\n    private _onPageUpDown(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey, altKey } = this._getModifiers(e);\r\n        let { view } = this._state;\r\n        let direction: 'left' | 'right' | 'up' | 'down' = (\r\n            e.keyCode === 33\r\n                ? altKey\r\n                    ? 'left'\r\n                    : 'up'\r\n                : altKey\r\n                    ? 'right'\r\n                    : 'down'\r\n        );\r\n\r\n        let pageColumns = view.lastColumn - view.firstColumn;\r\n        let pageRows = view.lastRow - view.firstRow;\r\n\r\n\r\n        switch (e.keyCode) {\r\n            case 37: direction = 'left'; break;\r\n            case 38: direction = 'up'; break;\r\n            case 39: direction = 'right'; break;\r\n            case 40: direction = 'down'; break;\r\n        }\r\n\r\n        this._moveSelection(shiftKey, cmdKey, direction, altKey ? pageColumns : pageRows);\r\n    }\r\n\r\n    private _onHomeEnd(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { shiftKey, cmdKey, altKey } = this._getModifiers(e);\r\n\r\n        if (altKey) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        let direction: 'home' | 'end' = e.keyCode === 36 ? 'home' : 'end';\r\n        let { active, rows, columns, selection } = this._state;\r\n        let nextActive: IGridAddress = null;\r\n        let nextSelection: IGridSelection[] = null;\r\n\r\n        let nextScroll: IGridAddress = {\r\n            row: cmdKey ? direction === 'home' ? 0 : (rows - 1) : active.row,\r\n            column: direction === 'home' ? 0 : (columns - 1)\r\n        };\r\n\r\n        if (shiftKey) {\r\n            let { prev } = this._splitSelection(selection);\r\n\r\n            nextSelection = [\r\n                ...prev,\r\n                {\r\n                    row: cmdKey && direction === 'home' ? 0 : active.row,\r\n                    column: direction === 'home' ? 0 : active.column,\r\n                    height: cmdKey ? (direction === 'home' ? active.row : rows - active.row - 1) : 0,\r\n                    width: direction === 'home' ? active.column : columns - active.column - 1\r\n                }\r\n            ];\r\n        } else {\r\n            nextActive = nextScroll;\r\n            nextSelection = [{ ...nextActive, width: 0, height: 0 }];\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: nextActive,\r\n            selection: nextSelection\r\n        });\r\n\r\n        this._props.onScroll(nextScroll);\r\n    }\r\n\r\n    private _onArrows(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let direction: 'left' | 'up' | 'down' | 'right';\r\n\r\n        switch (e.keyCode) {\r\n            case 37: direction = 'left'; break;\r\n            case 38: direction = 'up'; break;\r\n            case 39: direction = 'right'; break;\r\n            case 40: direction = 'down'; break;\r\n        }\r\n\r\n        this._moveSelection(shiftKey, cmdKey, direction, 1);\r\n    }\r\n\r\n    private _onCopy(withHeaders: boolean) {\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onCopy(cells, withHeaders);\r\n    }\r\n\r\n    private _onNullify() {\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onNullify(cells);\r\n    }\r\n\r\n    private _onRemove() {\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let rowMap: { [row: number]: boolean } = {};\r\n        let colMap: { [col: number]: boolean } = {};\r\n\r\n        this._getSelectedCells(this._state.selection).forEach(({ column, row }) => {\r\n            if (!rowMap[row]) {\r\n                rowMap[row] = true;\r\n            }\r\n\r\n            if (!colMap[column]) {\r\n                colMap[row] = true;\r\n            }\r\n        });\r\n\r\n        this._props.onRemove({\r\n            rows: Object.keys(rowMap).map(Number).sort(),\r\n            columns: Object.keys(colMap).map(Number).sort()\r\n        });\r\n    }\r\n\r\n    private _onSelectAll(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { cmdKey } = this._getModifiers(e);\r\n\r\n        if (!cmdKey) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns } = this._state;\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [{\r\n                row: 0,\r\n                column: 0,\r\n                width: columns - 1,\r\n                height: rows - 1\r\n            }]\r\n        });\r\n    }\r\n\r\n    private _onData(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { cmdKey, altKey, shiftKey } = this._getModifiers(e);\r\n\r\n        switch (e.keyCode) {\r\n            case 45: // insert\r\n                if (!shiftKey && !cmdKey) {\r\n                    break;\r\n                }\r\n\r\n                if (shiftKey && !cmdKey) {\r\n                    // this._onPaste();\r\n                } else if (!shiftKey && cmdKey) {\r\n                    e.preventDefault();\r\n                    this._onCopy(altKey);\r\n                }\r\n                break;\r\n\r\n            case 8: // backspace\r\n            case 46: // delete\r\n                e.preventDefault();\r\n                if (shiftKey && !cmdKey) {\r\n                    this._onCopy(false);\r\n                    this._onNullify();\r\n                } else if (!shiftKey && cmdKey) {\r\n                    this._onRemove();\r\n                } else if (!shiftKey && !cmdKey) {\r\n                    this._onNullify();\r\n                }\r\n                break;\r\n\r\n            case 67: // c\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n                e.preventDefault();\r\n                this._onCopy(altKey);\r\n                break;\r\n\r\n            case 86: // v\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n\r\n                // this._onPaste();\r\n                break;\r\n\r\n            case 88: // x\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n                e.preventDefault();\r\n                this._onCopy(false);\r\n                this._onNullify();\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected _paste = (e: ClipboardEvent) => {\r\n        const { focused, readOnly, selection } = this._props.getState();\r\n\r\n        if (!focused || readOnly) {\r\n            return;\r\n        }\r\n\r\n        this._props.onPaste({\r\n            clipboard: e.clipboardData,\r\n            getAllSelectedCells: () => {\r\n                return this._getSelectedCells(selection);\r\n            },\r\n            getLastSelectedCells: () => {\r\n                let { last } = this._splitSelection(selection);\r\n                return this._getSelectedCells([last]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { editor, active, focused, rows, columns } = this._request();\r\n\r\n        if (!rows || !columns) {\r\n            return;\r\n        }\r\n\r\n        if (editor) {\r\n            switch (e.keyCode) {\r\n                case 9: // tab\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._onTab(e, () => {\r\n                            this._props.onOpenEditor(this._request().active);\r\n                        });\r\n                    });\r\n                    break;\r\n\r\n                case 13: // enter\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._onEnter(e, () => {\r\n                            this._props.onOpenEditor(this._request().active);\r\n                        });\r\n                    });\r\n                    break;\r\n\r\n                case 27: // esc\r\n                    this._props.onCloseEditor(false);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!focused) {\r\n            return;\r\n        }\r\n\r\n        if (this._isInput(e)) {\r\n            this._props.onOpenEditor(active);\r\n            return;\r\n        }\r\n\r\n        switch (e.keyCode) {\r\n            case 9: // tab\r\n                this._onTab(e);\r\n                break;\r\n\r\n            case 13: // enter\r\n                this._onEnter(e);\r\n                break;\r\n\r\n            case 32: // space\r\n                this._onSpace(e);\r\n                break;\r\n\r\n            case 33: // page up\r\n            case 34: // page down\r\n                this._onPageUpDown(e);\r\n                break;\r\n\r\n            case 35: // end\r\n            case 36: // home\r\n                this._onHomeEnd(e);\r\n                break;\r\n\r\n            case 37: // left\r\n            case 38: // up\r\n            case 39: // right\r\n            case 40: // down\r\n                this._onArrows(e);\r\n                break;\r\n\r\n            case 65: // a\r\n                this._onSelectAll(e);\r\n                break;\r\n\r\n            case 8: // backspace\r\n            case 45: // insert\r\n            case 46: // delete\r\n            case 67: // c\r\n            case 86: // v\r\n            case 88: // x\r\n                this._onData(e);\r\n                break;\r\n\r\n            case 113: // F2\r\n                this._props.onOpenEditor({ ...active });\r\n                break;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        document.body.removeEventListener('paste', this._paste);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/keyboard.ts","import { MouseEvent } from 'react';\r\nimport { IGridAddress } from '../components';\r\nimport { HeaderType } from '../models';\r\nimport { Controller, IControllerProps } from './controller';\r\n\r\nexport interface IMouseControllerProps extends IControllerProps {\r\n    onRightClick: (cell: IGridAddress) => void;\r\n}\r\n\r\nexport class MouseController extends Controller {\r\n    protected _lastMouseDown = {\r\n        time: 0,\r\n        row: -1,\r\n        column: -1\r\n    };\r\n    protected _down: {\r\n        row: number;\r\n        column: number;\r\n    } = null;\r\n    protected _scrollBySelect: { h: 'L' | 'R', v: 'T' | 'B' } = null;\r\n    protected _scrollTask: any = null;\r\n\r\n    constructor(protected _props: IMouseControllerProps) {\r\n        super(_props);\r\n        window.addEventListener('mouseup', this._mouseup);\r\n    }\r\n\r\n    protected _mouseSelectFromActive(row: number, column: number) {\r\n        let { selection, active } = this._state;\r\n        let { prev } = this._splitSelection(selection);\r\n        let last = { row, column, width: 0, height: 0 };\r\n\r\n        if (column <= active.column) {\r\n            last.width = active.column - column;\r\n        } else {\r\n            last.column = active.column;\r\n            last.width = column - active.column;\r\n        }\r\n\r\n        if (row <= active.row) {\r\n            last.height = active.row - row;\r\n        } else {\r\n            last.row = active.row;\r\n            last.height = row - active.row;\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [\r\n                ...prev,\r\n                last\r\n            ]\r\n        });\r\n    }\r\n\r\n    protected _autoscroll = () => {\r\n        if (!this._scrollBySelect) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns, view } = this._request();\r\n        let { h, v } = this._scrollBySelect;\r\n        let scroll = {\r\n            row: null as number,\r\n            column: null as number\r\n        };\r\n\r\n        if (h === 'L') {\r\n            if (view.firstColumn) {\r\n                scroll.column = view.firstColumn - 1;\r\n            }\r\n        } else if (h === 'R') {\r\n            if (view.lastColumn !== columns - 1) {\r\n                scroll.column = view.lastColumn + 1;\r\n            }\r\n        }\r\n\r\n        if (v === 'T') {\r\n            if (view.firstRow) {\r\n                scroll.row = view.firstRow - 1;\r\n            }\r\n        } else if (v === 'B') {\r\n            if (view.lastRow !== rows - 1) {\r\n                scroll.row = view.lastRow + 1;\r\n            }\r\n        }\r\n\r\n        this._props.onScroll(scroll);\r\n    }\r\n\r\n    protected _mouseup = () => {\r\n        this._down = null;\r\n        this.rootenter();\r\n    }\r\n\r\n    public rootleave(x: number, y: number, rect: ClientRect) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n\r\n        this._scrollBySelect = {\r\n            h: null,\r\n            v: null\r\n        };\r\n\r\n        if (x < rect.left) {\r\n            this._scrollBySelect.h = 'L';\r\n        } else if (x > rect.left + rect.width) {\r\n            this._scrollBySelect.h = 'R';\r\n        }\r\n\r\n        if (y < rect.top) {\r\n            this._scrollBySelect.v = 'T';\r\n        } else if (y > rect.top + rect.height) {\r\n            this._scrollBySelect.v = 'B';\r\n        }\r\n\r\n        this._scrollTask = setInterval(this._autoscroll, 50);\r\n    }\r\n\r\n    public rootenter() {\r\n        if (this._scrollTask) {\r\n            clearInterval(this._scrollTask);\r\n            this._scrollTask = null;\r\n        }\r\n\r\n        this._scrollBySelect = null;\r\n    }\r\n\r\n    public mouseenter(row: number, column: number) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n        this._mouseSelectFromActive(row, column);\r\n    }\r\n\r\n    public headerdown(e: MouseEvent<HTMLElement>, type: HeaderType, first: number, last = first) {\r\n        if (e.defaultPrevented) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        const { editor, rows, columns } = this._request();\r\n\r\n        if (editor) {\r\n            return;\r\n        }\r\n\r\n        let { shiftKey } = this._getModifiers(e);\r\n\r\n        if (shiftKey) {\r\n\r\n        } else {\r\n            let active = {\r\n                row: type === HeaderType.Column ? 0 : first,\r\n                column: type === HeaderType.Column ? first : 0\r\n            };\r\n\r\n            this._props.onUpdateSelection({\r\n                active,\r\n                selection: [{\r\n                    ...active,\r\n                    height: type === HeaderType.Column ? rows - 1 : last - first,\r\n                    width: type === HeaderType.Column ? last - first : columns - 1\r\n                }]\r\n            });\r\n        }\r\n    }\r\n\r\n    public mousedown(e: MouseEvent<HTMLElement>, row: number, column: number) {\r\n        const { selection, editor } = this._request();\r\n        const { cmdKey, shiftKey } = this._getModifiers(e);\r\n\r\n        const clickInEditor = editor && editor.row === row && editor.column === column;\r\n\r\n        if (!clickInEditor && e.button !== 1) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (editor && !clickInEditor && e.button !== 1) {\r\n            this._props.onCloseEditor(true);\r\n        }\r\n\r\n        if (!cmdKey && shiftKey && e.button === 0) {\r\n            this._mouseSelectFromActive(row, column);\r\n            this._down = { row, column };\r\n        } else if (cmdKey && !shiftKey && e.button == 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [\r\n                    ...selection,\r\n                    { row, column, height: 0, width: 0 }\r\n                ]\r\n            });\r\n            this._down = { row, column };\r\n        } else if (e.button === 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            let t = Date.now();\r\n            let openEditor = (\r\n                !clickInEditor &&\r\n                t - this._lastMouseDown.time < 500 &&\r\n                this._lastMouseDown.row === row &&\r\n                this._lastMouseDown.column === column\r\n            );\r\n\r\n            this._lastMouseDown.time = t;\r\n            this._lastMouseDown.row = row;\r\n            this._lastMouseDown.column = column;\r\n\r\n            if (openEditor) {\r\n                this._down = null;\r\n                if (editor) {\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._props.onOpenEditor({ row, column });\r\n                    });\r\n                } else {\r\n                    this._props.onOpenEditor({ row, column });\r\n                }\r\n            } else {\r\n                this._down = { row, column };\r\n            }\r\n        } else if (e.button === 2) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            try {\r\n                this._props.onRightClick({ row, column });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this.rootenter();\r\n        window.removeEventListener('mouseup', this._mouseup);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/mouse.ts","import { IHeader, HeaderType } from './header';\r\n\r\nexport type HeaderResizeBehavior = 'auto' | 'manual' | 'reset';\r\n\r\nexport type IContainerHeadersFilter = (h: IHeader, type: HeaderType) => boolean;\r\n\r\nexport type HeaderClampFunction = (props: { header: IHeader, type: HeaderType, size: number }) => number;\r\n\r\nexport interface IContainerProps {\r\n    rows: IHeader[];\r\n    columns: IHeader[];\r\n\r\n    columnWidth: number;\r\n    rowHeight: number;\r\n    headersHeight: number;\r\n    headersWidth: number;\r\n\r\n    filter?: IContainerHeadersFilter;\r\n}\r\n\r\nexport interface IContainerState extends IContainerProps {\r\n    viewColumns: IHeader[];\r\n    viewRows: IHeader[];\r\n    viewLeftLevels: number;\r\n    viewTopLevels: number;\r\n    leftLevels: { [level: number]: number };\r\n    topLevels: { [level: number]: number };\r\n    types: { [headerId: string]: HeaderType };\r\n    indices: { [headerId: string]: number };\r\n    positions: { [headerId: string]: number };\r\n    levels: { [headerId: string]: number };\r\n    parents: { [headerId: string]: IHeader };\r\n    manualResized: { [headerId: string]: boolean };\r\n}\r\n\r\nexport class HeadersContainer {\r\n    private _idCounter = 0;\r\n    private _state: IContainerState;\r\n    private _idMap: { [id: string]: IHeader; } = {};\r\n    private _headersWidth = 0;\r\n    private _headersHeight = 0;\r\n\r\n    constructor(props: IContainerProps) {\r\n        if (!props) {\r\n            return;\r\n        }\r\n\r\n        this._state = {\r\n            ...props,\r\n            viewColumns: null,\r\n            viewRows: null,\r\n            viewLeftLevels: 0,\r\n            viewTopLevels: 0,\r\n            leftLevels: {},\r\n            topLevels: {},\r\n            types: {},\r\n            indices: {},\r\n            positions: {},\r\n            levels: {},\r\n            parents: {},\r\n            manualResized: {}\r\n        };\r\n\r\n        this._state.viewColumns = this._create(props.columns, [], HeaderType.Column, props.filter);\r\n        this._state.viewRows = this._create(props.rows, [], HeaderType.Row, props.filter);\r\n\r\n        this._calcPosition();\r\n        this._calcLevels();\r\n    }\r\n\r\n    get headersWidth() {\r\n        return this._headersWidth;\r\n    }\r\n\r\n    get headersHeight() {\r\n        return this._headersHeight;\r\n    }\r\n\r\n    get topLevels() {\r\n        return this._state.viewTopLevels;\r\n    }\r\n\r\n    get leftLevels() {\r\n        return this._state.viewLeftLevels;\r\n    }\r\n\r\n    get columns() {\r\n        return this._state.viewColumns;\r\n    }\r\n\r\n    get rows() {\r\n        return this._state.viewRows;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            columns: this.columns,\r\n            rows: this.rows\r\n        };\r\n    }\r\n\r\n    private _create(\r\n        list: IHeader[],\r\n        out: IHeader[],\r\n        type: HeaderType,\r\n        filter?: (h: IHeader, type: HeaderType) => boolean,\r\n        assignParent?: IHeader\r\n    ) {\r\n        list.forEach((h) => {\r\n            h.$id = h.$id || ++this._idCounter;\r\n\r\n            this._state.positions[h.$id] = 0;\r\n\r\n            if (assignParent) {\r\n                this._state.parents[h.$id] = assignParent;\r\n            }\r\n\r\n            if (h.$collapsed || (filter && !filter(h, type))) {\r\n                return;\r\n            }\r\n\r\n            if ((h.$children && h.$children.length)) {\r\n                this._create(h.$children, out, type, filter, h);\r\n                return;\r\n            }\r\n\r\n            out.push(h);\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    private _createClone() {\r\n        let c = new HeadersContainer(null);\r\n\r\n        c._state = {\r\n            ...this._state,\r\n            leftLevels: { ...this._state.leftLevels },\r\n            topLevels: { ...this._state.topLevels },\r\n            types: { ...this._state.types },\r\n            indices: { ...this._state.indices },\r\n            positions: { ...this._state.positions },\r\n            levels: { ...this._state.levels },\r\n            parents: { ...this._state.parents },\r\n            manualResized: { ...this._state.manualResized }\r\n        };\r\n\r\n        return c;\r\n    }\r\n\r\n    private _applyHeaderLevel(h: IHeader) {\r\n        let level = 0;\r\n        let seek = h;\r\n\r\n        while (this._state.parents[seek.$id]) {\r\n            level++;\r\n            seek = this._state.parents[seek.$id];\r\n        }\r\n\r\n        this._state.levels[h.$id] = level;\r\n\r\n        if (this._state.parents[h.$id]) {\r\n            this._applyHeaderLevel(this._state.parents[h.$id]);\r\n        }\r\n\r\n        return level;\r\n    }\r\n\r\n    private _applyParentPosition(list: IHeader[], type: HeaderType) {\r\n        let lock: { [k: string]: boolean } = {};\r\n        let parents: IHeader[] = [];\r\n\r\n        list.forEach((h) => {\r\n            this._idMap[h.$id] = h;\r\n            this._state.types[h.$id] = type;\r\n\r\n            let first = h.$children[0];\r\n            let last = h.$children[h.$children.length - 1];\r\n\r\n            this._state.positions[h.$id] = this._state.positions[first.$id];\r\n            h.$size = this._state.positions[last.$id] + last.$size - this._state.positions[first.$id];\r\n\r\n            let parent = this._state.parents[h.$id];\r\n\r\n            if (parent && !lock[parent.$id]) {\r\n                lock[parent.$id] = true;\r\n                parents.push(parent);\r\n            }\r\n        });\r\n\r\n        if (parents.length) {\r\n            this._applyParentPosition(parents, type);\r\n        }\r\n    }\r\n\r\n    private _proceedHeaders(list: IHeader[], from: number, size: number, type: HeaderType) {\r\n        let cursor = this._state.positions[list[from].$id];\r\n        let len = list.length;\r\n\r\n        if (!len) {\r\n            return 0;\r\n        }\r\n\r\n        let levels = 0;\r\n        let lock: { [k: string]: boolean } = {};\r\n        let parents: IHeader[] = [];\r\n\r\n        for (let i = from; i < len; i++) {\r\n            let h = list[i];\r\n\r\n            if (!h.$size) {\r\n                h.$size = size;\r\n            }\r\n\r\n            this._state.indices[h.$id] = (h.$children && h.$children[0]) ? -1 : i;\r\n            this._state.positions[h.$id] = cursor;\r\n            cursor += h.$size;\r\n\r\n            this._state.types[h.$id] = type;\r\n\r\n            let l = this._applyHeaderLevel(h);\r\n\r\n            if (l > levels) {\r\n                levels = l;\r\n            }\r\n\r\n            this._idMap[h.$id] = h;\r\n\r\n            let parent = this._state.parents[h.$id];\r\n            if (parent && !lock[parent.$id]) {\r\n                lock[parent.$id] = true;\r\n                parents.push(parent);\r\n            }\r\n        }\r\n\r\n        if (parents.length) {\r\n            this._applyParentPosition(parents, type);\r\n        }\r\n\r\n        return levels + 1;\r\n    }\r\n\r\n    private _calcLevels() {\r\n        this._headersWidth = 0;\r\n        for (let i = 0; i < this._state.viewLeftLevels; i++) {\r\n            this._headersWidth += this.getLeftLevelWidth(i);\r\n        }\r\n\r\n        this._headersHeight = 0;\r\n        for (let i = 0; i < this._state.viewTopLevels; i++) {\r\n            this._headersHeight += this.getTopLevelHeight(i);\r\n        }\r\n    }\r\n\r\n    private _calcPosition(from = 0) {\r\n        this._state.viewTopLevels = this._proceedHeaders(this._state.viewColumns, from, this._state.columnWidth, HeaderType.Column);\r\n        this._state.viewLeftLevels = this._proceedHeaders(this._state.viewRows, from, this._state.rowHeight, HeaderType.Row);\r\n    }\r\n\r\n    private _getLevelPosition(type: 'left' | 'top', level: number) {\r\n        if (level >= (type === 'left' ? this._state.viewLeftLevels : this._state.viewTopLevels)) {\r\n            return 0;\r\n        }\r\n\r\n        let p = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            p += (type === 'left' ? this.getLeftLevelWidth(i) : this.getTopLevelHeight(i));\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    private _getLeaves(h: IHeader, out: IHeader[] = []) {\r\n        if (!h.$children || !h.$children.length) {\r\n            out.push(h);\r\n            return out;\r\n        }\r\n\r\n        h.$children.forEach(c => this._getLeaves(c, out));\r\n        return out;\r\n    }\r\n\r\n    private _getResizeList(h: IHeader, size: number, clamp: HeaderClampFunction) {\r\n        if (!h.$children || !h.$children.length) {\r\n            size = clamp({\r\n                header: h,\r\n                type: this._state.types[h.$id],\r\n                size\r\n            });\r\n        }\r\n\r\n        let prevSize = h.$size;\r\n\r\n        if (!h.$children || !h.$children.length) {\r\n            return [{\r\n                header: h,\r\n                size\r\n            }];\r\n        }\r\n\r\n        let leaves = this.getHeaderLeaves(h);\r\n\r\n        let d = 0;\r\n\r\n        if (clamp) {\r\n            leaves.forEach((c) => {\r\n                let n = Math.floor(c.$size * size / prevSize);\r\n                let m = clamp({\r\n                    header: h,\r\n                    type: this._state.types[h.$id],\r\n                    size: n - d\r\n                });\r\n\r\n                if (n < m) {\r\n                    d += m - n;\r\n                }\r\n            });\r\n        }\r\n\r\n        return leaves.map((c) => {\r\n            return {\r\n                header: c,\r\n                size: clamp({\r\n                    header: c,\r\n                    type: this._state.types[c.id],\r\n                    size: Math.floor(c.$size * size / prevSize) - d\r\n                })\r\n            };\r\n        });\r\n    }\r\n\r\n    private _getHeaderAddress(h: IHeader) {\r\n        let ix: number[] = [];\r\n        let seek = h;\r\n\r\n        while (seek) {\r\n            ix.push(this._state.indices[h.$id]);\r\n            seek = this._state.parents[seek.$id];\r\n        }\r\n\r\n        return ix.reverse();\r\n    }\r\n\r\n    private _mapBranch(address: number[], list: IHeader[], map: (h: IHeader) => IHeader): IHeader[] {\r\n        let len = address.length;\r\n\r\n        return list.map((h) => {\r\n            if (!len) {\r\n                return map(h);\r\n            }\r\n\r\n            return {\r\n                ...h,\r\n                $children: this._mapBranch(address.slice(1), h.$children, map)\r\n            };\r\n        });\r\n    }\r\n\r\n    private _recalcHeaders() {\r\n        this._state.viewColumns = null;\r\n        this._state.viewRows = null;\r\n        this._state.viewLeftLevels = 0;\r\n        this._state.viewTopLevels = 0;\r\n        this._state.types = {};\r\n        this._state.indices = {};\r\n        this._state.positions = {};\r\n        this._state.levels = {};\r\n        this._state.parents = {};\r\n        this._state.viewColumns = this._create(this._state.columns, [], HeaderType.Column, this._state.filter);\r\n        this._state.viewRows = this._create(this._state.rows, [], HeaderType.Row, this._state.filter);\r\n        this._calcPosition();\r\n        this._calcLevels();\r\n\r\n        return this;\r\n    }\r\n\r\n    private _updateHeaders(\r\n        branchMap: {\r\n            [branchName: string]: {\r\n                [$id: string]: IHeader;\r\n            };\r\n        },\r\n        sourceList: IHeader[]\r\n    ) {\r\n        let branchList = Object.keys(branchMap);\r\n\r\n        if (!branchList.length) {\r\n            return sourceList;\r\n        }\r\n\r\n        branchList.forEach((branch) => {\r\n            let address = branch.split('/').filter(v => !!v).map(Number);\r\n            let updateMap = branchMap[branch];\r\n\r\n            sourceList = this._mapBranch(address, sourceList, (h) => {\r\n                let update = updateMap[h.$id];\r\n\r\n                if (!update) {\r\n                    return h;\r\n                }\r\n\r\n                let next = { ...h };\r\n\r\n                Object.keys(update).forEach((key) => {\r\n                    if (key === '$id') {\r\n                        return;\r\n                    }\r\n\r\n                    next[key] = update[key];\r\n                });\r\n\r\n                return next;\r\n            });\r\n        });\r\n\r\n        return sourceList;\r\n    }\r\n\r\n    public getHeader(id: number | string) {\r\n        return this._idMap[id];\r\n    }\r\n\r\n    public getHeaderType(h: IHeader) {\r\n        return this._state.types[h.$id];\r\n    }\r\n\r\n    public getViewIndex(h: IHeader) {\r\n        return this._state.indices[h.$id];\r\n    }\r\n\r\n    public getPosition(h: IHeader) {\r\n        return this._state.positions[h.$id];\r\n    }\r\n\r\n    public getManualResized(h: IHeader) {\r\n        return !!this._state.manualResized[h.$id];\r\n    }\r\n\r\n    public getLevel(h: IHeader) {\r\n        return this._state.levels[h.$id];\r\n    }\r\n\r\n    public getParent(h: IHeader) {\r\n        return this._state.parents[h.$id];\r\n    }\r\n\r\n    public getTopLevelPosition(level: number) {\r\n        return this._getLevelPosition('top', level);\r\n    }\r\n\r\n    public getLeftLevelPosition(level: number) {\r\n        return this._getLevelPosition('left', level);\r\n    }\r\n\r\n    public getLeftLevelWidth(level: number) {\r\n        let v = this._state.leftLevels[level];\r\n        return v == null ? this._state.headersWidth : v;\r\n    }\r\n\r\n    public getTopLevelHeight(level: number) {\r\n        let v = this._state.topLevels[level];\r\n        return v == null ? this._state.headersHeight : v;\r\n    }\r\n\r\n    public getHeaderLeaves(h: IHeader) {\r\n        return this._getLeaves(h);\r\n    }\r\n\r\n    public getSource() {\r\n        return {\r\n            columns: this._state.columns,\r\n            rows: this._state.rows,\r\n            columnWidth: this._state.columnWidth,\r\n            rowHeight: this._state.rowHeight,\r\n            headersHeight: this._state.headersHeight,\r\n            headersWidth: this._state.headersWidth,\r\n            filter: this._state.filter\r\n        } as IContainerProps;\r\n    }\r\n\r\n    public updateFilter(filter: IContainerHeadersFilter) {\r\n        if (this._state.filter === filter) {\r\n            return this;\r\n        }\r\n\r\n        let next = this._createClone();\r\n        next._state.filter = filter;\r\n        return next._recalcHeaders();\r\n    }\r\n\r\n    public updateHeaders(updates: { header: IHeader, update: IHeader }[]) {\r\n        let mapColumns: {\r\n            [branchName: string]: {\r\n                [$id: string]: IHeader;\r\n            };\r\n        } = {};\r\n\r\n        let mapRows: typeof mapColumns = {};\r\n\r\n        updates.forEach(({ header, update }) => {\r\n            let headerType = this._state.types[header.$id];\r\n            let address = this._getHeaderAddress(header);\r\n            let map = headerType === HeaderType.Column ? mapColumns : mapRows;\r\n            let branchName = address.slice(0, address.length - 1).join('/');\r\n\r\n            if (!map[branchName]) {\r\n                map[branchName] = {};\r\n            }\r\n\r\n            map[branchName][header.$id] = update;\r\n        });\r\n\r\n        let next = this._createClone();\r\n\r\n        next._state.columns = this._updateHeaders(mapColumns, next._state.columns);\r\n        next._state.rows = this._updateHeaders(mapRows, next._state.rows);\r\n\r\n        return next._recalcHeaders();\r\n    }\r\n\r\n    /**\r\n     * Resize all provided headers.\r\n     * @param list Array of headers.\r\n     * @param clamp Size clamp function.\r\n     * @param behavior Defines flag when header was resized by autosize or manually.\r\n     * Header will not be autosized when it was manually resized. Default `\"manual\"`.\r\n     */\r\n    public resizeHeaders(\r\n        list: { header: IHeader, size: number }[],\r\n        clamp: HeaderClampFunction = ({ size }) => size,\r\n        behavior: HeaderResizeBehavior = 'manual'\r\n    ) {\r\n        let updates: { header: IHeader, update: IHeader }[] = [];\r\n        let leaves: IHeader[] = [];\r\n\r\n        list.forEach((u) => {\r\n            let resizeList = this._getResizeList(u.header, u.size, clamp);\r\n\r\n            resizeList.forEach(({ header, size }) => {\r\n                leaves.push(header);\r\n\r\n                updates.push({\r\n                    header,\r\n                    update: {\r\n                        $size: size\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        let c = this.updateHeaders(updates);\r\n\r\n        switch (behavior) {\r\n            case 'manual':\r\n            case 'reset':\r\n                let isManual = behavior === 'manual';\r\n                leaves.forEach((header) => {\r\n                    if (isManual) {\r\n                        c._state.manualResized[header.$id] = true;\r\n                    } else {\r\n                        delete c._state.manualResized[header.$id];\r\n                    }\r\n                });\r\n        }\r\n\r\n        return c;\r\n    }\r\n\r\n    public resizeLevel(type: HeaderType, level: number, size: number, min = 5, max = Infinity) {\r\n        let t: 'leftLevels' | 'topLevels' = type === HeaderType.Column ? 'topLevels' : 'leftLevels';\r\n        if (size <= min) {\r\n            size = min;\r\n        }\r\n\r\n        let next = this._createClone();\r\n\r\n        next._state[t][level] = Math.min(Math.max(min, size), max);\r\n        next._calcLevels();\r\n\r\n        return next;\r\n    }\r\n\r\n    public update(props: IContainerProps) {\r\n        let next = this._createClone();\r\n\r\n        next._state = {\r\n            ...next._state,\r\n            ...props\r\n        };\r\n\r\n        return next._recalcHeaders();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/container.ts","let size: number = null;\r\n\r\nexport function getScrollbarSize() {\r\n    if (size !== null) {\r\n        return size;\r\n    }\r\n\r\n    let d = document.createElement('div');\r\n    d.style.overflow = 'scroll';\r\n    d.style.boxSizing = 'border-box';\r\n    d.style.position = 'fixed';\r\n    d.style.top = '-999px';\r\n    d.style.width = '100px';\r\n    d.style.height = '100px';\r\n\r\n    document.body.appendChild(d);\r\n\r\n    size = (100 - d.clientWidth) || (100 - d.clientHeight);\r\n\r\n    document.body.removeChild(d);\r\n\r\n    return size;\r\n}\r\n\r\nexport default getScrollbarSize;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/scrollbar-size.ts","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\nfunction is(x: any, y: any) {\r\n    return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;\r\n}\r\n\r\n/**\r\n * Shallow cache.\r\n *\r\n * If next object contains same keys and values - returns cached value instead.\r\n *\r\n * Optional callback called when changes were detected.\r\n */\r\nexport function Shallow<T>(callback?: () => void) {\r\n    let prev: T = void 0;\r\n\r\n    return (next: T) => {\r\n        if (is(prev, next)) {\r\n            return prev;\r\n        }\r\n\r\n        if (typeof prev !== 'object' || typeof next !== 'object') {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return prev = next;\r\n        }\r\n\r\n        let nextKeys = Object.keys(next);\r\n        let prevKeys = Object.keys(prev);\r\n\r\n        if (nextKeys.length !== prevKeys.length) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return prev = next;\r\n        }\r\n\r\n        for (const k of prevKeys) {\r\n            if (!next.hasOwnProperty(k) || !is((prev as any)[k], (next as any)[k])) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                return prev = next;\r\n            }\r\n        }\r\n\r\n        return prev;\r\n    };\r\n}\r\n\r\nexport default Shallow;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/shallow.ts","/**  Get element relative coordinates. */\r\nexport function getRelativePosition(pageX: number, pageY: number, element: HTMLElement) {\r\n    if (!element || !element.parentElement) {\r\n        return { x: pageX, y: pageY };\r\n    }\r\n\r\n    let p = element;\r\n\r\n    do {\r\n        pageX -= p.offsetLeft;\r\n        pageY -= p.offsetTop;\r\n    } while (p = p.offsetParent as HTMLElement);\r\n\r\n    return { x: pageX, y: pageY };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/relative-position.ts","import * as React from 'react';\r\n\r\nexport function render(jsx: JSX.Element | ((props?: any) => JSX.Element), getProps?: () => any) {\r\n    if (!jsx) {\r\n        return jsx;\r\n    }\r\n\r\n    const props = getProps ? getProps() : {};\r\n    return typeof jsx === 'function' ? jsx(props) : React.cloneElement(React.Children.only(jsx), props);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/render.tsx","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { HeadersContainer, IHeader, HeaderType } from '../models';\r\nimport { Grid } from '../components/grid';\r\n\r\nexport interface IResizerProps {\r\n    header: IHeader;\r\n}\r\n\r\nexport class Resizer extends React.PureComponent<IResizerProps, any> {\r\n    /** React v17 deprecated */\r\n    static contextTypes = {\r\n        grid: PropTypes.object,\r\n        headers: PropTypes.object\r\n    };\r\n\r\n    private static _r: React.CSSProperties = {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        width: 6,\r\n        cursor: 'col-resize'\r\n    };\r\n\r\n    private static _b: React.CSSProperties = {\r\n        position: 'absolute',\r\n        right: 0,\r\n        height: 6,\r\n        bottom: 0,\r\n        left: 0,\r\n        cursor: 'row-resize'\r\n    };\r\n\r\n    private _moving: {\r\n        start: number;\r\n        type: 'left-level' | 'top-level' | 'row' | 'column';\r\n    } = null;\r\n\r\n    private _lastClick: {\r\n        type: 'left-level' | 'top-level' | 'row' | 'column';\r\n        time: number;\r\n    };\r\n\r\n    private _moveListener: any = null;\r\n    private _upListener: any = null;\r\n    private _escListener: any = null;\r\n    private _moved = false;\r\n\r\n    private get _grid() {\r\n        return this.context['grid'] as Grid;\r\n    }\r\n\r\n    private get _container() {\r\n        return this.context['headers'] as HeadersContainer;\r\n    }\r\n\r\n    private _unbind() {\r\n        if (this._moving) {\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n        }\r\n\r\n        if (this._moveListener) {\r\n            document.body.removeEventListener('mousemove', this._moveListener);\r\n            this._moveListener = null;\r\n        }\r\n\r\n        if (this._upListener) {\r\n            window.removeEventListener('mouseup', this._upListener);\r\n            this._upListener = null;\r\n        }\r\n\r\n        if (this._escListener) {\r\n            window.removeEventListener('keydown', this._escListener);\r\n            this._escListener = null;\r\n        }\r\n\r\n        this._moving = null;\r\n    }\r\n\r\n    private _onMove(change: number) {\r\n        if (!this._moving) {\r\n            return;\r\n        }\r\n\r\n        let { type } = this._moving;\r\n        let { header } = this.props;\r\n\r\n        switch (type) {\r\n            case 'column':\r\n            case 'row':\r\n                this._grid.previewResizeHeader({\r\n                    header: header,\r\n                    change: change,\r\n                });\r\n                break;\r\n\r\n            case 'left-level':\r\n            case 'top-level':\r\n                this._grid.previewResizeLevel({\r\n                    header: header,\r\n                    change: change,\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _onChange(change: number) {\r\n        if (!this._moving || !this._moved) {\r\n            return;\r\n        }\r\n\r\n        let { type } = this._moving;\r\n        let { header } = this.props;\r\n\r\n        switch (type) {\r\n            case 'column':\r\n            case 'row':\r\n                this._grid.resizeHeaders({\r\n                    headers: [{\r\n                        type: type === 'row' ? HeaderType.Row : HeaderType.Column,\r\n                        header: header,\r\n                        size: header.$size + change\r\n                    }],\r\n                    behavior: 'manual'\r\n                });\r\n                break;\r\n\r\n            case 'left-level':\r\n            case 'top-level':\r\n                let start = (\r\n                    type === 'left-level'\r\n                        ? this._container.getLeftLevelWidth(this._container.getLevel(header))\r\n                        : this._container.getTopLevelHeight(this._container.getLevel(header))\r\n                );\r\n                this._grid.resizeLevel({\r\n                    type: type === 'left-level' ? HeaderType.Row : HeaderType.Column,\r\n                    level: this._container.getLevel(header),\r\n                    size: start + change\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _onMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        this._moved = false;\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let type = e.currentTarget.getAttribute('x-type') as ('r' | 'b');\r\n        let p = type === 'r' ? e.pageX : e.pageY;\r\n        let headerType = this._container.getHeaderType(this.props.header);\r\n        let isRow = headerType === HeaderType.Row;\r\n\r\n        this._unbind();\r\n\r\n        let now = Date.now();\r\n        let movingType = (\r\n            type === 'r'\r\n                ? isRow\r\n                    ? 'left-level'\r\n                    : 'column'\r\n                : isRow\r\n                    ? 'row'\r\n                    : 'top-level'\r\n        );\r\n\r\n        if (this._lastClick && this._lastClick.type === movingType && (now - this._lastClick.time < 500)) {\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n            this._unbind();\r\n            this._grid.autoMeasure([this.props.header]);\r\n            return;\r\n        }\r\n\r\n        this._moving = {\r\n            type: movingType as any,\r\n            start: p\r\n        };\r\n\r\n        this._lastClick = {\r\n            type: movingType as any,\r\n            time: now\r\n        };\r\n\r\n        let change = 0;\r\n\r\n        window.addEventListener('mouseup', this._upListener = () => {\r\n            this._onChange(change);\r\n\r\n            this._moved = false;\r\n\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n            this._unbind();\r\n        });\r\n\r\n        window.addEventListener('keydown', this._escListener = (ev: KeyboardEvent) => {\r\n            if (ev.keyCode === 27) { // esc\r\n                this._unbind();\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('mousemove', this._moveListener = (ev: MouseEvent) => {\r\n            if (!this._moving) {\r\n                return;\r\n            }\r\n\r\n            this._moved = true;\r\n\r\n            let m = type === 'r' ? ev.pageX : ev.pageY;\r\n            change = m - this._moving.start;\r\n            this._onMove(change);\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._unbind();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    x-type=\"r\"\r\n                    style={Resizer._r}\r\n                    onMouseDown={this._onMouseDown}\r\n                />\r\n                <div\r\n                    x-type=\"b\"\r\n                    style={Resizer._b}\r\n                    onMouseDown={this._onMouseDown}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/resizer.tsx","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { RenderThrottler } from 'react-bolivianite-grid/controllers/renderthrottler';\r\nconst Style = require('./split-view.scss');\r\n\r\nexport interface ISplitViewProps {\r\n    className?: string;\r\n    minimum?: number;\r\n}\r\n\r\nexport class SplitView extends React.PureComponent<ISplitViewProps, any> {\r\n    state = {\r\n        position: 0.5,\r\n        initial: 0.5,\r\n        drag: false,\r\n        x: 0\r\n    };\r\n\r\n    private _mounted = false;\r\n    private _t: RenderThrottler = null;\r\n    private _r: HTMLDivElement = null;\r\n    private _mouseup: EventListener = null;\r\n    private _mousemove: EventListener = null;\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._r = r;\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this._mounted = true;\r\n        this._t = new RenderThrottler();\r\n\r\n        const throttle = this._t.create();\r\n\r\n        window.addEventListener('mouseup', this._mouseup = () => {\r\n            if (!this._mounted) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ drag: false });\r\n        });\r\n\r\n        window.addEventListener('mousemove', this._mousemove = (e: MouseEvent) => {\r\n            throttle(() => {\r\n                if (!this.state.drag || !this._r || !this._mounted) {\r\n                    return;\r\n                }\r\n\r\n                let width = this._r.clientWidth;\r\n                let initialPosition = width * this.state.initial;\r\n                let nextPosition = initialPosition + e.pageX - this.state.x;\r\n                let minimum = this.props.minimum || 100;\r\n                nextPosition = Math.max(minimum, Math.min(nextPosition, width - minimum));\r\n\r\n                this.setState({\r\n                    position: nextPosition / width\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._mounted = false;\r\n        window.removeEventListener('mouseup', this._mouseup);\r\n        window.removeEventListener('mousemove', this._mousemove);\r\n    }\r\n\r\n    public render() {\r\n        let a = React.Children.toArray(this.props.children);\r\n\r\n        if (a.length < 2) {\r\n            return (\r\n                <div className={classnames(Style.root, this.props.className)}>\r\n                    <div className={Style.container} >\r\n                        {a[0]}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classnames(Style.root, this.props.className)}\r\n                ref={this._onRef}\r\n            >\r\n                <div\r\n                    className={Style.container}\r\n                    style={{\r\n                        width: `${100 * this.state.position}%`\r\n                    }}\r\n                >\r\n                    {a[0]}\r\n                </div>\r\n                <div\r\n                    className={Style.resizer}\r\n                    style={{\r\n                        left: `${100 * this.state.position}%`\r\n                    }}\r\n                    onMouseDown={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                            drag: true,\r\n                            x: e.pageX,\r\n                            initial: this.state.position\r\n                        });\r\n                    }}\r\n                />\r\n                <div\r\n                    className={Style.container}\r\n                    style={{\r\n                        width: `${100 * (1 - this.state.position)}%`\r\n                    }}\r\n                >\r\n                    {a[1]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/split-view.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"split-view__root___37RYX\",\"container\":\"split-view__container___-GMcN\",\"resizer\":\"split-view__resizer___3smfz\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/split-view.scss\n// module id = 439\n// module chunks = 1","import * as React from 'react';\r\nimport { ScrollView as SV, IScrollViewProps } from 'react-bolivianite-grid';\r\nconst Style = require('./scroll-view.scss');\r\n\r\nexport class ScrollView extends React.Component<IScrollViewProps, {}> {\r\n    public render() {\r\n        return (\r\n            <SV\r\n                lock=\"y\"\r\n                scrollbarMinimizeDistance={100}\r\n                scrollbarWidth={15}\r\n                scrollbarWidthMinimized={5}\r\n                classNameTrackRoot={Style.scrollViewTrack}\r\n                classNameThumb={Style.scrollViewThumb}\r\n                {...this.props}\r\n            >\r\n                {this.props.children}\r\n            </SV>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/scroll-view.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"scrollViewTrack\":\"scroll-view__scrollViewTrack___33_84\",\"scrollViewThumb\":\"scroll-view__scrollViewThumb___2Q4z6\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/scroll-view.scss\n// module id = 441\n// module chunks = 1","import Article from './index';\r\n\r\nexport default Article.create('examples', [{\r\n    // Index article\r\n    name: '',\r\n    caption: '',\r\n    body: [\r\n    ]\r\n}, {\r\n    name: 'simple',\r\n    caption: 'Simple',\r\n    body: [\r\n        require('./example-simple.md'),\r\n        Article.example({\r\n            height: 600,\r\n            example: 'example-grid-simple.tsx',\r\n            files: [\r\n                ['example-grid-simple.tsx', 'javascript', 'main.tsx'],\r\n                ['grid-theme.ts', 'typescript']\r\n            ]\r\n        })\r\n    ]\r\n}]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/examples.ts","import { ICodeViewProps } from '~/components/ui';\r\n\r\nexport interface IArticle {\r\n    name: string;\r\n    caption: string;\r\n    body: (string | ICodeViewProps)[];\r\n}\r\n\r\nexport interface IArticlesSource {\r\n    url: string;\r\n    articles: IArticle[];\r\n}\r\n\r\n\r\nexport namespace Article {\r\n    export function create(url: string, articles: IArticle[]): IArticlesSource {\r\n        return { url, articles };\r\n    }\r\n\r\n    export function example(props: ICodeViewProps) {\r\n        return props;\r\n    }\r\n}\r\n\r\nexport default Article;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/index.ts","module.exports = \"# Simple example of grid\\r\\n\\r\\nRead only\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/articles/example-simple.md\n// module id = 444\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"main\":\"app__main___1EYxo\",\"footer\":\"app__footer___1X8FN\",\"footerContent\":\"app__footerContent___3P11k\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/app.scss\n// module id = 445\n// module chunks = 1","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nconst Style = require('./app-max-width.scss');\r\n\r\nexport class AppMaxWidth extends React.PureComponent<any, any> {\r\n    public render() {\r\n        return (\r\n            <div className={classnames(Style.root, this.props.className)}>\r\n                <div className={classnames(Style.layer, this.props.classNameLayer)}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/app-max-width.tsx","module.exports = \"import * as React from 'react';\\r\\n\\r\\nimport Grid, {\\r\\n    HeadersContainer, HeaderType, ICellRendererEvent, IHeaderRendererEvent, ISelectionRendererEvent\\r\\n} from 'react-bolivianite-grid';\\r\\n\\r\\nimport Theme from './grid-theme';\\r\\n\\r\\n\\r\\nexport class Example extends React.Component {\\r\\n    state = {\\r\\n        data: {} as {\\r\\n            [key: string]: string;\\r\\n        },\\r\\n        headers: new HeadersContainer({\\r\\n            columns: new Array(100).fill(null).map(() => ({})),\\r\\n            rows: new Array(200).fill(null).map(() => ({})),\\r\\n            columnWidth: 100,\\r\\n            rowHeight: 24,\\r\\n            headersHeight: 24,\\r\\n            headersWidth: 50\\r\\n        })\\r\\n    };\\r\\n\\r\\n    excelIndex(index: number) {\\r\\n        index++;\\r\\n        let c = '';\\r\\n\\r\\n        for (let a = 1, b = 26; (index -= a) >= 0; a = b, b *= 26) {\\r\\n            c = String.fromCharCode(~~((index % b) / a) + 65) + c;\\r\\n        }\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    renderCell = ({ style, columnIndex, rowIndex, source, theme }: ICellRendererEvent) => {\\r\\n        let key = `${rowIndex} x ${columnIndex}`;\\r\\n        let display = source[key] === void 0 ? key : source[key];\\r\\n\\r\\n        return (\\r\\n            <div\\r\\n                style={{\\r\\n                    ...style,\\r\\n                    boxSizing: 'border-box',\\r\\n                    borderRight: `solid 1px ${theme.cellBorderColor}`,\\r\\n                    borderBottom: `solid 1px ${theme.cellBorderColor}`,\\r\\n                    padding: '0 3px',\\r\\n                    display: 'flex',\\r\\n                    alignItems: 'center',\\r\\n                    color: theme.cellTextColor,\\r\\n                    background: (\\r\\n                        rowIndex % 2\\r\\n                            ? theme.cellBackgroundEven\\r\\n                            : theme.cellBackgroundOdd\\r\\n                    )\\r\\n                }}\\r\\n            >\\r\\n                {display}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    renderHeader = ({ style, type, selection, viewIndex, theme }: IHeaderRendererEvent) => {\\r\\n        let rcolor = (\\r\\n            type === HeaderType.Row && selection\\r\\n                ? theme.headerBorderColorSelected\\r\\n                : theme.headerBorderColor\\r\\n        );\\r\\n\\r\\n        let bcolor = (\\r\\n            type === HeaderType.Column && selection\\r\\n                ? theme.headerBorderColorSelected\\r\\n                : theme.headerBorderColor\\r\\n        );\\r\\n\\r\\n        let nextStyle: React.CSSProperties = {\\r\\n            ...style,\\r\\n            boxSizing: 'border-box',\\r\\n            borderRight: `solid 1px ${rcolor}`,\\r\\n            borderBottom: `solid 1px ${bcolor}`,\\r\\n            padding: '0 3px',\\r\\n            display: 'flex',\\r\\n            alignItems: 'center'\\r\\n        };\\r\\n\\r\\n        if (selection) {\\r\\n            nextStyle.backgroundColor = theme.headerBackgroundColorSelected;\\r\\n        }\\r\\n\\r\\n        if (type === HeaderType.Row) {\\r\\n            nextStyle.justifyContent = 'flex-end';\\r\\n        }\\r\\n\\r\\n        return (\\r\\n            <div style={nextStyle}>\\r\\n                {\\r\\n                    type === HeaderType.Column && viewIndex != null\\r\\n                        ? this.excelIndex(viewIndex)\\r\\n                        : viewIndex\\r\\n                }\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    renderSelection = ({ key, style, active, edit, theme }: ISelectionRendererEvent) => {\\r\\n        style.left--;\\r\\n        style.top--;\\r\\n        style.width++;\\r\\n        style.height++;\\r\\n\\r\\n        return (\\r\\n            <div\\r\\n                key={key}\\r\\n                style={{\\r\\n                    ...style,\\r\\n                    boxSizing: 'border-box',\\r\\n                    backgroundColor: (active || edit) ? theme.selectionBackgroundActive : theme.selectionBackground,\\r\\n                    border: active ? theme.selectionBorderActive : theme.selectionBorder\\r\\n                }}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <Grid\\r\\n                readOnly\\r\\n                headers={this.state.headers}\\r\\n                overscanRows={3}\\r\\n                source={this.state.data}\\r\\n                theme={Theme}\\r\\n                onRenderCell={this.renderCell}\\r\\n                onRenderHeader={this.renderHeader}\\r\\n                onRenderSelection={this.renderSelection}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Example;\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/articles/content/example-grid-simple.tsx\n// module id = 60\n// module chunks = 1","module.exports = \"import { IGridTheme } from 'react-bolivianite-grid';\\r\\n\\r\\nconst REQUIRED_THEME: IGridTheme = {\\r\\n    // Scroller theme\\r\\n    scrollbarWidth: 15,\\r\\n    scrollbarWidthMinimized: 5,\\r\\n    scrollbarMinimizeDistance: 100,\\r\\n    styleTrackRoot: {\\r\\n        transition: 'ease all 100ms',\\r\\n        background: `rgba(0, 0, 0, 0.2)`\\r\\n    },\\r\\n    styleThumb: {\\r\\n        background: `rgba(0, 0, 0, 0.8)`\\r\\n    },\\r\\n\\r\\n    // Grid theme\\r\\n    style: {\\r\\n        background: '#FFFFFF'\\r\\n    },\\r\\n    styleGridColumns: {\\r\\n        background: '#3C3744',\\r\\n        boxShadow: '0 0 5px #000',\\r\\n        color: '#DBDADD'\\r\\n    },\\r\\n    styleGridRows: {\\r\\n        background: '#3C3744',\\r\\n        boxShadow: '0 0 5px #000',\\r\\n        color: '#DBDADD'\\r\\n    },\\r\\n    styleGridCorner: {\\r\\n        borderRight: 'solid 1px #000',\\r\\n        borderBottom: 'solid 1px #000',\\r\\n        background: '#3C3744',\\r\\n        color: '#DBDADD',\\r\\n        boxSizing: 'border-box'\\r\\n    },\\r\\n};\\r\\n\\r\\nconst THEME = {\\r\\n    ...REQUIRED_THEME,\\r\\n\\r\\n    // Custom grid theme properties\\r\\n    cellTextColor: '#211E26',\\r\\n    cellBorderColor: '#918B9C',\\r\\n    cellBackgroundEven: '#EFEFEF',\\r\\n    cellBackgroundOdd: '#FFFFFF',\\r\\n    editorBorderColor: '#918B9C',\\r\\n    editorBackground: '#FFFFFF',\\r\\n    headerBorderColor: '#000000',\\r\\n    headerBorderColorSelected: '#0F0126',\\r\\n    headerBackgroundColorSelected: '#0F0126',\\r\\n    selectionBackground: 'rgba(15, 1, 38, 0.2)',\\r\\n    selectionBackgroundActive: 'transparent',\\r\\n    selectionBorder: 'solid 1px #0F0126',\\r\\n    selectionBorderActive: 'solid 2px #0F0126',\\r\\n    resizerBackground: 'rgba(0, 0, 0, 0.4)'\\r\\n};\\r\\n\\r\\nexport default THEME;\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/articles/content/grid-theme.ts\n// module id = 61\n// module chunks = 1","module.exports = \"import * as React from 'react';\\r\\n\\r\\nexport interface EditorProps {\\r\\n    initialValue: string;\\r\\n    update: (v: any) => void;\\r\\n}\\r\\n\\r\\nexport class Editor extends React.PureComponent<EditorProps, any> {\\r\\n    state = {\\r\\n        value: this.props.initialValue == null ? '' : this.props.initialValue\\r\\n    };\\r\\n\\r\\n    private _ref: HTMLInputElement;\\r\\n\\r\\n    private _onRef = (r: any) => {\\r\\n        this._ref = r;\\r\\n    }\\r\\n\\r\\n    public componentDidMount() {\\r\\n        if (!this._ref) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._ref.focus();\\r\\n        this._ref.select();\\r\\n    }\\r\\n\\r\\n    public componentWillUnmount() {\\r\\n        if (this.state.value !== this.props.initialValue) {\\r\\n            this.props.update(this.state.value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public render() {\\r\\n        return (\\r\\n            <input\\r\\n                ref={this._onRef}\\r\\n                style={{\\r\\n                    width: '100%',\\r\\n                    height: '100%',\\r\\n                    padding: 0,\\r\\n                    margin: 0,\\r\\n                    border: 0,\\r\\n                    background: 'transparent',\\r\\n                    outline: 'none',\\r\\n                    fontFamily: 'Verdana',\\r\\n                    fontSize: 14\\r\\n                }}\\r\\n                value={this.state.value}\\r\\n                onChange={(e) => {\\r\\n                    this.setState({ value: e.target.value });\\r\\n                }}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Editor;\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/articles/content/simple-editor.tsx\n// module id = 62\n// module chunks = 1","import * as React from 'react';\r\n\r\nimport Grid, {\r\n    HeadersContainer, HeaderType, ICellRendererEvent, IHeaderRendererEvent, ISelectionRendererEvent\r\n} from 'react-bolivianite-grid';\r\n\r\nimport Theme from './grid-theme';\r\n\r\n\r\nexport class Example extends React.Component {\r\n    state = {\r\n        data: {} as {\r\n            [key: string]: string;\r\n        },\r\n        headers: new HeadersContainer({\r\n            columns: new Array(100).fill(null).map(() => ({})),\r\n            rows: new Array(200).fill(null).map(() => ({})),\r\n            columnWidth: 100,\r\n            rowHeight: 24,\r\n            headersHeight: 24,\r\n            headersWidth: 50\r\n        })\r\n    };\r\n\r\n    excelIndex(index: number) {\r\n        index++;\r\n        let c = '';\r\n\r\n        for (let a = 1, b = 26; (index -= a) >= 0; a = b, b *= 26) {\r\n            c = String.fromCharCode(~~((index % b) / a) + 65) + c;\r\n        }\r\n\r\n        return c;\r\n    }\r\n\r\n    renderCell = ({ style, columnIndex, rowIndex, source, theme }: ICellRendererEvent) => {\r\n        let key = `${rowIndex} x ${columnIndex}`;\r\n        let display = source[key] === void 0 ? key : source[key];\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    ...style,\r\n                    boxSizing: 'border-box',\r\n                    borderRight: `solid 1px ${theme.cellBorderColor}`,\r\n                    borderBottom: `solid 1px ${theme.cellBorderColor}`,\r\n                    padding: '0 3px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    color: theme.cellTextColor,\r\n                    background: (\r\n                        rowIndex % 2\r\n                            ? theme.cellBackgroundEven\r\n                            : theme.cellBackgroundOdd\r\n                    )\r\n                }}\r\n            >\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderHeader = ({ style, type, selection, viewIndex, theme }: IHeaderRendererEvent) => {\r\n        let rcolor = (\r\n            type === HeaderType.Row && selection\r\n                ? theme.headerBorderColorSelected\r\n                : theme.headerBorderColor\r\n        );\r\n\r\n        let bcolor = (\r\n            type === HeaderType.Column && selection\r\n                ? theme.headerBorderColorSelected\r\n                : theme.headerBorderColor\r\n        );\r\n\r\n        let nextStyle: React.CSSProperties = {\r\n            ...style,\r\n            boxSizing: 'border-box',\r\n            borderRight: `solid 1px ${rcolor}`,\r\n            borderBottom: `solid 1px ${bcolor}`,\r\n            padding: '0 3px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        };\r\n\r\n        if (selection) {\r\n            nextStyle.backgroundColor = theme.headerBackgroundColorSelected;\r\n        }\r\n\r\n        if (type === HeaderType.Row) {\r\n            nextStyle.justifyContent = 'flex-end';\r\n        }\r\n\r\n        return (\r\n            <div style={nextStyle}>\r\n                {\r\n                    type === HeaderType.Column && viewIndex != null\r\n                        ? this.excelIndex(viewIndex)\r\n                        : viewIndex\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSelection = ({ key, style, active, edit, theme }: ISelectionRendererEvent) => {\r\n        style.left--;\r\n        style.top--;\r\n        style.width++;\r\n        style.height++;\r\n\r\n        return (\r\n            <div\r\n                key={key}\r\n                style={{\r\n                    ...style,\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: (active || edit) ? theme.selectionBackgroundActive : theme.selectionBackground,\r\n                    border: active ? theme.selectionBorderActive : theme.selectionBorder\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                readOnly\r\n                headers={this.state.headers}\r\n                overscanRows={3}\r\n                source={this.state.data}\r\n                theme={Theme}\r\n                onRenderCell={this.renderCell}\r\n                onRenderHeader={this.renderHeader}\r\n                onRenderSelection={this.renderSelection}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/content/example-grid-simple.tsx","export * from './components';\r\nexport * from './models';\r\nimport { Grid } from './components';\r\n\r\nexport default Grid;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/index.tsx","export * from './grid';\r\nexport * from './resizer';\r\nexport * from './types';\r\nexport * from './scrollview';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/index.tsx","import * as React from 'react';\r\nimport { getScrollbarSize, getRelativePosition, render } from '../controllers';\r\n\r\nexport interface IScrollViewUpdateEvent {\r\n    scrollLeft: number;\r\n    scrollTop: number;\r\n    scrollWidth: number;\r\n    scrollHeight: number;\r\n    clientWidth: number;\r\n    clientHeight: number;\r\n}\r\n\r\nexport type TScrollViewPartial<T = any> = JSX.Element | ((props: T) => JSX.Element);\r\n\r\nexport interface IScrollViewThemingProps {\r\n    scrollbarWidth?: number;\r\n    scrollbarWidthMinimized?: number;\r\n    scrollbarTrackMinimum?: number;\r\n    scrollbarMinimizeDistance?: number;\r\n\r\n    className?: string;\r\n    classNameTrackCorner?: string;\r\n    classNameTrackRoot?: string;\r\n    classNameTrack?: string;\r\n    classNameThumb?: string;\r\n    classNameTrackRootRight?: string;\r\n    classNameTrackRight?: string;\r\n    classNameThumbRight?: string;\r\n    classNameTrackRootBottom?: string;\r\n    classNameTrackBottom?: string;\r\n    classNameThumbBottom?: string;\r\n\r\n    style?: React.CSSProperties;\r\n    styleTrackCorner?: React.CSSProperties;\r\n    styleTrackRoot?: React.CSSProperties;\r\n    styleTrack?: React.CSSProperties;\r\n    styleThumb?: React.CSSProperties;\r\n    styleTrackRootRight?: React.CSSProperties;\r\n    styleTrackRight?: React.CSSProperties;\r\n    styleThumbRight?: React.CSSProperties;\r\n    styleTrackRootBottom?: React.CSSProperties;\r\n    styleTrackBottom?: React.CSSProperties;\r\n    styleThumbBottom?: React.CSSProperties;\r\n}\r\n\r\nexport interface IScrollViewProps extends IScrollViewThemingProps {\r\n    middleLayer?: boolean;\r\n    height?: number | string;\r\n    width?: number | string;\r\n    lock?: 'x' | 'y';\r\n    scrollerProps?: React.HTMLProps<HTMLDivElement>;\r\n    renderAfter?: TScrollViewPartial<IScrollViewUpdateEvent>;\r\n    onScroll?: (event: IScrollViewUpdateEvent) => void;\r\n}\r\n\r\nexport class ScrollView extends React.Component<IScrollViewProps, any> {\r\n    state = {\r\n        xEnabled: false,\r\n        yEnabled: false,\r\n        minimized: true\r\n    };\r\n\r\n    private _scrollBarSize = getScrollbarSize();\r\n    private _a: HTMLDivElement;\r\n    private _r: HTMLDivElement;\r\n    private _x: HTMLDivElement;\r\n    private _y: HTMLDivElement;\r\n    private _taskResize: any = null;\r\n    private _xpos = 0;\r\n    private _ypos = 0;\r\n    private _xratio = 1;\r\n    private _yratio = 1;\r\n    private _xsize = 0; // internal\r\n    private _ysize = 0;\r\n    private _xlen = 0; // external\r\n    private _ylen = 0;\r\n    private _xmove = -1; // scroll moving start positions\r\n    private _xmoveScrollPos = 0;\r\n    private _ymove = -1;\r\n    private _ymoveScrollPos = 0;\r\n\r\n    constructor(p: IScrollViewProps, c: any) {\r\n        super(p, c);\r\n    }\r\n\r\n    public get minimized() {\r\n        return this._xmove === -1 && this._ymove === -1 && this.state.minimized;\r\n    }\r\n\r\n    public get scrollbarMinimizeDistance() {\r\n        return Math.max(0, this.props.scrollbarMinimizeDistance || 100);\r\n    }\r\n\r\n    public get scrollbarTrackMinimum() {\r\n        return Math.max(0, this.props.scrollbarTrackMinimum || 20);\r\n    }\r\n\r\n    public get scrollbarSize() {\r\n        return Math.max(0, this.props.scrollbarWidth || 0);\r\n    }\r\n\r\n    public get currentScrollbarSize() {\r\n        const size = (\r\n            this.minimized\r\n                ? this.props.scrollbarWidthMinimized\r\n                : this.props.scrollbarWidth\r\n        );\r\n\r\n        return Math.max(0, size || 0);\r\n    }\r\n\r\n    public get scrollLeft() {\r\n        return this._r.scrollLeft;\r\n    }\r\n\r\n    public set scrollLeft(v) {\r\n        this._r.scrollLeft = v;\r\n    }\r\n\r\n    public get scrollTop() {\r\n        return this._r.scrollTop;\r\n    }\r\n\r\n    public set scrollTop(v) {\r\n        this._r.scrollTop = v;\r\n    }\r\n\r\n    public get scrollWidth() {\r\n        return this._r.scrollWidth;\r\n    }\r\n\r\n    public get scrollHeight() {\r\n        return this._r.scrollHeight;\r\n    }\r\n\r\n    public get clientWidth() {\r\n        return this._a.clientWidth;\r\n    }\r\n\r\n    public get clientHeight() {\r\n        return this._a.clientHeight;\r\n    }\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._r = r;\r\n    }\r\n\r\n    private _onRefA = (a: HTMLDivElement) => {\r\n        this._a = a;\r\n    }\r\n\r\n    private _onRefX = (x: HTMLDivElement) => {\r\n        this._x = x;\r\n    }\r\n\r\n    private _onRefY = (y: HTMLDivElement) => {\r\n        this._y = y;\r\n    }\r\n\r\n    private _onScroll = (e: UIEvent) => {\r\n        if (e && this._r !== e.target) {\r\n            return;\r\n        }\r\n\r\n        if (e) {\r\n            this._updateScrollbars();\r\n        }\r\n\r\n        if (this.props.onScroll) {\r\n            this.props.onScroll(this._getUpdateEventObject());\r\n        }\r\n    }\r\n\r\n    private _onMouseDownX = (e: MouseEvent) => {\r\n        this._xmove = e.clientX;\r\n        this._xmoveScrollPos = this._r.scrollLeft;\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onMouseDownY = (e: MouseEvent) => {\r\n        this._ymove = e.clientY;\r\n        this._ymoveScrollPos = this._r.scrollTop;\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onMouseMove = (e: MouseEvent) => {\r\n        if (this._xmove > -1) {\r\n            this._r.scrollLeft = this._xmoveScrollPos + (e.clientX - this._xmove) / this._xratio;\r\n        }\r\n\r\n        if (this._ymove > -1) {\r\n            this._r.scrollTop = this._ymoveScrollPos + (e.clientY - this._ymove) / this._yratio;\r\n        }\r\n    }\r\n\r\n    private _onRootMouseMove = (e: React.MouseEvent<HTMLElement>) => {\r\n        let { x, y } = getRelativePosition(e.pageX, e.pageY, this._a);\r\n        let h = this._a.clientHeight;\r\n        let w = this._a.clientWidth;\r\n        let t = this.scrollbarMinimizeDistance;\r\n        let minimized = (\r\n            (this.props.lock && this.props.lock !== 'y' || w - x > t) &&\r\n            (this.props.lock && this.props.lock !== 'x' || h - y > t)\r\n        );\r\n\r\n        if (minimized !== this.state.minimized) {\r\n            this.setState({ minimized });\r\n        }\r\n    }\r\n\r\n    private _onRootMouseLeave = () => {\r\n        this.setState({ minimized: true });\r\n    }\r\n\r\n    private _onMouseUp = () => {\r\n        if (this._xmove === -1 && this._ymove === -1) {\r\n            return;\r\n        }\r\n\r\n        this._xmove = -1;\r\n        this._ymove = -1;\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _onScrollMouseY = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!this.state.yEnabled || !this._r || e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let cp = e.nativeEvent.offsetY;\r\n        let sp = this._ypos;\r\n        let ss = this._ysize;\r\n\r\n        if (cp < sp) {\r\n            this.scrollTop = Math.max(0, this.scrollTop - this.clientHeight);\r\n        } else if (cp > sp + ss) {\r\n            this.scrollTop = Math.min(this.scrollHeight, this.scrollTop + this.clientHeight);\r\n        }\r\n    }\r\n\r\n    private _onScrollMouseX = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!this.state.xEnabled || !this._r || e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let cp = e.nativeEvent.offsetX;\r\n        let sp = this._xpos;\r\n        let ss = this._xsize;\r\n\r\n        if (cp < sp) {\r\n            this.scrollLeft = Math.max(0, this.scrollLeft - this.clientWidth);\r\n        } else if (cp > sp + ss) {\r\n            this.scrollLeft = Math.min(this.scrollWidth, this.scrollLeft + this.clientWidth);\r\n        }\r\n    }\r\n\r\n    private _getUpdateEventObject(): IScrollViewUpdateEvent {\r\n        if (!this._r) {\r\n            return {\r\n                scrollLeft: 0,\r\n                scrollTop: 0,\r\n                scrollWidth: 0,\r\n                scrollHeight: 0,\r\n                clientWidth: 0,\r\n                clientHeight: 0\r\n            };\r\n        }\r\n\r\n        return {\r\n            scrollLeft: this.scrollLeft,\r\n            scrollTop: this.scrollTop,\r\n            scrollWidth: this.scrollWidth,\r\n            scrollHeight: this.scrollHeight,\r\n            clientWidth: this.clientWidth,\r\n            clientHeight: this.clientHeight\r\n        };\r\n    }\r\n\r\n    private _joinClassNames(...cn: string[]) {\r\n        return cn.map(v => (v || '').trim()).filter(v => !!v).join(' ');\r\n    }\r\n\r\n    private _joinStyles(...s: React.CSSProperties[]): React.CSSProperties {\r\n        return Object.assign({}, ...(s.map(v => v || {})));\r\n    }\r\n\r\n    private _getClassNames(type: 'Right' | 'Bottom') {\r\n        const p = this.props as any;\r\n        return {\r\n            classNameTrackRoot: this._joinClassNames(p.classNameTrackRoot, p[`classNameTrackRoot${type}`]),\r\n            classNameTrack: this._joinClassNames(p.classNameTrack, p[`classNameTrack${type}`]),\r\n            classNameThumb: this._joinClassNames(p.classNameThumb, p[`classNameThumb${type}`]),\r\n        };\r\n    }\r\n\r\n    private _getStyles(type: 'Right' | 'Bottom') {\r\n        const p = this.props as any;\r\n        return {\r\n            styleTrackRoot: this._joinStyles(p.styleTrackRoot, p[`styleTrackRoot${type}`]),\r\n            styleTrack: this._joinStyles(p.styleTrack, p[`styleTrack${type}`]),\r\n            styleThumb: this._joinStyles(p.styleThumb, p[`styleThumb${type}`]),\r\n        };\r\n    }\r\n\r\n    /** Calculates scrollbar size, position and scale ratio. Then updates scrollbars directly. */\r\n    private _updateScrollbars(cb?: () => void) {\r\n        let t = this._r;\r\n        let ss = this.scrollbarSize;\r\n        let sx = this.props.lock === 'x' ? 0 : ss;\r\n        let sy = this.props.lock === 'y' ? 0 : ss;\r\n        let sm = this.scrollbarTrackMinimum; // scrollbar minimum length\r\n\r\n        // size of the canvas\r\n        let c = t.children[0] as HTMLElement;\r\n        this._xlen = c.clientWidth + c.offsetLeft;\r\n        this._ylen = c.clientHeight + c.offsetTop;\r\n\r\n        let viewportWidth = t.clientWidth;\r\n        let viewportHeight = t.clientHeight;\r\n\r\n        this._xratio = viewportWidth === this._xlen ? 1 : Math.max(0, Math.min(1, (viewportWidth - ss) / this._xlen));\r\n        this._yratio = viewportHeight === this._ylen ? 1 : Math.max(0, Math.min(1, (viewportHeight - ss) / this._ylen));\r\n        this._xsize = Math.round(this._xratio * viewportWidth);\r\n        this._ysize = Math.round(this._yratio * viewportHeight);\r\n\r\n        if (this._xsize < sm) {\r\n            this._xratio = Math.max(0, Math.min(1, (viewportWidth - ss - (sm - this._xsize)) / this._xlen));\r\n            this._xsize = sm;\r\n        }\r\n\r\n        if (this._ysize < sm) {\r\n            this._yratio = Math.max(0, Math.min(1, (viewportHeight - ss - (sm - this._ysize)) / this._ylen));\r\n            this._ysize = sm;\r\n        }\r\n\r\n        this._xpos = Math.round(t.scrollLeft / (t.scrollWidth - viewportWidth) * (viewportWidth - this._xsize - sx));\r\n        this._ypos = Math.round(t.scrollTop / (t.scrollHeight - viewportHeight) * (viewportHeight - this._ysize - sy));\r\n\r\n        this._x.style.left = `${this._xpos}px`;\r\n        this._y.style.top = `${this._ypos}px`;\r\n        this._x.style.width = `${this._xsize}px`;\r\n        this._y.style.height = `${this._ysize}px`;\r\n\r\n        let xEnabled = this.state.xEnabled;\r\n        let yEnabled = this.state.yEnabled;\r\n\r\n        if (this._xratio === 1 && this.state.xEnabled) {\r\n            xEnabled = false;\r\n        } else if (this._xratio < 1 && !this.state.xEnabled) {\r\n            xEnabled = true;\r\n        }\r\n\r\n        if (this._yratio === 1 && this.state.yEnabled) {\r\n            yEnabled = false;\r\n        } else if (this._yratio < 1 && !this.state.yEnabled) {\r\n            yEnabled = true;\r\n        }\r\n\r\n        this.setState({ xEnabled, yEnabled }, cb);\r\n    }\r\n\r\n    private _renderBody() {\r\n        let ap: any = {};\r\n\r\n        if (this.props.lock === 'x') {\r\n            ap['overflowY'] = 'hidden';\r\n        } else if (this.props.lock === 'y') {\r\n            ap['overflowX'] = 'hidden';\r\n        }\r\n\r\n        return (\r\n            <div\r\n                {...this.props.scrollerProps}\r\n                ref={this._onRef}\r\n                style={{\r\n                    ...(this.props.scrollerProps && this.props.scrollerProps.style || {}),\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    top: 0,\r\n                    right: this.props.lock === 'x' ? 0 : -this._scrollBarSize,\r\n                    bottom: this.props.lock === 'y' ? 0 : -this._scrollBarSize,\r\n                    overflow: 'scroll',\r\n                    boxSizing: 'content-box',\r\n                    ...ap\r\n                }}\r\n            >\r\n                {\r\n                    this.props.middleLayer\r\n                        ? <div>{this.props.children}</div>\r\n                        : this.props.children\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderXScrollbar(scrollSize: number) {\r\n        const { classNameThumb, classNameTrack, classNameTrackRoot } = this._getClassNames('Bottom');\r\n        const { styleThumb, styleTrack, styleTrackRoot } = this._getStyles('Bottom');\r\n\r\n        return (\r\n            <div\r\n                className={classNameTrackRoot}\r\n                style={{\r\n                    ...styleTrackRoot,\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: this.props.lock === 'x' ? 0 : scrollSize,\r\n                    bottom: 0,\r\n                    height: scrollSize,\r\n                    display: !this.state.xEnabled || this.props.lock === 'y' ? 'none' : '',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                <div\r\n                    className={classNameTrack}\r\n                    style={{\r\n                        ...styleTrack,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    onMouseDown={this._onScrollMouseX}\r\n                />\r\n                <div\r\n                    className={classNameThumb}\r\n                    ref={this._onRefX}\r\n                    style={{\r\n                        ...styleThumb,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        height: '100%'\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderYScrollbar(scrollSize: number) {\r\n        const { classNameThumb, classNameTrack, classNameTrackRoot } = this._getClassNames('Right');\r\n        const { styleThumb, styleTrack, styleTrackRoot } = this._getStyles('Right');\r\n\r\n        return (\r\n            <div\r\n                className={classNameTrackRoot}\r\n                style={{\r\n                    ...styleTrackRoot,\r\n                    position: 'absolute',\r\n                    right: 0,\r\n                    bottom: this.props.lock === 'y' ? 0 : scrollSize,\r\n                    top: 0,\r\n                    width: scrollSize,\r\n                    display: !this.state.yEnabled || this.props.lock === 'x' ? 'none' : '',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                <div\r\n                    className={classNameTrack}\r\n                    style={{\r\n                        ...styleTrack,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    onMouseDown={this._onScrollMouseY}\r\n                />\r\n                <div\r\n                    className={classNameThumb}\r\n                    ref={this._onRefY}\r\n                    style={{\r\n                        ...styleThumb,\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        width: '100%'\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderZScrollbar(scrollSize: number) {\r\n        return (\r\n            <div\r\n                className={this._joinClassNames(\r\n                    this.props.classNameTrackRoot,\r\n                    this.props.classNameTrackCorner\r\n                )}\r\n                style={{\r\n                    ...(this._joinStyles(\r\n                        this.props.styleTrackRoot || {},\r\n                        this.props.styleTrackCorner || {}\r\n                    )),\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    height: scrollSize,\r\n                    width: scrollSize,\r\n                    display: (\r\n                        (\r\n                            (!this.state.xEnabled && !this.state.yEnabled) ||\r\n                            (this.props.lock === 'x' || this.props.lock === 'y')\r\n                        )\r\n                            ? 'none'\r\n                            : ''\r\n                    ),\r\n                    zIndex: 1\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.setState({\r\n            scrollHeight: this._r.offsetHeight - this._r.clientHeight,\r\n            scrollWidth: this._r.offsetWidth - this._r.clientWidth\r\n        });\r\n\r\n        this._r.addEventListener('scroll', this._onScroll);\r\n        this._x.addEventListener('mousedown', this._onMouseDownX);\r\n        this._y.addEventListener('mousedown', this._onMouseDownY);\r\n        window.addEventListener('mousemove', this._onMouseMove);\r\n        window.addEventListener('mouseup', this._onMouseUp);\r\n\r\n        let t = this._r;\r\n        let c = t.children[0] as HTMLElement;\r\n\r\n        let rootWidth = t.clientWidth;\r\n        let rootHeight = t.clientHeight;\r\n        let canvasWidth = c ? c.clientWidth + c.offsetLeft : 0;\r\n        let canvasHeight = c ? c.clientHeight + c.offsetTop : 0;\r\n\r\n        this._taskResize = setInterval(() => {\r\n            let newRootWidth = t.clientWidth;\r\n            let newRootHeight = t.clientHeight;\r\n            let newCanvasWidth = c ? c.clientWidth + c.offsetLeft : 0;\r\n            let newCanvasHeight = c ? c.clientHeight + c.offsetTop : 0;\r\n\r\n            if (\r\n                newRootWidth !== rootWidth || newRootHeight !== rootHeight ||\r\n                newCanvasWidth !== canvasWidth || newCanvasHeight !== canvasHeight\r\n            ) {\r\n                rootWidth = newRootWidth;\r\n                rootHeight = newRootHeight;\r\n                canvasWidth = newCanvasWidth;\r\n                canvasHeight = newCanvasHeight;\r\n                this._updateScrollbars();\r\n                this._onScroll(null);\r\n            }\r\n        }, 20);\r\n\r\n        this._updateScrollbars(() => {\r\n            if (this.props.onScroll) {\r\n                this.props.onScroll(this._getUpdateEventObject());\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._r.removeEventListener('scroll', this._onScroll);\r\n        this._x.removeEventListener('mousedown', this._onMouseDownX);\r\n        this._y.removeEventListener('mousedown', this._onMouseDownY);\r\n        window.removeEventListener('mousemove', this._onMouseMove);\r\n        window.removeEventListener('mouseup', this._onMouseUp);\r\n        clearInterval(this._taskResize);\r\n    }\r\n\r\n    public render() {\r\n        let { currentScrollbarSize, props } = this;\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                ref={this._onRefA}\r\n                style={{\r\n                    height: props.height == void 0 ? '100%' : props.height,\r\n                    width: props.width == void 0 ? '100%' : props.width,\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    ...this.props.style\r\n                }}\r\n                onMouseMove={this._onRootMouseMove}\r\n                onMouseLeave={this._onRootMouseLeave}\r\n            >\r\n                {this._renderBody()}\r\n                {render(props.renderAfter, () => this._getUpdateEventObject())}\r\n                {this._renderXScrollbar(currentScrollbarSize)}\r\n                {this._renderYScrollbar(currentScrollbarSize)}\r\n                {this._renderZScrollbar(currentScrollbarSize)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollView;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/scrollview.tsx","export * from './debounce';\r\nexport * from './controller';\r\nexport * from './keyboard';\r\nexport * from './mouse';\r\nexport * from './renderthrottler';\r\nexport * from './scrollbar-size';\r\nexport * from './shallow';\r\nexport * from './relative-position';\r\nexport * from './render';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/index.ts","export enum HeaderType {\r\n    Row = 1,\r\n    Column\r\n}\r\n\r\nexport interface IHeader {\r\n    /** Unique header identifier for **all** headers in container. Do not edit. Assigned by header container if not provided. */\r\n    $id?: number | string;\r\n    /** List of children headers. */\r\n    $children?: IHeader[];\r\n    /** Size of current header. */\r\n    $size?: number;\r\n    /** Filter flag. */\r\n    $collapsed?: boolean;\r\n\r\n    [prop: string]: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/header.ts","export class RenderThrottler {\r\n    private _ids = 0;\r\n    private _tasks: {\r\n        [id: string]: Function\r\n    } = {};\r\n    private _active = true;\r\n\r\n    constructor() {\r\n        window.requestAnimationFrame(this._step);\r\n    }\r\n\r\n    private _step = () => {\r\n        let c = 0;\r\n        for (let id of Object.keys(this._tasks)) {\r\n            let f = this._tasks[id];\r\n\r\n            if (f) {\r\n                f();\r\n            }\r\n\r\n            delete this._tasks[id];\r\n            c++;\r\n        }\r\n\r\n        if (!c) {\r\n            this._active = false;\r\n        } else {\r\n            window.requestAnimationFrame(this._step);\r\n        }\r\n    }\r\n\r\n    public create() {\r\n        const id = this._ids++;\r\n        return (fn: Function) => {\r\n            this._tasks[id] = fn;\r\n\r\n            if (!this._active) {\r\n                this._active = true;\r\n                window.requestAnimationFrame(this._step);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default RenderThrottler;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/renderthrottler.ts","import * as React from 'react';\r\n\r\nexport interface EditorProps {\r\n    initialValue: string;\r\n    update: (v: any) => void;\r\n}\r\n\r\nexport class Editor extends React.PureComponent<EditorProps, any> {\r\n    state = {\r\n        value: this.props.initialValue == null ? '' : this.props.initialValue\r\n    };\r\n\r\n    private _ref: HTMLInputElement;\r\n\r\n    private _onRef = (r: any) => {\r\n        this._ref = r;\r\n    }\r\n\r\n    public componentDidMount() {\r\n        if (!this._ref) {\r\n            return;\r\n        }\r\n\r\n        this._ref.focus();\r\n        this._ref.select();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        if (this.state.value !== this.props.initialValue) {\r\n            this.props.update(this.state.value);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <input\r\n                ref={this._onRef}\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    padding: 0,\r\n                    margin: 0,\r\n                    border: 0,\r\n                    background: 'transparent',\r\n                    outline: 'none',\r\n                    fontFamily: 'Verdana',\r\n                    fontSize: 14\r\n                }}\r\n                value={this.state.value}\r\n                onChange={(e) => {\r\n                    this.setState({ value: e.target.value });\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/content/simple-editor.tsx","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render((\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n), document.getElementsByTagName('app')[0]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.tsx","export * from './toolbar';\r\nexport * from './navigation-item';\r\nexport * from './github-icon';\r\nexport * from './app-max-width';\r\nexport * from './page';\r\nexport * from './page-articles';\r\nexport * from './code';\r\nexport * from './markdown';\r\nexport * from './code-view';\r\nexport * from './split-view';\r\nexport * from './scroll-view';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/index.tsx"],"sourceRoot":""}