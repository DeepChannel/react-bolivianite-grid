{"version":3,"sources":["webpack:///./src/components/index.tsx","webpack:///./src/components/app.tsx","webpack:///./src/components/ui/toolbar.tsx","webpack:///./src/components/ui/toolbar.scss","webpack:///./src/components/ui/app-max-width.scss","webpack:///./src/components/ui/navigation-item.tsx","webpack:///./src/components/ui/navigation-item.scss","webpack:///./src/components/ui/github-icon.tsx","webpack:///./src/components/ui/github-icon.scss","webpack:///./src/components/ui/page.tsx","webpack:///./src/components/ui/page.scss","webpack:///./src/components/ui/page-articles.tsx","webpack:///./src/components/ui/page-articles.scss","webpack:///./src/components/ui/code.tsx","webpack:///../src/models/index.ts","webpack:///../src/controllers/controller.ts","webpack:///./src/components/ui/markdown.tsx","webpack:///./src/articles/content/grid-theme.ts","webpack:///./src/components/ui/markdown.scss","webpack:///./src/components/ui/code-view.tsx","webpack:///./src/components/ui/code-view.scss","webpack:///./src/articles/content ./node_modules/raw-loader ^\\.\\/.*$","webpack:///./src/articles/content ^\\.\\/.*$","webpack:///../src/components/grid.tsx","webpack:///../src/controllers/debounce.ts","webpack:///../src/controllers/keyboard.ts","webpack:///../src/controllers/mouse.ts","webpack:///../src/models/container.ts","webpack:///../src/controllers/scrollbar-size.ts","webpack:///../src/controllers/shallow.ts","webpack:///../src/controllers/relative-position.ts","webpack:///../src/controllers/render.tsx","webpack:///../src/components/resizer.tsx","webpack:///./src/components/ui/split-view.tsx","webpack:///./src/components/ui/split-view.scss","webpack:///./src/components/ui/scroll-view.tsx","webpack:///./src/components/ui/scroll-view.scss","webpack:///./src/articles/examples.ts","webpack:///./src/articles/index.ts","webpack:///./src/articles/example-simple.md","webpack:///./src/components/app.scss","webpack:///./src/components/ui/app-max-width.tsx","webpack:///./src/articles/content/example-grid-simple.tsx?250c","webpack:///./src/articles/content/grid-theme.ts?be2e","webpack:///./src/articles/content/simple-editor.tsx?e460","webpack:///./src/articles/content/example-grid-simple.tsx","webpack:///../src/index.tsx","webpack:///../src/components/index.tsx","webpack:///../src/components/scrollview.tsx","webpack:///../src/controllers/index.ts","webpack:///../src/models/header.ts","webpack:///../src/controllers/renderthrottler.ts","webpack:///./src/articles/content/simple-editor.tsx","webpack:///./src/index.tsx","webpack:///./src/components/ui/index.tsx"],"names":["__export","__webpack_require__","React","ui_1","react_router_dom_1","examples_1","Style","App","_super","__extends","prototype","render","createElement","Fragment","Toolbar","NavigationItem","exact","location","target","href","GitHubIcon","className","main","Switch","Route","path","Page","PageArticles","source","default","footer","AppMaxWidth","classNameLayer","footerContent","Component","exports","app_max_width_1","root","layer","this","props","children","PureComponent","module","classnames","orientation","NavLink","to","_a","left","top","right","bottom","activeClassName","selected","PATH","join","size","viewBox","style","--svg-icon--size","d","index_1","_renderNavigation","navigation","navigtaion","map","i","caption","key","content","_this","apply","arguments","state","_onUpdate","prev","next","url","articles","forEach","name","article","body","loc","push","setState","_renderArticle","p","chunk","Markdown","files","example","height","CodeView","componentDidMount","componentDidUpdate","react_syntax_highlighter_1","CodeTheme","CODE_STYLE_PROPS","margin","boxSizing","overflowY","overflowX","display","background","Code","showLineNumbers","language","customStyle","IS_MACOS","navigator","platform","slice","Controller","_props","_state","_getModifiers","e","ctrlKey","altKey","shiftKey","cmdKey","getModifierState","macCmdKey","_clampAddress","column","row","_b","rows","columns","Math","min","max","_splitSelection","selection","last","pop","_getSelectedCells","_i","selection_1","length","width","r","rLast","c","cLast","Object","keys","sort","k","_request","getState","MDRenderer","_codeInlineRenderer","value","code","_codeMultilineRenderer","multilineCode","renderers","inlineCode","THEME","__assign","scrollbarWidth","scrollbarWidthMinimized","scrollbarMinimizeDistance","styleTrackRoot","transition","styleThumb","styleGridColumns","boxShadow","color","styleGridRows","styleGridCorner","borderRight","borderBottom","cellTextColor","cellBorderColor","cellBackgroundEven","cellBackgroundOdd","editorBorderColor","editorBackground","headerBorderColor","headerBorderColorSelected","headerBackgroundColorSelected","selectionBackground","selectionBackgroundActive","selectionBorder","selectionBorderActive","resizerBackground","tab","_extractFile","file","filename","_renderFileContent","D","_renderTabs","tabSelected","onClick","maxHeight","controls","SplitView","ScrollView","container","lock","./example-grid-simple","./example-grid-simple.tsx","./grid-theme","./grid-theme.ts","./simple-editor","./simple-editor.tsx","webpackContext","req","webpackContextResolve","id","Error","resolve","PropTypes","scrollview_1","controllers_1","models_1","Grid","call","_blockContextMenu","_onContextMenuListener","_rt","RenderThrottler","_scrollUpdateTrottled","create","_ref","_refView","_scrollerProps","willChange","zIndex","_lastView","_lastOverscan","_focused","_kbCtr","_msCtr","_currentEdit","scrollLeft","scrollTop","viewHeight","viewWidth","active","edit","resizeHeaderPreview","resizeLevelPreview","_onRef","_onRefView","_onBlur","_onFocus","_onScrollViewUpdate","clientWidth","clientHeight","_onKeyDown","persist","keydown","_onMouseDown","Number","currentTarget","getAttribute","focus","mousedown","_onMouseDownHeader","type","h","headers","getHeader","onHeaderRightClick","header","event","defaultPrevented","indices","getHeaderLeaves","v","getViewIndex","headerdown","_onMouseEnter","mouseenter","_onRootMouseLeave","x","pageX","y","pageY","rect","getBoundingClientRect","rootleave","_onRootMouseEnter","rootenter","_onRootMouseDown","button","_renderHeaderContainers","pointerEvents","headersHeight","_theme","classNameGridColumns","position","overflow","headersWidth","_renderHeaders","HeaderType","Column","classNameGridRows","Row","classNameGridCorner","_renderResizing","openEditor","cell","readOnly","closeEditor","commit","callback","onUpdate","col","nextValue","updatedValue","_onAfterUpdate","debounce","bind","editor","focused","_columnCount","_rowCount","view","onScroll","scrollTo","onUpdateSelection","KeyboardController","onCloseEditor","onOpenEditor","onCopy","cells","withHeaders","onPaste","clipboard","getAllSelectedCells","getLastSelectedCells","onNullify","onRemove","onSpace","MouseController","onRightClick","getChildContext","grid","defineProperty","theme","styleGrid","_onAutoMeasureApply","result","behavior","filter","columnHeaders","rowHeaders","result_1","rowIndex","columnIndex","ch","getManualResized","$size","getHeaderType","rh","onHeaderResize","concat","_onAutoMeasure","onAutoMeasure","firstColumn","firstRow","lastRow","lastColumn","columnHeader","rowHeader","_createView","sl","st","vw","_headersWidth","vh","_headersHeight","rowsHeight","columnsWidth","colIndex","_c","rhLast","chLast","getPosition","_createOverscan","overscanRows","overscanColumns","_prepareCellProps","_renderCell","onRenderCell","cloneElement","Children","only","x-row","x-col","onMouseDown","onMouseEnter","_renderEditor","onRenderEditor","cellProps","close","update","_renderData","columnCount","rowCount","irlen","iclen","jsx","Array","ir","ic","_renderHeader","out","index","scrollPos","parent","$id","$children","level","getLevel","getLeftLevelPosition","getLeftLevelWidth","leftLevels","getTopLevelPosition","getTopLevelHeight","topLevels","s","headerParent","getParent","onRenderHeader","parentHeader","viewIndex","x-type","x-id","isRow","first","len","ix","onRenderResizer","styleInitial","styleChanged","change","headerType","headerPosition","resizer","_renderSelections","l","t","w","reduce","n","onRenderSelection","ax","blur","rowPos","rowSize","colPos","colSize","resizeHeaders","resizeLevel","onHeaderLevelResize","autoMeasure","batch","batch_1","list_1","previewResizeHeader","previewResizeLevel","document","addEventListener","preventDefault","componentWillUnmount","removeEventListener","dispose","classNameGrid","tabIndex","ref","onBlur","onFocus","userSelect","outline","onKeyDown","onMouseLeave","scrollerProps","renderAfter","marginLeft","marginTop","childContextTypes","object","time","fn","task","args","clearTimeout","setTimeout","_paste","clipboardData","_isInput","keyCode","_moveSelection","direction","distance","nextScroll","nextActive","nextSelection","delta","newColumn","newWidth","newRow","newHeight","lastPos","_onTab","insideSelection","_onEnter","_onSpace","_onPageUpDown","pageColumns","pageRows","_onHomeEnd","_onArrows","_onCopy","_onNullify","_onRemove","rowMap","colMap","_onSelectAll","_onData","_lastMouseDown","_down","_scrollBySelect","_scrollTask","_autoscroll","scroll","_mouseup","window","_mouseSelectFromActive","setInterval","clearInterval","clickInEditor","Date","now","err","console","log","header_1","HeadersContainer","_idCounter","_idMap","viewColumns","viewRows","viewLeftLevels","viewTopLevels","types","positions","levels","parents","manualResized","_create","_calcPosition","_calcLevels","toJSON","list","assignParent","$collapsed","_createClone","_applyHeaderLevel","seek","_applyParentPosition","_proceedHeaders","from","cursor","parent_1","columnWidth","rowHeight","_getLevelPosition","_getLeaves","_getResizeList","clamp","prevSize","leaves","floor","m","_getHeaderAddress","reverse","_mapBranch","address","_recalcHeaders","_updateHeaders","branchMap","sourceList","branchList","branch","split","updateMap","getSource","updateFilter","updateHeaders","updates","mapColumns","mapRows","branchName","u","isManual_1","Infinity","getScrollbarSize","appendChild","removeChild","is","Shallow","nextKeys","prevKeys","prevKeys_1","hasOwnProperty","getRelativePosition","element","parentElement","offsetLeft","offsetTop","offsetParent","getProps","Resizer","_moving","_moveListener","_upListener","_escListener","_moved","_container","_unbind","movingType","_lastClick","_grid","start","_onChange","ev","_onMove","context","_r","contextTypes","renderthrottler_1","initial","drag","_mounted","_t","_mousemove","throttle","nextPosition","minimum","a","toArray","react_bolivianite_grid_1","classNameTrackRoot","scrollViewTrack","classNameThumb","scrollViewThumb","Article","grid_theme_1","Example","data","fill","renderCell","padding","alignItems","renderHeader","rcolor","bcolor","nextStyle","backgroundColor","justifyContent","excelIndex","renderSelection","border","b","String","fromCharCode","components_1","xEnabled","yEnabled","minimized","_scrollBarSize","_taskResize","_xpos","_ypos","_xratio","_yratio","_xsize","_ysize","_xlen","_ylen","_xmove","_xmoveScrollPos","_ymove","_ymoveScrollPos","_onRefA","_onRefX","_x","_onRefY","_y","_onScroll","_updateScrollbars","_getUpdateEventObject","_onMouseDownX","clientX","_onMouseDownY","clientY","_onMouseMove","_onRootMouseMove","_onMouseUp","forceUpdate","_onScrollMouseY","cp","nativeEvent","offsetY","sp","ss","scrollHeight","_onScrollMouseX","offsetX","scrollWidth","scrollbarTrackMinimum","_joinClassNames","cn","trim","_joinStyles","assign","_getClassNames","classNameTrack","_getStyles","styleTrack","cb","scrollbarSize","sx","sy","sm","viewportWidth","viewportHeight","round","_renderBody","ap","middleLayer","_renderXScrollbar","scrollSize","_renderYScrollbar","_renderZScrollbar","classNameTrackCorner","styleTrackCorner","offsetHeight","offsetWidth","rootWidth","rootHeight","canvasWidth","canvasHeight","newRootWidth","newRootHeight","newCanvasWidth","newCanvasHeight","currentScrollbarSize","onMouseMove","_ids","_tasks","_active","_step","f","requestAnimationFrame","Editor","initialValue","select","fontFamily","fontSize","onChange","ReactDOM","HashRouter","getElementsByTagName"],"mappings":"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","file":"content/main.1714589d380244ef8786.js","sourcesContent":["export * from './app';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/index.tsx","import * as React from 'react';\r\nimport { Toolbar, NavigationItem, GitHubIcon, Page, PageArticles, AppMaxWidth } from './ui';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport articlesExample from '~/articles/examples';\r\n\r\nconst Style = require('./app.scss');\r\n\r\nexport class App extends React.Component<any, any> {\r\n    public render() {\r\n        return (\r\n            <>\r\n                <Toolbar>\r\n                    <nav>\r\n                        <NavigationItem exact location=\"/\">\r\n                            Home\r\n                        </NavigationItem>\r\n                        <NavigationItem location=\"/examples\">\r\n                            Examples\r\n                        </NavigationItem>\r\n                        <NavigationItem location=\"/tutorial\">\r\n                            Tutorial\r\n                        </NavigationItem>\r\n                        <NavigationItem location=\"/api\">\r\n                            Api\r\n                        </NavigationItem>\r\n                    </nav>\r\n                    <div>\r\n                        <a target=\"blank\" href={process.env.GITHUB_URL}>\r\n                            <GitHubIcon />\r\n                        </a>\r\n                    </div>\r\n                </Toolbar>\r\n                <div className={Style.main}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Page>?Home?</Page>\r\n                        </Route>\r\n                        <Route exact path=\"/examples/:article?\">\r\n                            <PageArticles source={articlesExample} />\r\n                        </Route>\r\n                        <Route exact path=\"/tutorial/:article?\">\r\n                            <Page>?Tutorial?</Page>\r\n                        </Route>\r\n                        <Route exact path=\"/api/:article?\">\r\n                            <Page>?Api?</Page>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n                <footer className={Style.footer}>\r\n                    <AppMaxWidth classNameLayer={Style.footerContent}>\r\n                        ?Footer?\r\n                    </AppMaxWidth>\r\n                </footer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/app.tsx","import * as React from 'react';\r\nconst Style = require('./toolbar.scss');\r\nimport { AppMaxWidth } from './app-max-width';\r\n\r\nexport class Toolbar extends React.PureComponent<any, any> {\r\n    public render() {\r\n        return (\r\n            <header className={Style.root}>\r\n                <AppMaxWidth>\r\n                    <div className={Style.layer}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </AppMaxWidth>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/toolbar.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"toolbar__root___1lQhY\",\"layer\":\"toolbar__layer___IB7bU\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/toolbar.scss\n// module id = 117\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"app-max-width__root___M7Ciq\",\"layer\":\"app-max-width__layer___2MB4F\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/app-max-width.scss\n// module id = 118\n// module chunks = 1","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Style = require('./navigation-item.scss');\r\n\r\nexport interface IToolbarTabProps {\r\n    exact?: boolean;\r\n    orientation?: 'left' | 'top' | 'right' | 'bottom';\r\n    location: string;\r\n}\r\n\r\nexport class NavigationItem extends React.Component<IToolbarTabProps, {}> {\r\n    public render() {\r\n        const orientation = this.props.orientation || 'bottom';\r\n\r\n        return (\r\n            <NavLink\r\n                exact={this.props.exact}\r\n                to={this.props.location}\r\n                className={classnames(Style.root, {\r\n                    [Style.left]: orientation === 'left',\r\n                    [Style.top]: orientation === 'top',\r\n                    [Style.right]: orientation === 'right',\r\n                    [Style.bottom]: orientation === 'bottom',\r\n                })}\r\n                activeClassName={Style.selected}\r\n            >\r\n                {this.props.children}\r\n            </NavLink>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/navigation-item.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"navigation-item__root___3awM5\",\"left\":\"navigation-item__left___2yB8f\",\"top\":\"navigation-item__top___1WMzF\",\"right\":\"navigation-item__right___30Tmp\",\"bottom\":\"navigation-item__bottom___3jO_J\",\"selected\":\"navigation-item__selected___3eEvG\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/navigation-item.scss\n// module id = 120\n// module chunks = 1","import * as React from 'react';\r\nconst Style = require('./github-icon.scss');\r\n\r\nconst PATH = [\r\n    `M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-`,\r\n    `.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 `,\r\n    `2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-`,\r\n    `3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 `,\r\n    `3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.`,\r\n    `5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3`\r\n].join('');\r\n\r\nexport interface IGithubIconProps {\r\n    size?: number;\r\n}\r\n\r\nexport class GitHubIcon extends React.PureComponent<IGithubIconProps, any> {\r\n    public render() {\r\n        const size = this.props.size || 24;\r\n\r\n        return (\r\n            <svg\r\n                className={Style.root}\r\n                viewBox={`0 0 ${size} ${size}`}\r\n                style={{\r\n                    '--svg-icon--size': `${size}px`\r\n                }}\r\n            >\r\n                <path d={PATH} />\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/github-icon.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"github-icon__root___2VE6z\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/github-icon.scss\n// module id = 122\n// module chunks = 1","import * as React from 'react';\r\nimport { NavigationItem, AppMaxWidth } from './index';\r\nconst Style = require('./page.scss');\r\n\r\nexport interface IPageProps {\r\n    navigation?: [string, string][];\r\n}\r\n\r\nexport class Page extends React.Component<IPageProps, {}> {\r\n    private _renderNavigation() {\r\n        if (!this.props.navigation) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <nav className={Style.navigtaion}>\r\n                {this.props.navigation.map(([location, caption], i) => {\r\n                    return (\r\n                        <NavigationItem orientation=\"left\" exact location={location} key={i}>\r\n                            {caption}\r\n                        </NavigationItem>\r\n                    );\r\n                })}\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <AppMaxWidth classNameLayer={Style.content}>\r\n                {this._renderNavigation()}\r\n                {this.props.children}\r\n            </AppMaxWidth>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/page.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"content\":\"page__content___2FPb4\",\"navigtaion\":\"page__navigtaion___3uktV\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/page.scss\n// module id = 124\n// module chunks = 1","import * as React from 'react';\r\nimport { Page, CodeView, ICodeViewProps, Markdown } from './index';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IArticlesSource } from '~/articles';\r\nconst Style = require('./page-articles.scss');\r\n\r\nexport interface IPageArticlesProps {\r\n    source?: IArticlesSource;\r\n}\r\n\r\nexport interface IPageArticlesState {\r\n    navigation?: [string, string][];\r\n    articles?: {\r\n        url: string;\r\n        body: (string | ICodeViewProps)[];\r\n    }[];\r\n}\r\n\r\nexport class PageArticles extends React.Component<IPageArticlesProps, IPageArticlesState> {\r\n    state: IPageArticlesState = {};\r\n\r\n    private _onUpdate(prev: IPageArticlesProps, next: IPageArticlesProps) {\r\n        if (prev.source === next.source || !next.source) {\r\n            return;\r\n        }\r\n\r\n        const { url, articles: body } = next.source;\r\n\r\n        let navigation: [string, string][] = [];\r\n        let articles: {\r\n            url: string;\r\n            body: (string | ICodeViewProps)[];\r\n        }[] = [];\r\n\r\n        body.forEach(({ name, caption, body: article }) => {\r\n            const loc = name ? `/${url}/${name}` : `/${url}`;\r\n\r\n            if (name) {\r\n                navigation.push([loc, caption]);\r\n            }\r\n\r\n            articles.push({\r\n                url: loc,\r\n                body: article\r\n            });\r\n        });\r\n\r\n        this.setState({ navigation, articles });\r\n    }\r\n\r\n    private _renderArticle(body: (string | ICodeViewProps)[]): JSX.Element[] {\r\n        return body.map((p, i) => {\r\n            if (typeof p === 'string') {\r\n                return (\r\n                    <article\r\n                        className={Style.chunk}\r\n                        key={i}\r\n                    >\r\n                        <Markdown source={p}/>\r\n                    </article>\r\n                );\r\n            }\r\n\r\n            const { files, example, height } = p;\r\n\r\n            return (\r\n                <CodeView\r\n                    className={Style.chunk}\r\n                    key={i}\r\n                    files={files}\r\n                    example={example}\r\n                    height={height}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this._onUpdate({}, this.props);\r\n    }\r\n\r\n    public componentDidUpdate(prev: IPageArticlesProps) {\r\n        this._onUpdate(prev, this.props);\r\n    }\r\n\r\n    public render() {\r\n        if (!this.state.articles) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Page navigation={this.state.navigation}>\r\n                <Switch>\r\n                    {this.state.articles.map(({ url, body }) => {\r\n                        return (\r\n                            <Route exact path={url} key={url}>\r\n                                <main className={Style.body}>\r\n                                    {this._renderArticle(body)}\r\n                                </main>\r\n                            </Route>\r\n                        );\r\n                    })};\r\n                </Switch>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/page-articles.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"body\":\"page-articles__body___2Etmb\",\"chunk\":\"page-articles__chunk___21lRp\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/page-articles.scss\n// module id = 126\n// module chunks = 1","import * as React from 'react';\r\nimport CodeHighlighter from 'react-syntax-highlighter';\r\nconst CodeTheme = require('react-syntax-highlighter/styles/hljs/obsidian');\r\n\r\nconst CODE_STYLE_PROPS: React.CSSProperties = {\r\n    margin: 0,\r\n    boxSizing: 'border-box',\r\n    overflowY: 'visible',\r\n    overflowX: 'visible',\r\n    display: 'block',\r\n    background: 'transparent'\r\n};\r\n\r\nexport interface ICodeProps {\r\n    className?: string;\r\n    showLineNumbers?: boolean;\r\n    language: string;\r\n    source: string;\r\n}\r\n\r\nexport class Code extends React.PureComponent<ICodeProps, any> {\r\n    public render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <CodeHighlighter\r\n                    showLineNumbers={this.props.showLineNumbers}\r\n                    language={this.props.language}\r\n                    style={CodeTheme.default}\r\n                    customStyle={CODE_STYLE_PROPS}\r\n                >\r\n                    {this.props.source || ''}\r\n                </CodeHighlighter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/code.tsx","export * from './header';\r\nexport * from './container';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/index.ts","import { KeyboardEvent, MouseEvent } from 'react';\r\nimport { IGridAddress, IGridSelection, IGridView } from '../components';\r\n\r\nconst IS_MACOS = navigator.platform.slice(0, 3) === 'Mac';\r\n\r\nexport interface IState {\r\n    focused: boolean;\r\n    editor: IGridAddress;\r\n    active: IGridAddress;\r\n    selection: IGridSelection[];\r\n    view: IGridView;\r\n    rows: number;\r\n    columns: number;\r\n    readOnly: boolean;\r\n}\r\n\r\nexport interface IUpdateSelectionEvent {\r\n    active?: IGridAddress;\r\n    selection?: IGridSelection[];\r\n}\r\n\r\nexport interface IControllerProps {\r\n    getState: () => IState;\r\n    onScroll: (cell: IGridAddress) => void;\r\n    onUpdateSelection: (next: IUpdateSelectionEvent, callback?: () => void) => void;\r\n    onCloseEditor: (commit: boolean, onClosed?: () => void) => void;\r\n    onOpenEditor: (next: IGridAddress) => void;\r\n}\r\n\r\nexport class Controller {\r\n    protected _state: IState = null;\r\n\r\n    constructor(protected _props: IControllerProps) { }\r\n\r\n    protected _getModifiers(e: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement>) {\r\n        const { ctrlKey, altKey, shiftKey } = e;\r\n        const cmdKey = e.getModifierState('Meta'); // Command key for Mac OS\r\n\r\n        return {\r\n            ctrlKey,\r\n            macCmdKey: cmdKey,\r\n            cmdKey: IS_MACOS ? cmdKey : ctrlKey,\r\n            shiftKey,\r\n            altKey\r\n        };\r\n    }\r\n\r\n    protected _clampAddress({ column, row }: IGridAddress) {\r\n        const { rows, columns } = this._state;\r\n        return {\r\n            column: Math.min(Math.max(0, column), columns - 1),\r\n            row: Math.min(Math.max(0, row), rows - 1)\r\n        } as IGridAddress;\r\n    }\r\n\r\n    protected _splitSelection(selection: IGridSelection[]) {\r\n        let prev = selection.slice();\r\n        let last = prev.pop();\r\n\r\n        return {\r\n            prev, last\r\n        };\r\n    }\r\n\r\n    protected _getSelectedCells(selection: IGridSelection[]) {\r\n        let map: {\r\n            [key: string]: IGridAddress;\r\n        } = {};\r\n\r\n        for (const { column, row, height, width } of selection) {\r\n            for (let r = row, rLast = row + height; r <= rLast; r++) {\r\n                for (let c = column, cLast = column + width; c <= cLast; c++) {\r\n                    let key = `${r}x${c}`;\r\n\r\n                    if (map[key]) {\r\n                        continue;\r\n                    }\r\n\r\n                    map[key] = { row: r, column: c };\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.keys(map).sort().map(k => map[k]);\r\n    }\r\n\r\n    protected _request() {\r\n        return this._state = this._props.getState();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/controller.ts","import * as React from 'react';\r\nimport * as MDRenderer from 'react-markdown';\r\nimport { Code } from './index';\r\n\r\nconst Style = require('./markdown.scss');\r\n\r\nexport interface IMarkdownProps {\r\n    source?: string;\r\n}\r\n\r\ninterface IRenderer {\r\n    children?: any;\r\n    language: string;\r\n    value: string;\r\n}\r\n\r\nexport class Markdown extends React.Component<IMarkdownProps, any> {\r\n    private _codeInlineRenderer = ({ value }: IRenderer) => {\r\n        return (\r\n            <code className={Style.code}>\r\n                {value}\r\n            </code>\r\n        );\r\n    }\r\n\r\n    private _codeMultilineRenderer = ({ language, value }: IRenderer) => {\r\n        return (\r\n            <Code\r\n                className={Style.multilineCode}\r\n                showLineNumbers\r\n                language={language}\r\n                source={value}\r\n            />\r\n        );\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <MDRenderer\r\n                className={Style.main}\r\n                source={this.props.source || ''}\r\n                renderers={{\r\n                    inlineCode: this._codeInlineRenderer,\r\n                    code: this._codeMultilineRenderer\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/markdown.tsx","import { IGridTheme } from 'react-bolivianite-grid';\r\n\r\nconst REQUIRED_THEME: IGridTheme = {\r\n    // Scroller theme\r\n    scrollbarWidth: 15,\r\n    scrollbarWidthMinimized: 5,\r\n    scrollbarMinimizeDistance: 100,\r\n    styleTrackRoot: {\r\n        transition: 'ease all 100ms',\r\n        background: `rgba(0, 0, 0, 0.2)`\r\n    },\r\n    styleThumb: {\r\n        background: `rgba(0, 0, 0, 0.8)`\r\n    },\r\n\r\n    // Grid theme\r\n    style: {\r\n        background: '#FFFFFF'\r\n    },\r\n    styleGridColumns: {\r\n        background: '#3C3744',\r\n        boxShadow: '0 0 5px #000',\r\n        color: '#DBDADD'\r\n    },\r\n    styleGridRows: {\r\n        background: '#3C3744',\r\n        boxShadow: '0 0 5px #000',\r\n        color: '#DBDADD'\r\n    },\r\n    styleGridCorner: {\r\n        borderRight: 'solid 1px #000',\r\n        borderBottom: 'solid 1px #000',\r\n        background: '#3C3744',\r\n        color: '#DBDADD',\r\n        boxSizing: 'border-box'\r\n    },\r\n};\r\n\r\nconst THEME = {\r\n    ...REQUIRED_THEME,\r\n\r\n    // Custom grid theme properties\r\n    cellTextColor: '#211E26',\r\n    cellBorderColor: '#918B9C',\r\n    cellBackgroundEven: '#EFEFEF',\r\n    cellBackgroundOdd: '#FFFFFF',\r\n    editorBorderColor: '#918B9C',\r\n    editorBackground: '#FFFFFF',\r\n    headerBorderColor: '#000000',\r\n    headerBorderColorSelected: '#0F0126',\r\n    headerBackgroundColorSelected: '#0F0126',\r\n    selectionBackground: 'rgba(15, 1, 38, 0.2)',\r\n    selectionBackgroundActive: 'transparent',\r\n    selectionBorder: 'solid 1px #0F0126',\r\n    selectionBorderActive: 'solid 2px #0F0126',\r\n    resizerBackground: 'rgba(0, 0, 0, 0.4)'\r\n};\r\n\r\nexport default THEME;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/content/grid-theme.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\"code\":\"markdown__code___1S3XF\",\"multilineCode\":\"markdown__multilineCode___3gNB1\",\"main\":\"markdown__main___1QmVR\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/markdown.scss\n// module id = 417\n// module chunks = 1","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { SplitView, ScrollView, Code } from './index';\r\nconst Style = require('./code-view.scss');\r\n\r\nexport type ICodeViewFile = (\r\n    string | string[]\r\n);\r\n\r\nexport interface ICodeViewProps {\r\n    height?: number;\r\n    files: ICodeViewFile[];\r\n    example: string;\r\n}\r\n\r\nexport interface ICodeViewElementProps {\r\n    className?: string;\r\n}\r\n\r\nexport class CodeView extends React.PureComponent<ICodeViewProps & ICodeViewElementProps, any> {\r\n    state = {\r\n        tab: 0\r\n    };\r\n\r\n    private _extractFile(file: ICodeViewFile) {\r\n        let filename = '';\r\n        let language = 'javascript';\r\n        let caption = '';\r\n\r\n        if (typeof file === 'string') {\r\n            filename = file;\r\n            caption = file;\r\n        } else {\r\n            filename = file[0];\r\n            language = file[1] || language;\r\n            caption = file[2] || filename;\r\n        }\r\n\r\n        return { filename, language, caption };\r\n    }\r\n\r\n    private _renderFileContent() {\r\n        let file = (this.props.files || [])[this.state.tab];\r\n\r\n        if (!file) {\r\n            return null;\r\n        }\r\n\r\n        const { filename, language } = this._extractFile(file);\r\n\r\n        const content = require('!raw-loader!~Content/' + filename);\r\n\r\n        return (\r\n            <Code\r\n                showLineNumbers\r\n                className={Style.file}\r\n                language={language}\r\n                source={content}\r\n            />\r\n        );\r\n    }\r\n\r\n    private _renderArticle() {\r\n        const content = require('~Content/' + this.props.example);\r\n        const D = content && content.default;\r\n\r\n        if (!D) {\r\n            return null;\r\n        }\r\n\r\n        return <D />;\r\n    }\r\n\r\n    private _renderTabs() {\r\n        if (!this.props.files) {\r\n            return null;\r\n        }\r\n\r\n        return this.props.files.map((file, tab) => {\r\n            const { caption } = this._extractFile(file);\r\n\r\n            return (\r\n                <button\r\n                    key={tab}\r\n                    className={classnames(Style.tab, {\r\n                        [Style.tabSelected]: tab === this.state.tab\r\n                    })}\r\n                    onClick={() => {\r\n                        this.setState({ tab });\r\n                    }}\r\n                >\r\n                    {caption}\r\n                </button>\r\n            );\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div\r\n                className={classnames(Style.root, this.props.className)}\r\n                style={{\r\n                    maxHeight: this.props.height\r\n                }}\r\n            >\r\n                <div className={Style.controls}>\r\n                    {this._renderTabs()}\r\n                </div>\r\n                <SplitView>\r\n                    <ScrollView className={Style.container} lock={null}>\r\n                        {this._renderFileContent()}\r\n                    </ScrollView>\r\n                    <div className={Style.container}>\r\n                        {this._renderArticle()}\r\n                    </div>\r\n                </SplitView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/code-view.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"code-view__root___uaXTc\",\"controls\":\"code-view__controls___1aCoA\",\"container\":\"code-view__container___s2h-S\",\"file\":\"code-view__file___3vtRr\",\"tab\":\"code-view__tab___3wxl4\",\"tabSelected\":\"code-view__tabSelected___egggc\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/code-view.scss\n// module id = 419\n// module chunks = 1","var map = {\n\t\"./example-grid-simple\": 60,\n\t\"./example-grid-simple.tsx\": 60,\n\t\"./grid-theme\": 61,\n\t\"./grid-theme.ts\": 61,\n\t\"./simple-editor\": 62,\n\t\"./simple-editor.tsx\": 62\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 420;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/articles/content ./node_modules/raw-loader ^\\.\\/.*$\n// module id = 420\n// module chunks = 1","var map = {\n\t\"./example-grid-simple\": 63,\n\t\"./example-grid-simple.tsx\": 63,\n\t\"./grid-theme\": 35,\n\t\"./grid-theme.ts\": 35,\n\t\"./simple-editor\": 72,\n\t\"./simple-editor.tsx\": 72\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 421;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/articles/content ^\\.\\/.*$\n// module id = 421\n// module chunks = 1","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport ScrollView, { IScrollViewUpdateEvent } from './scrollview';\r\nimport {\r\n    debounce, RenderThrottler, KeyboardController,\r\n    IUpdateSelectionEvent, IKeyboardControllerRemoveEvent,\r\n    MouseController, IKeyboardControllerPasteEvent\r\n} from '../controllers';\r\nimport {\r\n    IHeader, HeaderResizeBehavior, HeadersContainer, HeaderType\r\n} from '../models';\r\nimport {\r\n    IGridProps, ICellMeasureResult, ICellRenderBaseEvent, ICellRendererEvent,\r\n    IGridResizeHeaderLevelEvent, IGridResizeHeadersEvent, IGridAddress, IGridSelection, IGridView, IGridOverscan\r\n} from './types';\r\n\r\nexport class Grid extends React.PureComponent<IGridProps, any> {\r\n    /** React v17 deprecated */\r\n    static childContextTypes = {\r\n        grid: PropTypes.object,\r\n        headers: PropTypes.object\r\n    };\r\n\r\n    /** React v17 deprecated */\r\n    getChildContext(this: Grid) {\r\n        return {\r\n            grid: this,\r\n            headers: this.props.headers as HeadersContainer /*typescript workaround*/\r\n        };\r\n    }\r\n\r\n    private _blockContextMenu = false;\r\n    private _onContextMenuListener: any = null;\r\n    private _rt = new RenderThrottler();\r\n    private _scrollUpdateTrottled = this._rt.create();\r\n    private _ref: HTMLDivElement = null;\r\n    private _refView: ScrollView = null;\r\n    private _scrollerProps: React.HTMLProps<HTMLDivElement> = { style: { willChange: 'transform', zIndex: 0 } };\r\n    private _lastView: IGridView = null;\r\n    private _lastOverscan: IGridOverscan = null;\r\n    private _focused = false;\r\n    private _kbCtr: KeyboardController = null;\r\n    private _msCtr: MouseController = null;\r\n    private _currentEdit: {\r\n        row: number;\r\n        col: number;\r\n        nextValue: any;\r\n        updatedValue: boolean;\r\n    } = null;\r\n\r\n    state = {\r\n        scrollLeft: 0,\r\n        scrollTop: 0,\r\n        viewHeight: 0,\r\n        viewWidth: 0,\r\n        active: {\r\n            row: 0,\r\n            column: 0\r\n        } as IGridAddress,\r\n        edit: null as IGridAddress,\r\n        selection: [{\r\n            row: 0,\r\n            column: 0,\r\n            width: 0,\r\n            height: 0\r\n        }] as IGridSelection[],\r\n        resizeHeaderPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        },\r\n        resizeLevelPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        }\r\n    };\r\n\r\n    constructor(p: IGridProps, c: any) {\r\n        super(p, c);\r\n\r\n        this._onAfterUpdate = debounce(500, this._onAfterUpdate.bind(this));\r\n\r\n        const getState = () => ({\r\n            active: this.state.active,\r\n            editor: this.state.edit,\r\n            selection: this.state.selection,\r\n            focused: this._focused,\r\n            columns: this._columnCount,\r\n            rows: this._rowCount,\r\n            view: this._lastView,\r\n            readOnly: this.props.readOnly\r\n        });\r\n\r\n        const onScroll = this.scrollTo.bind(this);\r\n        const onUpdateSelection = ({ active, selection }: IUpdateSelectionEvent, callback: () => void) => {\r\n            if (!active && !selection) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                active: active || this.state.active,\r\n                selection: selection || this.state.selection\r\n            }, callback);\r\n        };\r\n\r\n        const onRightClick = (cell: IGridAddress) => {\r\n            if (this.props.onRightClick) {\r\n                this.props.onRightClick(cell);\r\n            }\r\n        };\r\n\r\n        const onCopy = (cells: IGridAddress[], withHeaders: boolean) => {\r\n            if (this.props.onCopy) {\r\n                this.props.onCopy({ withHeaders, cells });\r\n            }\r\n        };\r\n\r\n        const onPaste = ({ clipboard, getAllSelectedCells, getLastSelectedCells }: IKeyboardControllerPasteEvent) => {\r\n            if (this.props.onPaste) {\r\n                this.props.onPaste({\r\n                    clipboard,\r\n                    getAllSelectedCells,\r\n                    getLastSelectedCells,\r\n                    target: {\r\n                        ...this.state.active\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        const onNullify = (cells: IGridAddress[]) => {\r\n            if (this.props.onNullify) {\r\n                this.props.onNullify({ cells });\r\n            }\r\n        };\r\n\r\n        const onRemove = (event: IKeyboardControllerRemoveEvent) => {\r\n            if (this.props.onRemove) {\r\n                this.props.onRemove(event);\r\n            }\r\n        };\r\n\r\n        const onSpace = (cells: IGridAddress[]) => {\r\n            if (this.props.onSpace) {\r\n                this.props.onSpace({ cells });\r\n            }\r\n        };\r\n\r\n        this._kbCtr = new KeyboardController({\r\n            getState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll,\r\n            onUpdateSelection,\r\n            onCopy,\r\n            onPaste,\r\n            onNullify,\r\n            onRemove,\r\n            onSpace\r\n        });\r\n\r\n        this._msCtr = new MouseController({\r\n            getState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll,\r\n            onUpdateSelection,\r\n            onRightClick\r\n        });\r\n    }\r\n\r\n    private get _theme() {\r\n        let theme = { ...(this.props.theme || {}) };\r\n        theme.styleGrid = theme.styleGrid || {};\r\n        theme.styleGridColumns = theme.styleGridColumns || {};\r\n        theme.styleGridRows = theme.styleGridRows || {};\r\n        theme.styleGridCorner = theme.styleGridCorner || {};\r\n        return theme;\r\n    }\r\n\r\n    private get _columnCount() {\r\n        return this.props.headers ? this.props.headers.columns.length : 0;\r\n    }\r\n\r\n    private get _rowCount() {\r\n        return this.props.headers ? this.props.headers.rows.length : 0;\r\n    }\r\n\r\n    private get _headersHeight() {\r\n        return this.props.headers.headersHeight || 0;\r\n    }\r\n\r\n    private get _headersWidth() {\r\n        return this.props.headers.headersWidth || 0;\r\n    }\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._ref = r;\r\n    }\r\n\r\n    private _onRefView = (r: ScrollView) => {\r\n        this._refView = r;\r\n    }\r\n\r\n    private _onBlur = () => {\r\n        this._focused = false;\r\n    }\r\n\r\n    private _onFocus = () => {\r\n        this._focused = true;\r\n    }\r\n\r\n    private _onScrollViewUpdate = (e: IScrollViewUpdateEvent) => {\r\n        this._scrollUpdateTrottled(() => {\r\n            if (this.state.viewWidth !== e.clientWidth || this.state.viewHeight !== e.clientHeight) {\r\n                this.setState({ viewWidth: e.clientWidth, viewHeight: e.clientHeight });\r\n            }\r\n\r\n            if (this.state.scrollLeft !== e.scrollLeft) {\r\n                this.setState({ scrollLeft: e.scrollLeft });\r\n            }\r\n\r\n            if (this.state.scrollTop !== e.scrollTop) {\r\n                this.setState({ scrollTop: e.scrollTop });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAutoMeasureApply(result: ICellMeasureResult[], behavior: HeaderResizeBehavior) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        result = result.filter(v => !!v);\r\n\r\n        if (!result.length) {\r\n            return;\r\n        }\r\n\r\n        const columnHeaders = this.props.headers.columns;\r\n        const rowHeaders = this.props.headers.rows;\r\n\r\n        let columns: { [colIndex: string]: number } = {};\r\n        let rows: { [rowIndex: string]: number } = {};\r\n\r\n        for (let { rowIndex, columnIndex, height, width } of result) {\r\n            columns[columnIndex] = columns[columnIndex] == null ? width : Math.max(width, columns[columnIndex]);\r\n            rows[rowIndex] = rows[rowIndex] == null ? height : Math.max(height, rows[rowIndex]);\r\n        }\r\n\r\n        let ch = Object\r\n            .keys(columns)\r\n            .map(k => ({ columnIndex: Number(k), width: columns[k] }))\r\n            .filter(({ width, columnIndex }) => {\r\n                let h = columnHeaders[columnIndex];\r\n                return h && (behavior === 'reset' || !this.props.headers.getManualResized(h) && h.$size < width);\r\n            })\r\n            .map(({ columnIndex, width }) => ({\r\n                header: columnHeaders[columnIndex],\r\n                size: width,\r\n                type: this.props.headers.getHeaderType(columnHeaders[columnIndex])\r\n            }));\r\n\r\n        let rh = Object\r\n            .keys(rows)\r\n            .map(k => ({ rowIndex: Number(k), height: rows[k] }))\r\n            .filter(({ rowIndex, height }) => {\r\n                let h = rowHeaders[rowIndex];\r\n                return h && (behavior === 'reset' || !this.props.headers.getManualResized(h) && h.$size < height);\r\n            })\r\n            .map(({ rowIndex, height }) => ({\r\n                header: rowHeaders[rowIndex],\r\n                size: height,\r\n                type: this.props.headers.getHeaderType(rowHeaders[rowIndex])\r\n            }));\r\n\r\n        if (ch.length || rh.length) {\r\n            this.props.onHeaderResize({ headers: [...ch, ...rh], behavior: behavior });\r\n        }\r\n    }\r\n\r\n    private _onAutoMeasure() {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const { columns, rows } = this.props.headers;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let r = firstRow; r <= lastRow; r++) {\r\n            for (let c = firstColumn; c <= lastColumn; c++) {\r\n                cells.push({\r\n                    columnIndex: c,\r\n                    rowIndex: r,\r\n                    source: this.props.source,\r\n                    columnHeader: columns[c],\r\n                    rowHeader: rows[r]\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            callback: (result: ICellMeasureResult[]) => {\r\n                this._onAutoMeasureApply(result, 'auto');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAfterUpdate() {\r\n        this._onAutoMeasure();\r\n    }\r\n\r\n    private _onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        this._kbCtr.keydown(e);\r\n    }\r\n\r\n    private _onMouseDown = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n\r\n        this.focus();\r\n\r\n        this._msCtr.mousedown(e, row, column);\r\n    }\r\n\r\n    private _onMouseDownHeader = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let type: HeaderType = Number(e.currentTarget.getAttribute('x-type'));\r\n        let id = e.currentTarget.getAttribute('x-id');\r\n        let h = this.props.headers.getHeader(id);\r\n        this.focus();\r\n\r\n        if (!h) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.onHeaderRightClick) {\r\n            this.props.onHeaderRightClick({ header: h, event: e });\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let leaves = this.props.headers.getHeaderLeaves(h);\r\n        let indices = leaves.map(v => this.props.headers.getViewIndex(v));\r\n\r\n        if (!indices.length) {\r\n            return;\r\n        }\r\n\r\n        let min = Math.min(...indices);\r\n        let max = Math.max(...indices);\r\n\r\n        this._msCtr.headerdown(e, type, min, max);\r\n    }\r\n\r\n    private _onMouseEnter = (e: React.MouseEvent<HTMLElement>) => {\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n        this._msCtr.mouseenter(row, column);\r\n    }\r\n\r\n    private _onRootMouseLeave = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        let x = e.pageX;\r\n        let y = e.pageY;\r\n        let rect = this._ref.getBoundingClientRect();\r\n        this._msCtr.rootleave(x, y, rect);\r\n    }\r\n\r\n    private _onRootMouseEnter = () => {\r\n        this._msCtr.rootenter();\r\n    }\r\n\r\n    private _onRootMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (e.button === 2) {\r\n            this._blockContextMenu = true;\r\n        }\r\n    }\r\n\r\n    private _createView() {\r\n        const sl = this.state.scrollLeft;\r\n        const st = this.state.scrollTop;\r\n        const vw = this.state.viewWidth - this._headersWidth;\r\n        const vh = this.state.viewHeight - this._headersHeight;\r\n\r\n        let rowsHeight = 0;\r\n        let firstRow = -1;\r\n        let lastRow = -1;\r\n        let rowIndex = 0;\r\n\r\n        for (let rh of this.props.headers.rows) {\r\n            if (firstRow === -1 && rowsHeight >= st - rh.$size) {\r\n                firstRow = rowIndex;\r\n            }\r\n\r\n            rowsHeight += rh.$size;\r\n\r\n            if (lastRow === -1 && rowsHeight >= st + vh /*+ (this._theme.scrollbarWidth || 0)*/) {\r\n                lastRow = rowIndex;\r\n                break;\r\n            }\r\n\r\n            rowIndex++;\r\n        }\r\n\r\n        if (lastRow === -1 && firstRow !== -1) {\r\n            lastRow = rowIndex;\r\n        }\r\n\r\n        let columnsWidth = 0;\r\n        let firstColumn = -1;\r\n        let lastColumn = -1;\r\n        let colIndex = 0;\r\n\r\n        for (let ch of this.props.headers.columns) {\r\n            if (firstColumn === -1 && columnsWidth >= sl - ch.$size) {\r\n                firstColumn = colIndex;\r\n            }\r\n\r\n            columnsWidth += ch.$size;\r\n\r\n            if (lastColumn === -1 && columnsWidth >= sl + vw /*+ (this._theme.scrollbarWidth || 0)*/) {\r\n                lastColumn = colIndex;\r\n                break;\r\n            }\r\n\r\n            colIndex++;\r\n        }\r\n\r\n        if (lastColumn === -1 && firstColumn !== -1) {\r\n            lastColumn = colIndex;\r\n        }\r\n\r\n        let rhLast = this.props.headers.rows[this.props.headers.rows.length - 1];\r\n        let chLast = this.props.headers.columns[this.props.headers.columns.length - 1];\r\n        rowsHeight = this.props.headers.getPosition(rhLast) + rhLast.$size;\r\n        columnsWidth = this.props.headers.getPosition(chLast) + chLast.$size;\r\n\r\n        this._lastView = { firstRow, lastRow, firstColumn, lastColumn, rowsHeight, columnsWidth };\r\n    }\r\n\r\n    private _createOverscan() {\r\n        if (!this._lastView) {\r\n            return;\r\n        }\r\n\r\n        let { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n\r\n        if (this.props.overscanRows) {\r\n            firstRow = Math.max(0, firstRow - this.props.overscanRows);\r\n            lastRow = Math.min(Math.max(0, this._rowCount - 1), lastRow + this.props.overscanRows);\r\n        } else {\r\n            firstRow = Math.max(0, firstRow);\r\n        }\r\n\r\n        if (this.props.overscanColumns) {\r\n            firstColumn = Math.max(0, firstColumn - this.props.overscanColumns);\r\n            lastColumn = Math.min(Math.max(0, this._columnCount - 1), lastColumn + this.props.overscanColumns);\r\n        } else {\r\n            firstColumn = Math.max(0, firstColumn);\r\n        }\r\n\r\n        this._lastOverscan = {\r\n            firstRow, lastRow, firstColumn, lastColumn\r\n        };\r\n    }\r\n\r\n    private _prepareCellProps(row: number, col: number) {\r\n        let rh = this.props.headers.rows[row];\r\n        let ch = this.props.headers.columns[col];\r\n\r\n        return {\r\n            rowIndex: row,\r\n            columnIndex: col,\r\n            rowHeader: rh,\r\n            columnHeader: ch,\r\n            active: row === this.state.active.row && col === this.state.active.column,\r\n            source: this.props.source,\r\n            theme: this.props.theme,\r\n            style: {\r\n                top: this.props.headers.getPosition(rh),\r\n                left: this.props.headers.getPosition(ch),\r\n                height: rh.$size,\r\n                width: ch.$size,\r\n                position: 'absolute',\r\n                zIndex: 1\r\n            }\r\n        } as ICellRendererEvent;\r\n    }\r\n\r\n    private _renderCell(row: number, col: number) {\r\n        let cell = this.props.onRenderCell(this._prepareCellProps(row, col));\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `C${row}x${col}`,\r\n            onMouseDown: this._onMouseDown,\r\n            onMouseEnter: this._onMouseEnter\r\n        });\r\n    }\r\n\r\n    private _renderEditor(row: number, col: number) {\r\n        if (!this.props.onRenderEditor) {\r\n            return this._renderCell(row, col);\r\n        }\r\n\r\n\r\n        if (!this._currentEdit || (this._currentEdit.row !== row || this._currentEdit.col !== col)) {\r\n            this._currentEdit = {\r\n                row, col,\r\n                nextValue: null,\r\n                updatedValue: false\r\n            };\r\n        }\r\n\r\n        let cellProps = this._prepareCellProps(row, col);\r\n        let cell = this.props.onRenderEditor({\r\n            ...cellProps,\r\n            close: (commit: boolean) => {\r\n                this.closeEditor(commit);\r\n            },\r\n            update: (nextValue: any) => {\r\n                this._currentEdit.nextValue = nextValue;\r\n                this._currentEdit.updatedValue = true;\r\n            }\r\n        });\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `E${row}x${col}`\r\n        });\r\n    }\r\n\r\n    private _renderData() {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const columnCount = this._columnCount;\r\n        const rowCount = this._rowCount;\r\n\r\n        if (!columnCount || !rowCount) {\r\n            return null;\r\n        }\r\n\r\n        let irlen = Math.max(0, Math.min(rowCount - firstRow, 1 + lastRow - firstRow));\r\n        let iclen = Math.max(0, Math.min(columnCount - firstColumn, 1 + lastColumn - firstColumn));\r\n        let jsx: JSX.Element[] = new Array(irlen * iclen);\r\n        let i = 0;\r\n        let { edit } = this.state;\r\n\r\n        for (let ir = 0; ir < irlen; ir++) {\r\n            for (let ic = 0; ic < iclen; ic++) {\r\n                let r = ir + firstRow;\r\n                let c = ic + firstColumn;\r\n\r\n                if (edit && edit.column === c && edit.row === r) {\r\n                    jsx[i++] = this._renderEditor(r, c);\r\n                } else {\r\n                    jsx[i++] = this._renderCell(r, c);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (edit && (\r\n            (edit.column < firstColumn) || (edit.column > lastColumn) ||\r\n            (edit.row < firstRow) || (edit.row > lastRow)\r\n        )\r\n        ) {\r\n            jsx.push(this._renderEditor(edit.row, edit.column));\r\n        }\r\n\r\n        return jsx;\r\n    }\r\n\r\n    private _renderHeader(\r\n        out: JSX.Element[],\r\n        type: HeaderType,\r\n        index: number,\r\n        header: IHeader,\r\n        scrollPos: number,\r\n        lock: { [id: string]: boolean },\r\n        parent: boolean\r\n    ) {\r\n        let { $id, $children } = header;\r\n\r\n        if (lock[$id]) {\r\n            return;\r\n        }\r\n\r\n        lock[$id] = true;\r\n\r\n        let style: React.CSSProperties = {\r\n            position: 'absolute',\r\n            zIndex: 1\r\n        };\r\n\r\n        let level = this.props.headers.getLevel(header);\r\n\r\n        if (type === HeaderType.Row) {\r\n            style.left = this.props.headers.getLeftLevelPosition(level); // 0;\r\n            style.width = this.props.headers.getLeftLevelWidth(level); // headersWidth;\r\n            style.top = this.props.headers.getPosition(header) - scrollPos;\r\n            style.height = header.$size;\r\n\r\n            let levels = this.props.headers.leftLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.width = this.props.headers.headersWidth - style.left;\r\n            }\r\n        } else {\r\n            style.top = this.props.headers.getTopLevelPosition(level);\r\n            style.height = this.props.headers.getTopLevelHeight(level); // headersHeight;\r\n            style.left = this.props.headers.getPosition(header) - scrollPos;\r\n            style.width = header.$size;\r\n\r\n            let levels = this.props.headers.topLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.height = this.props.headers.headersHeight - style.top;\r\n            }\r\n        }\r\n\r\n        let selection = false;\r\n\r\n        for (let s of this.state.selection) {\r\n            if (type === HeaderType.Row) {\r\n                if (index >= s.row && index <= (s.row + s.height)) {\r\n                    selection = true;\r\n                    break;\r\n                }\r\n            } else {\r\n                if (index >= s.column && index <= (s.column + s.width)) {\r\n                    selection = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let headerParent = this.props.headers.getParent(header);\r\n\r\n        let cell = this.props.onRenderHeader({\r\n            type, header, style, parent,\r\n            selection: parent ? false : selection,\r\n            parentHeader: headerParent,\r\n            theme: this.props.theme,\r\n            viewIndex: this.props.headers.getViewIndex(header)\r\n        });\r\n\r\n        out.push(React.cloneElement(React.Children.only(cell), {\r\n            'x-type': type,\r\n            'x-id': $id,\r\n            key: $id,\r\n            onMouseDown: this._onMouseDownHeader\r\n        }));\r\n\r\n        if (headerParent) {\r\n            this._renderHeader(out, type, index, headerParent, scrollPos, lock, true);\r\n        }\r\n    }\r\n\r\n    private _renderHeaders(type: HeaderType, scrollPos: number) {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const isRow = type === HeaderType.Row;\r\n        const first = isRow ? firstRow : firstColumn;\r\n        const last = isRow ? lastRow : lastColumn;\r\n        const max = isRow ? this._rowCount : this._columnCount;\r\n        const headers = isRow ? this.props.headers.rows : this.props.headers.columns;\r\n\r\n        let len = Math.max(0, Math.min(max - first, 1 + last - first));\r\n        let jsx: JSX.Element[] = [];\r\n        let lock: { [id: string]: boolean } = {};\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let ix = i + first;\r\n            this._renderHeader(jsx, type, ix, headers[ix], scrollPos, lock, false);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {jsx}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private _renderResizing({ scrollLeft, scrollTop }: IScrollViewUpdateEvent) {\r\n        if (!this.props.onRenderResizer || !this.state.resizeHeaderPreview && !this.state.resizeLevelPreview) {\r\n            return null;\r\n        }\r\n\r\n        let type: 'level' | 'header';\r\n        let orientation: 'horizontal' | 'vertical';\r\n\r\n        let styleInitial = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none'\r\n        } as React.CSSProperties;\r\n\r\n        let styleChanged = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none'\r\n        } as React.CSSProperties;\r\n\r\n        if (this.state.resizeHeaderPreview) {\r\n            type = 'header';\r\n\r\n            let { change, header } = this.state.resizeHeaderPreview;\r\n            let headerType = this.props.headers.getHeaderType(header);\r\n            let headerPosition = this.props.headers.getPosition(header);\r\n\r\n            if (headerType === HeaderType.Row) {\r\n                orientation = 'horizontal';\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = this.props.headers.headersHeight + headerPosition - scrollTop;\r\n                styleInitial.height = header.$size;\r\n                styleChanged.height = header.$size + change;\r\n            } else {\r\n                orientation = 'vertical';\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = this.props.headers.headersWidth + headerPosition - scrollLeft;\r\n                styleInitial.width = header.$size;\r\n                styleChanged.width = header.$size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeLevelPreview) {\r\n            type = 'level';\r\n\r\n            let { change, header } = this.state.resizeLevelPreview;\r\n            let headerType = this.props.headers.getHeaderType(header);\r\n            let level = this.props.headers.getLevel(header);\r\n\r\n            if (headerType === HeaderType.Row) { // resizing left level\r\n                orientation = 'vertical';\r\n                let position = this.props.headers.getLeftLevelPosition(level);\r\n                let size = this.props.headers.getLeftLevelWidth(level);\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = position - scrollLeft;\r\n                styleInitial.width = size;\r\n                styleChanged.width = size + change;\r\n            } else { // resizing top level\r\n                orientation = 'horizontal';\r\n                let position = this.props.headers.getTopLevelPosition(level);\r\n                let size = this.props.headers.getTopLevelHeight(level);\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = position - scrollTop;\r\n                styleInitial.height = size;\r\n                styleChanged.height = size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeHeaderPreview || this.state.resizeLevelPreview) {\r\n            return (\r\n                <>\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleInitial, resizer: 'initial', theme: this.props.theme })}\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleChanged, resizer: 'changed', theme: this.props.theme })}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _renderHeaderContainers = (event: IScrollViewUpdateEvent) => {\r\n        const { clientWidth, clientHeight, scrollLeft, scrollTop } = event;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: clientWidth/* + this._theme.scrollSize*/,\r\n                    height: clientHeight/* + this._theme.scrollSize*/,\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                {!!this.props.headers.headersHeight &&\r\n                    <div\r\n                        className={this._theme.classNameGridColumns}\r\n                        style={{\r\n                            ...this._theme.styleGridColumns,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: this.props.headers.headersWidth,\r\n                            top: 0,\r\n                            right: 0,\r\n                            height: this.props.headers.headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Column, scrollLeft)}\r\n                    </div>\r\n                }\r\n                {!!this.props.headers.headersWidth &&\r\n                    <div\r\n                        className={this._theme.classNameGridRows}\r\n                        style={{\r\n                            ...this._theme.styleGridRows,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: this.props.headers.headersHeight,\r\n                            bottom: 0,\r\n                            width: this.props.headers.headersWidth\r\n                        }}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Row, scrollTop)}\r\n                    </div>\r\n                }\r\n                {!!(this.props.headers.headersHeight || this.props.headers.headersWidth) &&\r\n                    <div\r\n                        className={this._theme.classNameGridCorner}\r\n                        style={{\r\n                            ...this._theme.styleGridCorner,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: 0,\r\n                            height: this.props.headers.headersHeight,\r\n                            width: this.props.headers.headersWidth\r\n                        }}\r\n                    >\r\n                    </div>\r\n                }\r\n                {this._renderResizing(event)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderSelections(): JSX.Element[] {\r\n        if (!this.props.headers.columns.length || !this.props.headers.rows.length) {\r\n            return null;\r\n        }\r\n\r\n        let jsx = this.state.selection.map(({ row, column, width, height }, i) => {\r\n            let l = this.props.headers.getPosition(this.props.headers.columns[column]);\r\n            let t = this.props.headers.getPosition(this.props.headers.rows[row]);\r\n            let w = this.props.headers.columns.slice(column, column + width + 1).reduce((r, n) => r + n.$size, 0);\r\n            let h = this.props.headers.rows.slice(row, row + height + 1).reduce((r, n) => r + n.$size, 0);\r\n\r\n            return this.props.onRenderSelection({\r\n                key: i,\r\n                active: false,\r\n                edit: !!this.state.edit,\r\n                theme: this.props.theme,\r\n                style: {\r\n                    position: 'absolute',\r\n                    zIndex: i,\r\n                    left: l,\r\n                    top: t,\r\n                    width: w,\r\n                    height: h\r\n                }\r\n            });\r\n        });\r\n\r\n        let ax = jsx.length;\r\n\r\n        let rh = this.props.headers.rows[this.state.active.row];\r\n        let ch = this.props.headers.columns[this.state.active.column];\r\n\r\n        jsx.push(this.props.onRenderSelection({\r\n            key: ax,\r\n            active: true,\r\n            edit: !!this.state.edit,\r\n            theme: this.props.theme,\r\n            style: {\r\n                position: 'absolute',\r\n                zIndex: ax,\r\n                left: this.props.headers.getPosition(ch),\r\n                top: this.props.headers.getPosition(rh),\r\n                width: ch.$size,\r\n                height: rh.$size\r\n            }\r\n        }));\r\n\r\n        return jsx;\r\n    }\r\n\r\n    public focus() {\r\n        if (this._ref) {\r\n            this._ref.focus();\r\n        }\r\n    }\r\n\r\n    public blur() {\r\n        if (this._ref) {\r\n            this._ref.blur();\r\n        }\r\n    }\r\n\r\n    /** TODO: instead of using column index - use cell position and viewport minus scroll size */\r\n    public scrollTo(cell: { column?: number; row?: number; }) {\r\n        if (!this._refView || !this.props.headers.columns.length || !this.props.headers.rows.length) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n        let { column, row } = cell;\r\n\r\n        if (row != null) {\r\n            row = Math.min(Math.max(0, row), this._rowCount - 1);\r\n            if (row <= firstRow || row >= lastRow) {\r\n                let rowPos = this.props.headers.getPosition(this.props.headers.rows[row]);\r\n                if (row <= firstRow) { // to top\r\n                    this._refView.scrollTop = rowPos;\r\n                } else { // to bottom\r\n                    let rowSize = this.props.headers.rows[row].$size;\r\n                    this._refView.scrollTop = rowPos + rowSize - this.state.viewHeight + this._headersHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (column != null) {\r\n            column = Math.min(Math.max(0, column), this._columnCount - 1);\r\n            if (column <= firstColumn || column >= lastColumn) {\r\n                let colPos = this.props.headers.getPosition(this.props.headers.columns[column]);\r\n                if (column <= firstColumn) { // to left\r\n                    this._refView.scrollLeft = colPos;\r\n                } else { // to right\r\n                    let colSize = this.props.headers.columns[column].$size;\r\n                    this._refView.scrollLeft = colPos + colSize - this.state.viewWidth + this._headersWidth;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public openEditor = (cell: IGridAddress) => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let e = this.state.edit;\r\n\r\n        if (e) {\r\n            if (e.row === cell.row && e.column === cell.column) {\r\n                return;\r\n            }\r\n\r\n            this.closeEditor(true, () => {\r\n                this.setState({ edit: cell });\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: cell });\r\n    }\r\n\r\n    public closeEditor = (commit: boolean, callback?: () => void) => {\r\n        if (!this.state.edit) {\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: null }, () => {\r\n            let e = this._currentEdit;\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            if (this.props.onUpdate && e) {\r\n                let { col, row, nextValue, updatedValue } = e;\r\n\r\n                if (commit && updatedValue) {\r\n                    this.props.onUpdate({ cell: { row, column: col }, value: nextValue });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public resizeHeaders(e: IGridResizeHeadersEvent) {\r\n        if (this.props.onHeaderResize) {\r\n            this.props.onHeaderResize(e);\r\n        }\r\n    }\r\n\r\n    public resizeLevel(e: IGridResizeHeaderLevelEvent) {\r\n        if (this.props.onHeaderLevelResize) {\r\n            this.props.onHeaderLevelResize(e);\r\n        }\r\n    }\r\n\r\n    public autoMeasure(headers: IHeader[]) {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const batch = headers.map(h => this.props.headers.getHeaderLeaves(h));\r\n        const { columns, rows } = this.props.headers;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let list of batch) {\r\n            for (let h of list) {\r\n                let t = this.props.headers.getHeaderType(h);\r\n\r\n                if (t === HeaderType.Column) {\r\n                    let c = this.props.headers.getViewIndex(h);\r\n\r\n                    for (let r = firstRow; r <= lastRow; r++) {\r\n                        cells.push({\r\n                            columnIndex: c,\r\n                            rowIndex: r,\r\n                            source: this.props.source,\r\n                            columnHeader: columns[c],\r\n                            rowHeader: rows[r]\r\n                        });\r\n                    }\r\n                } else {\r\n                    let r = this.props.headers.getViewIndex(h);\r\n\r\n                    for (let c = firstColumn; c <= lastColumn; c++) {\r\n                        cells.push({\r\n                            columnIndex: c,\r\n                            rowIndex: r,\r\n                            source: this.props.source,\r\n                            columnHeader: columns[c],\r\n                            rowHeader: rows[r]\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            callback: (result: ICellMeasureResult[]) => {\r\n                this._onAutoMeasureApply(result, 'reset');\r\n            }\r\n        });\r\n    }\r\n\r\n    public previewResizeHeader(resizeHeaderPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeHeaderPreview });\r\n    }\r\n\r\n    public previewResizeLevel(resizeLevelPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeLevelPreview });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        document.body.addEventListener('contextmenu', this._onContextMenuListener = (e: any) => {\r\n            if (this._blockContextMenu) {\r\n                this._blockContextMenu = false;\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentDidUpdate() {\r\n        this._onAfterUpdate();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.body.removeEventListener('contextmenu', this._onContextMenuListener);\r\n        this._kbCtr.dispose();\r\n        this._msCtr.dispose();\r\n    }\r\n\r\n    public render() {\r\n        this._createView();\r\n        this._createOverscan();\r\n\r\n        const { rowsHeight, columnsWidth } = this._lastView;\r\n\r\n        return (\r\n            <div\r\n                className={this._theme.classNameGrid}\r\n                tabIndex={this.props.tabIndex == null ? -1 : this.props.tabIndex}\r\n                ref={this._onRef}\r\n                onBlur={this._onBlur}\r\n                onFocus={this._onFocus}\r\n                style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                    userSelect: 'none',\r\n                    outline: 'none',\r\n                    ...this._theme.styleGrid,\r\n                    overflow: 'hidden'\r\n                }}\r\n                onKeyDown={this._onKeyDown}\r\n                onMouseLeave={this._onRootMouseLeave}\r\n                onMouseEnter={this._onRootMouseEnter}\r\n                onMouseDown={this._onRootMouseDown}\r\n            >\r\n                <ScrollView\r\n                    ref={this._onRefView}\r\n                    onScroll={this._onScrollViewUpdate}\r\n                    scrollerProps={this._scrollerProps}\r\n                    renderAfter={this._renderHeaderContainers}\r\n                    {...this.props.theme}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: rowsHeight,\r\n                            width: columnsWidth,\r\n                            boxSizing: 'border-box',\r\n                            position: 'relative',\r\n                            marginLeft: this._headersWidth,\r\n                            marginTop: this._headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderData()}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            pointerEvents: 'none',\r\n                            zIndex: 1,\r\n                            left: this._headersWidth,\r\n                            top: this._headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderSelections()}\r\n                    </div>\r\n                </ScrollView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/grid.tsx","export function debounce(time: number, fn: Function) {\r\n    let task: any = null;\r\n\r\n    return (...args: any[]) => {\r\n        if (task) {\r\n            clearTimeout(task);\r\n        }\r\n\r\n        task = setTimeout(() => {\r\n            task = null;\r\n            fn(...args);\r\n        }, time);\r\n    };\r\n}\r\n\r\nexport default debounce;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/debounce.ts","import { KeyboardEvent } from 'react';\r\nimport { IGridAddress, IGridSelection } from '../components';\r\nimport { Controller, IControllerProps } from './controller';\r\n\r\nexport interface IKeyboardControllerRemoveEvent {\r\n    rows: number[];\r\n    columns: number[];\r\n}\r\n\r\nexport interface IKeyboardControllerPasteEvent {\r\n    clipboard: DataTransfer;\r\n    getAllSelectedCells: () => IGridAddress[];\r\n    getLastSelectedCells: () => IGridAddress[];\r\n}\r\n\r\nexport interface IKeyboardControllerProps extends IControllerProps {\r\n    onNullify: (cells: IGridAddress[]) => void;\r\n    onRemove: (props: IKeyboardControllerRemoveEvent) => void;\r\n    onSpace: (cells: IGridAddress[]) => void;\r\n    onCopy: (cells: IGridAddress[], withHeaders: boolean) => void;\r\n    onPaste: (event: IKeyboardControllerPasteEvent) => void;\r\n}\r\n\r\nexport class KeyboardController extends Controller {\r\n    constructor(protected _props: IKeyboardControllerProps) {\r\n        super(_props);\r\n\r\n        document.body.addEventListener('paste', this._paste);\r\n    }\r\n\r\n    private _isInput(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { keyCode } = e;\r\n        const { ctrlKey, altKey, macCmdKey } = this._getModifiers(e);\r\n\r\n        if (ctrlKey || altKey || macCmdKey) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            (48 <= keyCode && keyCode <= 57) ||\r\n            (65 <= keyCode && keyCode <= 90) ||\r\n            (96 <= keyCode && keyCode <= 111) ||\r\n            (186 <= keyCode && keyCode <= 222)\r\n        );\r\n    }\r\n\r\n    private _moveSelection(shiftKey: boolean, cmdKey: boolean, direction: 'left' | 'up' | 'right' | 'down', distance: number) {\r\n        const { active, rows, columns, selection } = this._state;\r\n\r\n        let nextScroll: IGridAddress = null;\r\n        let nextActive: IGridAddress = null;\r\n        let nextSelection: IGridSelection[] = null;\r\n\r\n        if (shiftKey && cmdKey) {\r\n            let { prev, last } = this._splitSelection(selection);\r\n            let next: IGridSelection = null;\r\n\r\n            switch (direction) {\r\n                case 'left':\r\n                    next = {\r\n                        ...last,\r\n                        column: 0,\r\n                        width: active.column\r\n                    };\r\n                    nextScroll = {\r\n                        row: null,\r\n                        column: 0\r\n                    };\r\n                    break;\r\n\r\n                case 'up':\r\n                    next = {\r\n                        ...last,\r\n                        row: 0,\r\n                        height: active.row\r\n                    };\r\n                    nextScroll = {\r\n                        row: 0,\r\n                        column: null\r\n                    };\r\n                    break;\r\n\r\n                case 'right':\r\n                    next = {\r\n                        ...last,\r\n                        column: active.column,\r\n                        width: columns - active.column - 1\r\n                    };\r\n                    nextScroll = {\r\n                        row: null,\r\n                        column: columns - 1\r\n                    };\r\n                    break;\r\n\r\n                case 'down':\r\n                    next = {\r\n                        ...last,\r\n                        row: active.row,\r\n                        height: rows - active.row - 1\r\n                    };\r\n                    nextScroll = {\r\n                        row: rows - 1,\r\n                        column: null\r\n                    };\r\n                    break;\r\n            }\r\n\r\n            if (next) {\r\n                nextSelection = [\r\n                    ...prev,\r\n                    next\r\n                ];\r\n            }\r\n        } else if (cmdKey) {\r\n            switch (direction) {\r\n                case 'left':\r\n                    nextActive = this._clampAddress({ row: active.row, column: 0 });\r\n                    break;\r\n\r\n                case 'up':\r\n                    nextActive = this._clampAddress({ row: 0, column: active.column });\r\n                    break;\r\n\r\n                case 'right':\r\n                    nextActive = this._clampAddress({ row: active.row, column: columns - 1 });\r\n                    break;\r\n\r\n                case 'down':\r\n                    nextActive = this._clampAddress({ row: rows - 1, column: active.column });\r\n                    break;\r\n            }\r\n\r\n            nextScroll = nextActive;\r\n\r\n            nextSelection = [{\r\n                ...nextActive,\r\n                width: 0,\r\n                height: 0\r\n            }];\r\n        } else if (shiftKey) {\r\n            let { prev, last } = this._splitSelection(selection);\r\n            let next: IGridSelection = null;\r\n            let delta = distance;\r\n\r\n            switch (direction) {\r\n                case 'left':\r\n                    if (last.column + last.width === active.column) {\r\n                        if (last.column) {\r\n                            let newColumn = last.column - distance;\r\n\r\n                            if (newColumn < 0) {\r\n                                delta = distance + newColumn;\r\n                                newColumn = 0;\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                column: newColumn,\r\n                                width: last.width + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: next.column,\r\n                                row: null\r\n                            };\r\n                        }\r\n                    } else if (last.width) {\r\n                        let newWidth = last.width - distance;\r\n\r\n                        if (newWidth < 0) {\r\n                            delta = distance + newWidth;\r\n                            newWidth = 0;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            column: last.column,\r\n                            width: newWidth\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: next.column + last.width - delta,\r\n                            row: null\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'up':\r\n                    if (last.row + last.height === active.row) {\r\n                        if (last.row) {\r\n                            let newRow = last.row - distance;\r\n\r\n                            if (newRow < 0) {\r\n                                delta = distance + newRow;\r\n                                newRow = 0;\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                row: newRow,\r\n                                height: last.height + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: null,\r\n                                row: next.row\r\n                            };\r\n                        }\r\n                    } else if (last.height) {\r\n                        let newHeight = last.height - distance;\r\n\r\n                        if (newHeight < 0) {\r\n                            delta = distance + newHeight;\r\n                            newHeight = 0;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            row: last.row,\r\n                            height: newHeight\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: null,\r\n                            row: next.row + last.height - delta\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'right':\r\n                    if (last.column === active.column) {\r\n                        let lastPos = last.column + last.width;\r\n                        if (lastPos < columns - 1) {\r\n                            if (lastPos + distance > columns - 1) {\r\n                                delta = (\r\n                                    distance >= columns - 1 - lastPos\r\n                                        ? columns - 1 - last.column\r\n                                        : last.width + distance - columns - 1\r\n                                );\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                width: last.width + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: next.column + next.width,\r\n                                row: null\r\n                            };\r\n                        }\r\n                    } else if (last.width) {\r\n                        if (last.column + delta > active.column) {\r\n                            delta = active.column - last.column;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            column: last.column + delta,\r\n                            width: last.width - delta\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: next.column,\r\n                            row: null\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'down':\r\n                    if (last.row === active.row) {\r\n                        let lastPos = last.row + last.height;\r\n\r\n                        if (lastPos < rows - 1) {\r\n                            if (lastPos + distance > rows - 1) {\r\n                                delta = (\r\n                                    distance >= rows - 1 - lastPos\r\n                                        ? rows - 1 - last.row\r\n                                        : lastPos + distance - rows - 1\r\n                                );\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                height: last.height + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: null,\r\n                                row: next.row + next.height\r\n                            };\r\n                        }\r\n                    } else if (last.height) {\r\n                        if (last.row + delta > active.row) {\r\n                            delta = active.row - last.row;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            row: last.row + delta,\r\n                            height: last.height - delta\r\n                        };\r\n                        nextScroll = {\r\n                            column: null,\r\n                            row: next.row\r\n                        };\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (next) {\r\n                nextSelection = [\r\n                    ...prev,\r\n                    next\r\n                ];\r\n            }\r\n        } else {\r\n            switch (direction) {\r\n                case 'left':\r\n                    nextActive = this._clampAddress({ row: active.row, column: active.column - distance });\r\n                    break;\r\n\r\n                case 'up':\r\n                    nextActive = this._clampAddress({ row: active.row - distance, column: active.column });\r\n                    break;\r\n\r\n                case 'right':\r\n                    nextActive = this._clampAddress({ row: active.row, column: active.column + distance });\r\n                    break;\r\n\r\n                case 'down':\r\n                    nextActive = this._clampAddress({ row: active.row + distance, column: active.column });\r\n                    break;\r\n            }\r\n\r\n            nextScroll = nextActive;\r\n\r\n            nextSelection = [{\r\n                ...nextActive,\r\n                width: 0,\r\n                height: 0\r\n            }];\r\n        }\r\n\r\n        if (nextActive || nextSelection) {\r\n            this._props.onUpdateSelection({\r\n                active: nextActive,\r\n                selection: nextSelection\r\n            });\r\n        }\r\n\r\n        if (nextScroll) {\r\n            this._props.onScroll(nextScroll);\r\n        }\r\n    }\r\n\r\n    private _onTab(e: KeyboardEvent<HTMLDivElement>, callback?: () => void) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let { active, rows, columns, selection } = this._state;\r\n\r\n        if (cmdKey) {\r\n            return;\r\n        }\r\n\r\n        let { last } = this._splitSelection(selection);\r\n        let firstRow = 0;\r\n        let firstColumn = 0;\r\n        let lastRow = rows - 1;\r\n        let lastColumn = columns - 1;\r\n        let insideSelection = false;\r\n        active = { ...active };\r\n\r\n        if (last.height || last.width) {\r\n            insideSelection = true;\r\n            firstRow = last.row;\r\n            firstColumn = last.column;\r\n            lastRow = firstRow + last.height;\r\n            lastColumn = firstColumn + last.width;\r\n        }\r\n\r\n        if (shiftKey) {\r\n            active.column--;\r\n            if (active.column < firstColumn) {\r\n                active.column = lastColumn;\r\n                active.row--;\r\n            }\r\n\r\n            if (active.row < firstRow) {\r\n                active.row = lastRow;\r\n            }\r\n        } else {\r\n            active.column++;\r\n\r\n            if (active.column > lastColumn) {\r\n                active.column = firstColumn;\r\n                active.row++;\r\n            }\r\n\r\n            if (active.row > lastRow) {\r\n                active.row = firstRow;\r\n            }\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: active,\r\n            selection: (\r\n                insideSelection\r\n                    ? null\r\n                    : [{ ...active, height: 0, width: 0 }]\r\n            )\r\n        }, () => {\r\n            this._props.onScroll(active);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private _onEnter(e: KeyboardEvent<HTMLDivElement>, callback?: () => void) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let { active, rows, selection } = this._state;\r\n\r\n        if (cmdKey) {\r\n            this._props.onOpenEditor(active);\r\n            return;\r\n        }\r\n\r\n        let { last } = this._splitSelection(selection);\r\n        let firstRow = 0;\r\n        let firstColumn = active.column;\r\n        let lastRow = rows - 1;\r\n        let lastColumn = active.column;\r\n        let insideSelection = false;\r\n        active = { ...active };\r\n\r\n        if (last.height || last.width) {\r\n            insideSelection = true;\r\n            firstRow = last.row;\r\n            firstColumn = last.column;\r\n            lastRow = firstRow + last.height;\r\n            lastColumn = firstColumn + last.width;\r\n        }\r\n\r\n        if (shiftKey) {\r\n            active.row--;\r\n\r\n            if (insideSelection) {\r\n                if (active.row < firstRow) {\r\n                    active.row = lastRow;\r\n                    active.column--;\r\n                }\r\n\r\n                if (active.column < firstColumn) {\r\n                    active.column = lastColumn;\r\n                }\r\n            } else if (active.row < 0) {\r\n                active.row = 0;\r\n            }\r\n        } else {\r\n            active.row++;\r\n\r\n            if (insideSelection) {\r\n                if (active.row > lastRow) {\r\n                    active.row = firstRow;\r\n                    active.column++;\r\n                }\r\n\r\n                if (active.column > lastColumn) {\r\n                    active.column = firstColumn;\r\n                }\r\n            } else if (active.row > rows - 1) {\r\n                active.row = rows - 1;\r\n            }\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: active,\r\n            selection: (\r\n                insideSelection\r\n                    ? null\r\n                    : [{ ...active, height: 0, width: 0 }]\r\n            )\r\n        }, () => {\r\n            this._props.onScroll(active);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private _onSpace(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onSpace(cells);\r\n    }\r\n\r\n    private _onPageUpDown(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey, altKey } = this._getModifiers(e);\r\n        let { view } = this._state;\r\n        let direction: 'left' | 'right' | 'up' | 'down' = (\r\n            e.keyCode === 33\r\n                ? altKey\r\n                    ? 'left'\r\n                    : 'up'\r\n                : altKey\r\n                    ? 'right'\r\n                    : 'down'\r\n        );\r\n\r\n        let pageColumns = view.lastColumn - view.firstColumn;\r\n        let pageRows = view.lastRow - view.firstRow;\r\n\r\n\r\n        switch (e.keyCode) {\r\n            case 37: direction = 'left'; break;\r\n            case 38: direction = 'up'; break;\r\n            case 39: direction = 'right'; break;\r\n            case 40: direction = 'down'; break;\r\n        }\r\n\r\n        this._moveSelection(shiftKey, cmdKey, direction, altKey ? pageColumns : pageRows);\r\n    }\r\n\r\n    private _onHomeEnd(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { shiftKey, cmdKey, altKey } = this._getModifiers(e);\r\n\r\n        if (altKey) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        let direction: 'home' | 'end' = e.keyCode === 36 ? 'home' : 'end';\r\n        let { active, rows, columns, selection } = this._state;\r\n        let nextActive: IGridAddress = null;\r\n        let nextSelection: IGridSelection[] = null;\r\n\r\n        let nextScroll: IGridAddress = {\r\n            row: cmdKey ? direction === 'home' ? 0 : (rows - 1) : active.row,\r\n            column: direction === 'home' ? 0 : (columns - 1)\r\n        };\r\n\r\n        if (shiftKey) {\r\n            let { prev } = this._splitSelection(selection);\r\n\r\n            nextSelection = [\r\n                ...prev,\r\n                {\r\n                    row: cmdKey && direction === 'home' ? 0 : active.row,\r\n                    column: direction === 'home' ? 0 : active.column,\r\n                    height: cmdKey ? (direction === 'home' ? active.row : rows - active.row - 1) : 0,\r\n                    width: direction === 'home' ? active.column : columns - active.column - 1\r\n                }\r\n            ];\r\n        } else {\r\n            nextActive = nextScroll;\r\n            nextSelection = [{ ...nextActive, width: 0, height: 0 }];\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: nextActive,\r\n            selection: nextSelection\r\n        });\r\n\r\n        this._props.onScroll(nextScroll);\r\n    }\r\n\r\n    private _onArrows(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let direction: 'left' | 'up' | 'down' | 'right';\r\n\r\n        switch (e.keyCode) {\r\n            case 37: direction = 'left'; break;\r\n            case 38: direction = 'up'; break;\r\n            case 39: direction = 'right'; break;\r\n            case 40: direction = 'down'; break;\r\n        }\r\n\r\n        this._moveSelection(shiftKey, cmdKey, direction, 1);\r\n    }\r\n\r\n    private _onCopy(withHeaders: boolean) {\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onCopy(cells, withHeaders);\r\n    }\r\n\r\n    private _onNullify() {\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onNullify(cells);\r\n    }\r\n\r\n    private _onRemove() {\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let rowMap: { [row: number]: boolean } = {};\r\n        let colMap: { [col: number]: boolean } = {};\r\n\r\n        this._getSelectedCells(this._state.selection).forEach(({ column, row }) => {\r\n            if (!rowMap[row]) {\r\n                rowMap[row] = true;\r\n            }\r\n\r\n            if (!colMap[column]) {\r\n                colMap[row] = true;\r\n            }\r\n        });\r\n\r\n        this._props.onRemove({\r\n            rows: Object.keys(rowMap).map(Number).sort(),\r\n            columns: Object.keys(colMap).map(Number).sort()\r\n        });\r\n    }\r\n\r\n    private _onSelectAll(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { cmdKey } = this._getModifiers(e);\r\n\r\n        if (!cmdKey) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns } = this._state;\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [{\r\n                row: 0,\r\n                column: 0,\r\n                width: columns - 1,\r\n                height: rows - 1\r\n            }]\r\n        });\r\n    }\r\n\r\n    private _onData(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { cmdKey, altKey, shiftKey } = this._getModifiers(e);\r\n\r\n        switch (e.keyCode) {\r\n            case 45: // insert\r\n                if (!shiftKey && !cmdKey) {\r\n                    break;\r\n                }\r\n\r\n                if (shiftKey && !cmdKey) {\r\n                    // this._onPaste();\r\n                } else if (!shiftKey && cmdKey) {\r\n                    e.preventDefault();\r\n                    this._onCopy(altKey);\r\n                }\r\n                break;\r\n\r\n            case 8: // backspace\r\n            case 46: // delete\r\n                e.preventDefault();\r\n                if (shiftKey && !cmdKey) {\r\n                    this._onCopy(false);\r\n                    this._onNullify();\r\n                } else if (!shiftKey && cmdKey) {\r\n                    this._onRemove();\r\n                } else if (!shiftKey && !cmdKey) {\r\n                    this._onNullify();\r\n                }\r\n                break;\r\n\r\n            case 67: // c\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n                e.preventDefault();\r\n                this._onCopy(altKey);\r\n                break;\r\n\r\n            case 86: // v\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n\r\n                // this._onPaste();\r\n                break;\r\n\r\n            case 88: // x\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n                e.preventDefault();\r\n                this._onCopy(false);\r\n                this._onNullify();\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected _paste = (e: ClipboardEvent) => {\r\n        const { focused, readOnly, selection } = this._props.getState();\r\n\r\n        if (!focused || readOnly) {\r\n            return;\r\n        }\r\n\r\n        this._props.onPaste({\r\n            clipboard: e.clipboardData,\r\n            getAllSelectedCells: () => {\r\n                return this._getSelectedCells(selection);\r\n            },\r\n            getLastSelectedCells: () => {\r\n                let { last } = this._splitSelection(selection);\r\n                return this._getSelectedCells([last]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { editor, active, focused, rows, columns } = this._request();\r\n\r\n        if (!rows || !columns) {\r\n            return;\r\n        }\r\n\r\n        if (editor) {\r\n            switch (e.keyCode) {\r\n                case 9: // tab\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._onTab(e, () => {\r\n                            this._props.onOpenEditor(this._request().active);\r\n                        });\r\n                    });\r\n                    break;\r\n\r\n                case 13: // enter\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._onEnter(e, () => {\r\n                            this._props.onOpenEditor(this._request().active);\r\n                        });\r\n                    });\r\n                    break;\r\n\r\n                case 27: // esc\r\n                    this._props.onCloseEditor(false);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!focused) {\r\n            return;\r\n        }\r\n\r\n        if (this._isInput(e)) {\r\n            this._props.onOpenEditor(active);\r\n            return;\r\n        }\r\n\r\n        switch (e.keyCode) {\r\n            case 9: // tab\r\n                this._onTab(e);\r\n                break;\r\n\r\n            case 13: // enter\r\n                this._onEnter(e);\r\n                break;\r\n\r\n            case 32: // space\r\n                this._onSpace(e);\r\n                break;\r\n\r\n            case 33: // page up\r\n            case 34: // page down\r\n                this._onPageUpDown(e);\r\n                break;\r\n\r\n            case 35: // end\r\n            case 36: // home\r\n                this._onHomeEnd(e);\r\n                break;\r\n\r\n            case 37: // left\r\n            case 38: // up\r\n            case 39: // right\r\n            case 40: // down\r\n                this._onArrows(e);\r\n                break;\r\n\r\n            case 65: // a\r\n                this._onSelectAll(e);\r\n                break;\r\n\r\n            case 8: // backspace\r\n            case 45: // insert\r\n            case 46: // delete\r\n            case 67: // c\r\n            case 86: // v\r\n            case 88: // x\r\n                this._onData(e);\r\n                break;\r\n\r\n            case 113: // F2\r\n                this._props.onOpenEditor({ ...active });\r\n                break;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        document.body.removeEventListener('paste', this._paste);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/keyboard.ts","import { MouseEvent } from 'react';\r\nimport { IGridAddress } from '../components';\r\nimport { HeaderType } from '../models';\r\nimport { Controller, IControllerProps } from './controller';\r\n\r\nexport interface IMouseControllerProps extends IControllerProps {\r\n    onRightClick: (cell: IGridAddress) => void;\r\n}\r\n\r\nexport class MouseController extends Controller {\r\n    protected _lastMouseDown = {\r\n        time: 0,\r\n        row: -1,\r\n        column: -1\r\n    };\r\n    protected _down: {\r\n        row: number;\r\n        column: number;\r\n    } = null;\r\n    protected _scrollBySelect: { h: 'L' | 'R', v: 'T' | 'B' } = null;\r\n    protected _scrollTask: any = null;\r\n\r\n    constructor(protected _props: IMouseControllerProps) {\r\n        super(_props);\r\n        window.addEventListener('mouseup', this._mouseup);\r\n    }\r\n\r\n    protected _mouseSelectFromActive(row: number, column: number) {\r\n        let { selection, active } = this._state;\r\n        let { prev } = this._splitSelection(selection);\r\n        let last = { row, column, width: 0, height: 0 };\r\n\r\n        if (column <= active.column) {\r\n            last.width = active.column - column;\r\n        } else {\r\n            last.column = active.column;\r\n            last.width = column - active.column;\r\n        }\r\n\r\n        if (row <= active.row) {\r\n            last.height = active.row - row;\r\n        } else {\r\n            last.row = active.row;\r\n            last.height = row - active.row;\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [\r\n                ...prev,\r\n                last\r\n            ]\r\n        });\r\n    }\r\n\r\n    protected _autoscroll = () => {\r\n        if (!this._scrollBySelect) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns, view } = this._request();\r\n        let { h, v } = this._scrollBySelect;\r\n        let scroll = {\r\n            row: null as number,\r\n            column: null as number\r\n        };\r\n\r\n        if (h === 'L') {\r\n            if (view.firstColumn) {\r\n                scroll.column = view.firstColumn - 1;\r\n            }\r\n        } else if (h === 'R') {\r\n            if (view.lastColumn !== columns - 1) {\r\n                scroll.column = view.lastColumn + 1;\r\n            }\r\n        }\r\n\r\n        if (v === 'T') {\r\n            if (view.firstRow) {\r\n                scroll.row = view.firstRow - 1;\r\n            }\r\n        } else if (v === 'B') {\r\n            if (view.lastRow !== rows - 1) {\r\n                scroll.row = view.lastRow + 1;\r\n            }\r\n        }\r\n\r\n        this._props.onScroll(scroll);\r\n    }\r\n\r\n    protected _mouseup = () => {\r\n        this._down = null;\r\n        this.rootenter();\r\n    }\r\n\r\n    public rootleave(x: number, y: number, rect: ClientRect) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n\r\n        this._scrollBySelect = {\r\n            h: null,\r\n            v: null\r\n        };\r\n\r\n        if (x < rect.left) {\r\n            this._scrollBySelect.h = 'L';\r\n        } else if (x > rect.left + rect.width) {\r\n            this._scrollBySelect.h = 'R';\r\n        }\r\n\r\n        if (y < rect.top) {\r\n            this._scrollBySelect.v = 'T';\r\n        } else if (y > rect.top + rect.height) {\r\n            this._scrollBySelect.v = 'B';\r\n        }\r\n\r\n        this._scrollTask = setInterval(this._autoscroll, 50);\r\n    }\r\n\r\n    public rootenter() {\r\n        if (this._scrollTask) {\r\n            clearInterval(this._scrollTask);\r\n            this._scrollTask = null;\r\n        }\r\n\r\n        this._scrollBySelect = null;\r\n    }\r\n\r\n    public mouseenter(row: number, column: number) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n        this._mouseSelectFromActive(row, column);\r\n    }\r\n\r\n    public headerdown(e: MouseEvent<HTMLElement>, type: HeaderType, first: number, last = first) {\r\n        if (e.defaultPrevented) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        const { editor, rows, columns } = this._request();\r\n\r\n        if (editor) {\r\n            return;\r\n        }\r\n\r\n        let { shiftKey } = this._getModifiers(e);\r\n\r\n        if (shiftKey) {\r\n\r\n        } else {\r\n            let active = {\r\n                row: type === HeaderType.Column ? 0 : first,\r\n                column: type === HeaderType.Column ? first : 0\r\n            };\r\n\r\n            this._props.onUpdateSelection({\r\n                active,\r\n                selection: [{\r\n                    ...active,\r\n                    height: type === HeaderType.Column ? rows - 1 : last - first,\r\n                    width: type === HeaderType.Column ? last - first : columns - 1\r\n                }]\r\n            });\r\n        }\r\n    }\r\n\r\n    public mousedown(e: MouseEvent<HTMLElement>, row: number, column: number) {\r\n        const { selection, editor } = this._request();\r\n        const { cmdKey, shiftKey } = this._getModifiers(e);\r\n\r\n        const clickInEditor = editor && editor.row === row && editor.column === column;\r\n\r\n        if (!clickInEditor && e.button !== 1) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (editor && !clickInEditor && e.button !== 1) {\r\n            this._props.onCloseEditor(true);\r\n        }\r\n\r\n        if (!cmdKey && shiftKey && e.button === 0) {\r\n            this._mouseSelectFromActive(row, column);\r\n            this._down = { row, column };\r\n        } else if (cmdKey && !shiftKey && e.button == 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [\r\n                    ...selection,\r\n                    { row, column, height: 0, width: 0 }\r\n                ]\r\n            });\r\n            this._down = { row, column };\r\n        } else if (e.button === 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            let t = Date.now();\r\n            let openEditor = (\r\n                !clickInEditor &&\r\n                t - this._lastMouseDown.time < 500 &&\r\n                this._lastMouseDown.row === row &&\r\n                this._lastMouseDown.column === column\r\n            );\r\n\r\n            this._lastMouseDown.time = t;\r\n            this._lastMouseDown.row = row;\r\n            this._lastMouseDown.column = column;\r\n\r\n            if (openEditor) {\r\n                this._down = null;\r\n                if (editor) {\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._props.onOpenEditor({ row, column });\r\n                    });\r\n                } else {\r\n                    this._props.onOpenEditor({ row, column });\r\n                }\r\n            } else {\r\n                this._down = { row, column };\r\n            }\r\n        } else if (e.button === 2) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            try {\r\n                this._props.onRightClick({ row, column });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this.rootenter();\r\n        window.removeEventListener('mouseup', this._mouseup);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/mouse.ts","import { IHeader, HeaderType } from './header';\r\n\r\nexport type HeaderResizeBehavior = 'auto' | 'manual' | 'reset';\r\n\r\nexport type IContainerHeadersFilter = (h: IHeader, type: HeaderType) => boolean;\r\n\r\nexport type HeaderClampFunction = (props: { header: IHeader, type: HeaderType, size: number }) => number;\r\n\r\nexport interface IContainerProps {\r\n    rows: IHeader[];\r\n    columns: IHeader[];\r\n\r\n    columnWidth: number;\r\n    rowHeight: number;\r\n    headersHeight: number;\r\n    headersWidth: number;\r\n\r\n    filter?: IContainerHeadersFilter;\r\n}\r\n\r\nexport interface IContainerState extends IContainerProps {\r\n    viewColumns: IHeader[];\r\n    viewRows: IHeader[];\r\n    viewLeftLevels: number;\r\n    viewTopLevels: number;\r\n    leftLevels: { [level: number]: number };\r\n    topLevels: { [level: number]: number };\r\n    types: { [headerId: string]: HeaderType };\r\n    indices: { [headerId: string]: number };\r\n    positions: { [headerId: string]: number };\r\n    levels: { [headerId: string]: number };\r\n    parents: { [headerId: string]: IHeader };\r\n    manualResized: { [headerId: string]: boolean };\r\n}\r\n\r\nexport class HeadersContainer {\r\n    private _idCounter = 0;\r\n    private _state: IContainerState;\r\n    private _idMap: { [id: string]: IHeader; } = {};\r\n    private _headersWidth = 0;\r\n    private _headersHeight = 0;\r\n\r\n    constructor(props: IContainerProps) {\r\n        if (!props) {\r\n            return;\r\n        }\r\n\r\n        this._state = {\r\n            ...props,\r\n            viewColumns: null,\r\n            viewRows: null,\r\n            viewLeftLevels: 0,\r\n            viewTopLevels: 0,\r\n            leftLevels: {},\r\n            topLevels: {},\r\n            types: {},\r\n            indices: {},\r\n            positions: {},\r\n            levels: {},\r\n            parents: {},\r\n            manualResized: {}\r\n        };\r\n\r\n        this._state.viewColumns = this._create(props.columns, [], HeaderType.Column, props.filter);\r\n        this._state.viewRows = this._create(props.rows, [], HeaderType.Row, props.filter);\r\n\r\n        this._calcPosition();\r\n        this._calcLevels();\r\n    }\r\n\r\n    get headersWidth() {\r\n        return this._headersWidth;\r\n    }\r\n\r\n    get headersHeight() {\r\n        return this._headersHeight;\r\n    }\r\n\r\n    get topLevels() {\r\n        return this._state.viewTopLevels;\r\n    }\r\n\r\n    get leftLevels() {\r\n        return this._state.viewLeftLevels;\r\n    }\r\n\r\n    get columns() {\r\n        return this._state.viewColumns;\r\n    }\r\n\r\n    get rows() {\r\n        return this._state.viewRows;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            columns: this.columns,\r\n            rows: this.rows\r\n        };\r\n    }\r\n\r\n    private _create(\r\n        list: IHeader[],\r\n        out: IHeader[],\r\n        type: HeaderType,\r\n        filter?: (h: IHeader, type: HeaderType) => boolean,\r\n        assignParent?: IHeader\r\n    ) {\r\n        list.forEach((h) => {\r\n            h.$id = h.$id || ++this._idCounter;\r\n\r\n            this._state.positions[h.$id] = 0;\r\n\r\n            if (assignParent) {\r\n                this._state.parents[h.$id] = assignParent;\r\n            }\r\n\r\n            if (h.$collapsed || (filter && !filter(h, type))) {\r\n                return;\r\n            }\r\n\r\n            if ((h.$children && h.$children.length)) {\r\n                this._create(h.$children, out, type, filter, h);\r\n                return;\r\n            }\r\n\r\n            out.push(h);\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    private _createClone() {\r\n        let c = new HeadersContainer(null);\r\n\r\n        c._state = {\r\n            ...this._state,\r\n            leftLevels: { ...this._state.leftLevels },\r\n            topLevels: { ...this._state.topLevels },\r\n            types: { ...this._state.types },\r\n            indices: { ...this._state.indices },\r\n            positions: { ...this._state.positions },\r\n            levels: { ...this._state.levels },\r\n            parents: { ...this._state.parents },\r\n            manualResized: { ...this._state.manualResized }\r\n        };\r\n\r\n        return c;\r\n    }\r\n\r\n    private _applyHeaderLevel(h: IHeader) {\r\n        let level = 0;\r\n        let seek = h;\r\n\r\n        while (this._state.parents[seek.$id]) {\r\n            level++;\r\n            seek = this._state.parents[seek.$id];\r\n        }\r\n\r\n        this._state.levels[h.$id] = level;\r\n\r\n        if (this._state.parents[h.$id]) {\r\n            this._applyHeaderLevel(this._state.parents[h.$id]);\r\n        }\r\n\r\n        return level;\r\n    }\r\n\r\n    private _applyParentPosition(list: IHeader[], type: HeaderType) {\r\n        let lock: { [k: string]: boolean } = {};\r\n        let parents: IHeader[] = [];\r\n\r\n        list.forEach((h) => {\r\n            this._idMap[h.$id] = h;\r\n            this._state.types[h.$id] = type;\r\n\r\n            let first = h.$children[0];\r\n            let last = h.$children[h.$children.length - 1];\r\n\r\n            this._state.positions[h.$id] = this._state.positions[first.$id];\r\n            h.$size = this._state.positions[last.$id] + last.$size - this._state.positions[first.$id];\r\n\r\n            let parent = this._state.parents[h.$id];\r\n\r\n            if (parent && !lock[parent.$id]) {\r\n                lock[parent.$id] = true;\r\n                parents.push(parent);\r\n            }\r\n        });\r\n\r\n        if (parents.length) {\r\n            this._applyParentPosition(parents, type);\r\n        }\r\n    }\r\n\r\n    private _proceedHeaders(list: IHeader[], from: number, size: number, type: HeaderType) {\r\n        let cursor = this._state.positions[list[from].$id];\r\n        let len = list.length;\r\n\r\n        if (!len) {\r\n            return 0;\r\n        }\r\n\r\n        let levels = 0;\r\n        let lock: { [k: string]: boolean } = {};\r\n        let parents: IHeader[] = [];\r\n\r\n        for (let i = from; i < len; i++) {\r\n            let h = list[i];\r\n\r\n            if (!h.$size) {\r\n                h.$size = size;\r\n            }\r\n\r\n            this._state.indices[h.$id] = (h.$children && h.$children[0]) ? -1 : i;\r\n            this._state.positions[h.$id] = cursor;\r\n            cursor += h.$size;\r\n\r\n            this._state.types[h.$id] = type;\r\n\r\n            let l = this._applyHeaderLevel(h);\r\n\r\n            if (l > levels) {\r\n                levels = l;\r\n            }\r\n\r\n            this._idMap[h.$id] = h;\r\n\r\n            let parent = this._state.parents[h.$id];\r\n            if (parent && !lock[parent.$id]) {\r\n                lock[parent.$id] = true;\r\n                parents.push(parent);\r\n            }\r\n        }\r\n\r\n        if (parents.length) {\r\n            this._applyParentPosition(parents, type);\r\n        }\r\n\r\n        return levels + 1;\r\n    }\r\n\r\n    private _calcLevels() {\r\n        this._headersWidth = 0;\r\n        for (let i = 0; i < this._state.viewLeftLevels; i++) {\r\n            this._headersWidth += this.getLeftLevelWidth(i);\r\n        }\r\n\r\n        this._headersHeight = 0;\r\n        for (let i = 0; i < this._state.viewTopLevels; i++) {\r\n            this._headersHeight += this.getTopLevelHeight(i);\r\n        }\r\n    }\r\n\r\n    private _calcPosition(from = 0) {\r\n        this._state.viewTopLevels = this._proceedHeaders(this._state.viewColumns, from, this._state.columnWidth, HeaderType.Column);\r\n        this._state.viewLeftLevels = this._proceedHeaders(this._state.viewRows, from, this._state.rowHeight, HeaderType.Row);\r\n    }\r\n\r\n    private _getLevelPosition(type: 'left' | 'top', level: number) {\r\n        if (level >= (type === 'left' ? this._state.viewLeftLevels : this._state.viewTopLevels)) {\r\n            return 0;\r\n        }\r\n\r\n        let p = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            p += (type === 'left' ? this.getLeftLevelWidth(i) : this.getTopLevelHeight(i));\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    private _getLeaves(h: IHeader, out: IHeader[] = []) {\r\n        if (!h.$children || !h.$children.length) {\r\n            out.push(h);\r\n            return out;\r\n        }\r\n\r\n        h.$children.forEach(c => this._getLeaves(c, out));\r\n        return out;\r\n    }\r\n\r\n    private _getResizeList(h: IHeader, size: number, clamp: HeaderClampFunction) {\r\n        if (!h.$children || !h.$children.length) {\r\n            size = clamp({\r\n                header: h,\r\n                type: this._state.types[h.$id],\r\n                size\r\n            });\r\n        }\r\n\r\n        let prevSize = h.$size;\r\n\r\n        if (!h.$children || !h.$children.length) {\r\n            return [{\r\n                header: h,\r\n                size\r\n            }];\r\n        }\r\n\r\n        let leaves = this.getHeaderLeaves(h);\r\n\r\n        let d = 0;\r\n\r\n        if (clamp) {\r\n            leaves.forEach((c) => {\r\n                let n = Math.floor(c.$size * size / prevSize);\r\n                let m = clamp({\r\n                    header: h,\r\n                    type: this._state.types[h.$id],\r\n                    size: n - d\r\n                });\r\n\r\n                if (n < m) {\r\n                    d += m - n;\r\n                }\r\n            });\r\n        }\r\n\r\n        return leaves.map((c) => {\r\n            return {\r\n                header: c,\r\n                size: clamp({\r\n                    header: c,\r\n                    type: this._state.types[c.id],\r\n                    size: Math.floor(c.$size * size / prevSize) - d\r\n                })\r\n            };\r\n        });\r\n    }\r\n\r\n    private _getHeaderAddress(h: IHeader) {\r\n        let ix: number[] = [];\r\n        let seek = h;\r\n\r\n        while (seek) {\r\n            ix.push(this._state.indices[h.$id]);\r\n            seek = this._state.parents[seek.$id];\r\n        }\r\n\r\n        return ix.reverse();\r\n    }\r\n\r\n    private _mapBranch(address: number[], list: IHeader[], map: (h: IHeader) => IHeader): IHeader[] {\r\n        let len = address.length;\r\n\r\n        return list.map((h) => {\r\n            if (!len) {\r\n                return map(h);\r\n            }\r\n\r\n            return {\r\n                ...h,\r\n                $children: this._mapBranch(address.slice(1), h.$children, map)\r\n            };\r\n        });\r\n    }\r\n\r\n    private _recalcHeaders() {\r\n        this._state.viewColumns = null;\r\n        this._state.viewRows = null;\r\n        this._state.viewLeftLevels = 0;\r\n        this._state.viewTopLevels = 0;\r\n        this._state.types = {};\r\n        this._state.indices = {};\r\n        this._state.positions = {};\r\n        this._state.levels = {};\r\n        this._state.parents = {};\r\n        this._state.viewColumns = this._create(this._state.columns, [], HeaderType.Column, this._state.filter);\r\n        this._state.viewRows = this._create(this._state.rows, [], HeaderType.Row, this._state.filter);\r\n        this._calcPosition();\r\n        this._calcLevels();\r\n\r\n        return this;\r\n    }\r\n\r\n    private _updateHeaders(\r\n        branchMap: {\r\n            [branchName: string]: {\r\n                [$id: string]: IHeader;\r\n            };\r\n        },\r\n        sourceList: IHeader[]\r\n    ) {\r\n        let branchList = Object.keys(branchMap);\r\n\r\n        if (!branchList.length) {\r\n            return sourceList;\r\n        }\r\n\r\n        branchList.forEach((branch) => {\r\n            let address = branch.split('/').filter(v => !!v).map(Number);\r\n            let updateMap = branchMap[branch];\r\n\r\n            sourceList = this._mapBranch(address, sourceList, (h) => {\r\n                let update = updateMap[h.$id];\r\n\r\n                if (!update) {\r\n                    return h;\r\n                }\r\n\r\n                let next = { ...h };\r\n\r\n                Object.keys(update).forEach((key) => {\r\n                    if (key === '$id') {\r\n                        return;\r\n                    }\r\n\r\n                    next[key] = update[key];\r\n                });\r\n\r\n                return next;\r\n            });\r\n        });\r\n\r\n        return sourceList;\r\n    }\r\n\r\n    public getHeader(id: number | string) {\r\n        return this._idMap[id];\r\n    }\r\n\r\n    public getHeaderType(h: IHeader) {\r\n        return this._state.types[h.$id];\r\n    }\r\n\r\n    public getViewIndex(h: IHeader) {\r\n        return this._state.indices[h.$id];\r\n    }\r\n\r\n    public getPosition(h: IHeader) {\r\n        return this._state.positions[h.$id];\r\n    }\r\n\r\n    public getManualResized(h: IHeader) {\r\n        return !!this._state.manualResized[h.$id];\r\n    }\r\n\r\n    public getLevel(h: IHeader) {\r\n        return this._state.levels[h.$id];\r\n    }\r\n\r\n    public getParent(h: IHeader) {\r\n        return this._state.parents[h.$id];\r\n    }\r\n\r\n    public getTopLevelPosition(level: number) {\r\n        return this._getLevelPosition('top', level);\r\n    }\r\n\r\n    public getLeftLevelPosition(level: number) {\r\n        return this._getLevelPosition('left', level);\r\n    }\r\n\r\n    public getLeftLevelWidth(level: number) {\r\n        let v = this._state.leftLevels[level];\r\n        return v == null ? this._state.headersWidth : v;\r\n    }\r\n\r\n    public getTopLevelHeight(level: number) {\r\n        let v = this._state.topLevels[level];\r\n        return v == null ? this._state.headersHeight : v;\r\n    }\r\n\r\n    public getHeaderLeaves(h: IHeader) {\r\n        return this._getLeaves(h);\r\n    }\r\n\r\n    public getSource() {\r\n        return {\r\n            columns: this._state.columns,\r\n            rows: this._state.rows,\r\n            columnWidth: this._state.columnWidth,\r\n            rowHeight: this._state.rowHeight,\r\n            headersHeight: this._state.headersHeight,\r\n            headersWidth: this._state.headersWidth,\r\n            filter: this._state.filter\r\n        } as IContainerProps;\r\n    }\r\n\r\n    public updateFilter(filter: IContainerHeadersFilter) {\r\n        if (this._state.filter === filter) {\r\n            return this;\r\n        }\r\n\r\n        let next = this._createClone();\r\n        next._state.filter = filter;\r\n        return next._recalcHeaders();\r\n    }\r\n\r\n    public updateHeaders(updates: { header: IHeader, update: IHeader }[]) {\r\n        let mapColumns: {\r\n            [branchName: string]: {\r\n                [$id: string]: IHeader;\r\n            };\r\n        } = {};\r\n\r\n        let mapRows: typeof mapColumns = {};\r\n\r\n        updates.forEach(({ header, update }) => {\r\n            let headerType = this._state.types[header.$id];\r\n            let address = this._getHeaderAddress(header);\r\n            let map = headerType === HeaderType.Column ? mapColumns : mapRows;\r\n            let branchName = address.slice(0, address.length - 1).join('/');\r\n\r\n            if (!map[branchName]) {\r\n                map[branchName] = {};\r\n            }\r\n\r\n            map[branchName][header.$id] = update;\r\n        });\r\n\r\n        let next = this._createClone();\r\n\r\n        next._state.columns = this._updateHeaders(mapColumns, next._state.columns);\r\n        next._state.rows = this._updateHeaders(mapRows, next._state.rows);\r\n\r\n        return next._recalcHeaders();\r\n    }\r\n\r\n    /**\r\n     * Resize all provided headers.\r\n     * @param list Array of headers.\r\n     * @param clamp Size clamp function.\r\n     * @param behavior Defines flag when header was resized by autosize or manually.\r\n     * Header will not be autosized when it was manually resized. Default `\"manual\"`.\r\n     */\r\n    public resizeHeaders(\r\n        list: { header: IHeader, size: number }[],\r\n        clamp: HeaderClampFunction = ({ size }) => size,\r\n        behavior: HeaderResizeBehavior = 'manual'\r\n    ) {\r\n        let updates: { header: IHeader, update: IHeader }[] = [];\r\n        let leaves: IHeader[] = [];\r\n\r\n        list.forEach((u) => {\r\n            let resizeList = this._getResizeList(u.header, u.size, clamp);\r\n\r\n            resizeList.forEach(({ header, size }) => {\r\n                leaves.push(header);\r\n\r\n                updates.push({\r\n                    header,\r\n                    update: {\r\n                        $size: size\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        let c = this.updateHeaders(updates);\r\n\r\n        switch (behavior) {\r\n            case 'manual':\r\n            case 'reset':\r\n                let isManual = behavior === 'manual';\r\n                leaves.forEach((header) => {\r\n                    if (isManual) {\r\n                        c._state.manualResized[header.$id] = true;\r\n                    } else {\r\n                        delete c._state.manualResized[header.$id];\r\n                    }\r\n                });\r\n        }\r\n\r\n        return c;\r\n    }\r\n\r\n    public resizeLevel(type: HeaderType, level: number, size: number, min = 5, max = Infinity) {\r\n        let t: 'leftLevels' | 'topLevels' = type === HeaderType.Column ? 'topLevels' : 'leftLevels';\r\n        if (size <= min) {\r\n            size = min;\r\n        }\r\n\r\n        let next = this._createClone();\r\n\r\n        next._state[t][level] = Math.min(Math.max(min, size), max);\r\n        next._calcLevels();\r\n\r\n        return next;\r\n    }\r\n\r\n    public update(props: IContainerProps) {\r\n        let next = this._createClone();\r\n\r\n        next._state = {\r\n            ...next._state,\r\n            ...props\r\n        };\r\n\r\n        return next._recalcHeaders();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/container.ts","let size: number = null;\r\n\r\nexport function getScrollbarSize() {\r\n    if (size !== null) {\r\n        return size;\r\n    }\r\n\r\n    let d = document.createElement('div');\r\n    d.style.overflow = 'scroll';\r\n    d.style.boxSizing = 'border-box';\r\n    d.style.position = 'fixed';\r\n    d.style.top = '-999px';\r\n    d.style.width = '100px';\r\n    d.style.height = '100px';\r\n\r\n    document.body.appendChild(d);\r\n\r\n    size = (100 - d.clientWidth) || (100 - d.clientHeight);\r\n\r\n    document.body.removeChild(d);\r\n\r\n    return size;\r\n}\r\n\r\nexport default getScrollbarSize;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/scrollbar-size.ts","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\nfunction is(x: any, y: any) {\r\n    return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;\r\n}\r\n\r\n/**\r\n * Shallow cache.\r\n *\r\n * If next object contains same keys and values - returns cached value instead.\r\n *\r\n * Optional callback called when changes were detected.\r\n */\r\nexport function Shallow<T>(callback?: () => void) {\r\n    let prev: T = void 0;\r\n\r\n    return (next: T) => {\r\n        if (is(prev, next)) {\r\n            return prev;\r\n        }\r\n\r\n        if (typeof prev !== 'object' || typeof next !== 'object') {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return prev = next;\r\n        }\r\n\r\n        let nextKeys = Object.keys(next);\r\n        let prevKeys = Object.keys(prev);\r\n\r\n        if (nextKeys.length !== prevKeys.length) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return prev = next;\r\n        }\r\n\r\n        for (const k of prevKeys) {\r\n            if (!next.hasOwnProperty(k) || !is((prev as any)[k], (next as any)[k])) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                return prev = next;\r\n            }\r\n        }\r\n\r\n        return prev;\r\n    };\r\n}\r\n\r\nexport default Shallow;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/shallow.ts","/**  Get element relative coordinates. */\r\nexport function getRelativePosition(pageX: number, pageY: number, element: HTMLElement) {\r\n    if (!element || !element.parentElement) {\r\n        return { x: pageX, y: pageY };\r\n    }\r\n\r\n    let p = element;\r\n\r\n    do {\r\n        pageX -= p.offsetLeft;\r\n        pageY -= p.offsetTop;\r\n    } while (p = p.offsetParent as HTMLElement);\r\n\r\n    return { x: pageX, y: pageY };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/relative-position.ts","import * as React from 'react';\r\n\r\nexport function render(jsx: JSX.Element | ((props?: any) => JSX.Element), getProps?: () => any) {\r\n    if (!jsx) {\r\n        return jsx;\r\n    }\r\n\r\n    const props = getProps ? getProps() : {};\r\n    return typeof jsx === 'function' ? jsx(props) : React.cloneElement(React.Children.only(jsx), props);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/render.tsx","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { HeadersContainer, IHeader, HeaderType } from '../models';\r\nimport { Grid } from '../components/grid';\r\n\r\nexport interface IResizerProps {\r\n    header: IHeader;\r\n}\r\n\r\nexport class Resizer extends React.PureComponent<IResizerProps, any> {\r\n    /** React v17 deprecated */\r\n    static contextTypes = {\r\n        grid: PropTypes.object,\r\n        headers: PropTypes.object\r\n    };\r\n\r\n    private static _r: React.CSSProperties = {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        width: 6,\r\n        cursor: 'col-resize'\r\n    };\r\n\r\n    private static _b: React.CSSProperties = {\r\n        position: 'absolute',\r\n        right: 0,\r\n        height: 6,\r\n        bottom: 0,\r\n        left: 0,\r\n        cursor: 'row-resize'\r\n    };\r\n\r\n    private _moving: {\r\n        start: number;\r\n        type: 'left-level' | 'top-level' | 'row' | 'column';\r\n    } = null;\r\n\r\n    private _lastClick: {\r\n        type: 'left-level' | 'top-level' | 'row' | 'column';\r\n        time: number;\r\n    };\r\n\r\n    private _moveListener: any = null;\r\n    private _upListener: any = null;\r\n    private _escListener: any = null;\r\n    private _moved = false;\r\n\r\n    private get _grid() {\r\n        return this.context['grid'] as Grid;\r\n    }\r\n\r\n    private get _container() {\r\n        return this.context['headers'] as HeadersContainer;\r\n    }\r\n\r\n    private _unbind() {\r\n        if (this._moving) {\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n        }\r\n\r\n        if (this._moveListener) {\r\n            document.body.removeEventListener('mousemove', this._moveListener);\r\n            this._moveListener = null;\r\n        }\r\n\r\n        if (this._upListener) {\r\n            window.removeEventListener('mouseup', this._upListener);\r\n            this._upListener = null;\r\n        }\r\n\r\n        if (this._escListener) {\r\n            window.removeEventListener('keydown', this._escListener);\r\n            this._escListener = null;\r\n        }\r\n\r\n        this._moving = null;\r\n    }\r\n\r\n    private _onMove(change: number) {\r\n        if (!this._moving) {\r\n            return;\r\n        }\r\n\r\n        let { type } = this._moving;\r\n        let { header } = this.props;\r\n\r\n        switch (type) {\r\n            case 'column':\r\n            case 'row':\r\n                this._grid.previewResizeHeader({\r\n                    header: header,\r\n                    change: change,\r\n                });\r\n                break;\r\n\r\n            case 'left-level':\r\n            case 'top-level':\r\n                this._grid.previewResizeLevel({\r\n                    header: header,\r\n                    change: change,\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _onChange(change: number) {\r\n        if (!this._moving || !this._moved) {\r\n            return;\r\n        }\r\n\r\n        let { type } = this._moving;\r\n        let { header } = this.props;\r\n\r\n        switch (type) {\r\n            case 'column':\r\n            case 'row':\r\n                this._grid.resizeHeaders({\r\n                    headers: [{\r\n                        type: type === 'row' ? HeaderType.Row : HeaderType.Column,\r\n                        header: header,\r\n                        size: header.$size + change\r\n                    }],\r\n                    behavior: 'manual'\r\n                });\r\n                break;\r\n\r\n            case 'left-level':\r\n            case 'top-level':\r\n                let start = (\r\n                    type === 'left-level'\r\n                        ? this._container.getLeftLevelWidth(this._container.getLevel(header))\r\n                        : this._container.getTopLevelHeight(this._container.getLevel(header))\r\n                );\r\n                this._grid.resizeLevel({\r\n                    type: type === 'left-level' ? HeaderType.Row : HeaderType.Column,\r\n                    level: this._container.getLevel(header),\r\n                    size: start + change\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _onMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        this._moved = false;\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let type = e.currentTarget.getAttribute('x-type') as ('r' | 'b');\r\n        let p = type === 'r' ? e.pageX : e.pageY;\r\n        let headerType = this._container.getHeaderType(this.props.header);\r\n        let isRow = headerType === HeaderType.Row;\r\n\r\n        this._unbind();\r\n\r\n        let now = Date.now();\r\n        let movingType = (\r\n            type === 'r'\r\n                ? isRow\r\n                    ? 'left-level'\r\n                    : 'column'\r\n                : isRow\r\n                    ? 'row'\r\n                    : 'top-level'\r\n        );\r\n\r\n        if (this._lastClick && this._lastClick.type === movingType && (now - this._lastClick.time < 500)) {\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n            this._unbind();\r\n            this._grid.autoMeasure([this.props.header]);\r\n            return;\r\n        }\r\n\r\n        this._moving = {\r\n            type: movingType as any,\r\n            start: p\r\n        };\r\n\r\n        this._lastClick = {\r\n            type: movingType as any,\r\n            time: now\r\n        };\r\n\r\n        let change = 0;\r\n\r\n        window.addEventListener('mouseup', this._upListener = () => {\r\n            this._onChange(change);\r\n\r\n            this._moved = false;\r\n\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n            this._unbind();\r\n        });\r\n\r\n        window.addEventListener('keydown', this._escListener = (ev: KeyboardEvent) => {\r\n            if (ev.keyCode === 27) { // esc\r\n                this._unbind();\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('mousemove', this._moveListener = (ev: MouseEvent) => {\r\n            if (!this._moving) {\r\n                return;\r\n            }\r\n\r\n            this._moved = true;\r\n\r\n            let m = type === 'r' ? ev.pageX : ev.pageY;\r\n            change = m - this._moving.start;\r\n            this._onMove(change);\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._unbind();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    x-type=\"r\"\r\n                    style={Resizer._r}\r\n                    onMouseDown={this._onMouseDown}\r\n                />\r\n                <div\r\n                    x-type=\"b\"\r\n                    style={Resizer._b}\r\n                    onMouseDown={this._onMouseDown}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/resizer.tsx","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { RenderThrottler } from 'react-bolivianite-grid/controllers/renderthrottler';\r\nconst Style = require('./split-view.scss');\r\n\r\nexport interface ISplitViewProps {\r\n    className?: string;\r\n    minimum?: number;\r\n}\r\n\r\nexport class SplitView extends React.PureComponent<ISplitViewProps, any> {\r\n    state = {\r\n        position: 0.5,\r\n        initial: 0.5,\r\n        drag: false,\r\n        x: 0\r\n    };\r\n\r\n    private _mounted = false;\r\n    private _t: RenderThrottler = null;\r\n    private _r: HTMLDivElement = null;\r\n    private _mouseup: EventListener = null;\r\n    private _mousemove: EventListener = null;\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._r = r;\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this._mounted = true;\r\n        this._t = new RenderThrottler();\r\n\r\n        const throttle = this._t.create();\r\n\r\n        window.addEventListener('mouseup', this._mouseup = () => {\r\n            if (!this._mounted) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ drag: false });\r\n        });\r\n\r\n        window.addEventListener('mousemove', this._mousemove = (e: MouseEvent) => {\r\n            throttle(() => {\r\n                if (!this.state.drag || !this._r || !this._mounted) {\r\n                    return;\r\n                }\r\n\r\n                let width = this._r.clientWidth;\r\n                let initialPosition = width * this.state.initial;\r\n                let nextPosition = initialPosition + e.pageX - this.state.x;\r\n                let minimum = this.props.minimum || 100;\r\n                nextPosition = Math.max(minimum, Math.min(nextPosition, width - minimum));\r\n\r\n                this.setState({\r\n                    position: nextPosition / width\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._mounted = false;\r\n        window.removeEventListener('mouseup', this._mouseup);\r\n        window.removeEventListener('mousemove', this._mousemove);\r\n    }\r\n\r\n    public render() {\r\n        let a = React.Children.toArray(this.props.children);\r\n\r\n        if (a.length < 2) {\r\n            return (\r\n                <div className={classnames(Style.root, this.props.className)}>\r\n                    <div className={Style.container} >\r\n                        {a[0]}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classnames(Style.root, this.props.className)}\r\n                ref={this._onRef}\r\n            >\r\n                <div\r\n                    className={Style.container}\r\n                    style={{\r\n                        width: `${100 * this.state.position}%`\r\n                    }}\r\n                >\r\n                    {a[0]}\r\n                </div>\r\n                <div\r\n                    className={Style.resizer}\r\n                    style={{\r\n                        left: `${100 * this.state.position}%`\r\n                    }}\r\n                    onMouseDown={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                            drag: true,\r\n                            x: e.pageX,\r\n                            initial: this.state.position\r\n                        });\r\n                    }}\r\n                />\r\n                <div\r\n                    className={Style.container}\r\n                    style={{\r\n                        width: `${100 * (1 - this.state.position)}%`\r\n                    }}\r\n                >\r\n                    {a[1]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/split-view.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"split-view__root___37RYX\",\"container\":\"split-view__container___-GMcN\",\"resizer\":\"split-view__resizer___3smfz\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/split-view.scss\n// module id = 439\n// module chunks = 1","import * as React from 'react';\r\nimport { ScrollView as SV, IScrollViewProps } from 'react-bolivianite-grid';\r\nconst Style = require('./scroll-view.scss');\r\n\r\nexport class ScrollView extends React.Component<IScrollViewProps, {}> {\r\n    public render() {\r\n        return (\r\n            <SV\r\n                lock=\"y\"\r\n                scrollbarMinimizeDistance={100}\r\n                scrollbarWidth={15}\r\n                scrollbarWidthMinimized={5}\r\n                classNameTrackRoot={Style.scrollViewTrack}\r\n                classNameThumb={Style.scrollViewThumb}\r\n                {...this.props}\r\n            >\r\n                {this.props.children}\r\n            </SV>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/scroll-view.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"scrollViewTrack\":\"scroll-view__scrollViewTrack___33_84\",\"scrollViewThumb\":\"scroll-view__scrollViewThumb___2Q4z6\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ui/scroll-view.scss\n// module id = 441\n// module chunks = 1","import Article from './index';\r\n\r\nexport default Article.create('examples', [{\r\n    // Index article\r\n    name: '',\r\n    caption: '',\r\n    body: [\r\n    ]\r\n}, {\r\n    name: 'simple',\r\n    caption: 'Simple',\r\n    body: [\r\n        require('./example-simple.md'),\r\n        Article.example({\r\n            height: 600,\r\n            example: 'example-grid-simple.tsx',\r\n            files: [\r\n                ['example-grid-simple.tsx', 'javascript', 'main.tsx'],\r\n                ['grid-theme.ts', 'typescript']\r\n            ]\r\n        })\r\n    ]\r\n}]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/examples.ts","import { ICodeViewProps } from '~/components/ui';\r\n\r\nexport interface IArticle {\r\n    name: string;\r\n    caption: string;\r\n    body: (string | ICodeViewProps)[];\r\n}\r\n\r\nexport interface IArticlesSource {\r\n    url: string;\r\n    articles: IArticle[];\r\n}\r\n\r\n\r\nexport namespace Article {\r\n    export function create(url: string, articles: IArticle[]): IArticlesSource {\r\n        return { url, articles };\r\n    }\r\n\r\n    export function example(props: ICodeViewProps) {\r\n        return props;\r\n    }\r\n}\r\n\r\nexport default Article;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/index.ts","module.exports = \"# Simple example of grid\\r\\n\\r\\nRead only\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/articles/example-simple.md\n// module id = 444\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"main\":\"app__main___1EYxo\",\"footer\":\"app__footer___1X8FN\",\"footerContent\":\"app__footerContent___3P11k\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/app.scss\n// module id = 445\n// module chunks = 1","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nconst Style = require('./app-max-width.scss');\r\n\r\nexport class AppMaxWidth extends React.PureComponent<any, any> {\r\n    public render() {\r\n        return (\r\n            <div className={classnames(Style.root, this.props.className)}>\r\n                <div className={classnames(Style.layer, this.props.classNameLayer)}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/app-max-width.tsx","module.exports = \"import * as React from 'react';\\r\\n\\r\\nimport Grid, {\\r\\n    HeadersContainer, HeaderType, ICellRendererEvent, IHeaderRendererEvent, ISelectionRendererEvent\\r\\n} from 'react-bolivianite-grid';\\r\\n\\r\\nimport Theme from './grid-theme';\\r\\n\\r\\n\\r\\nexport class Example extends React.Component {\\r\\n    state = {\\r\\n        data: {} as {\\r\\n            [key: string]: string;\\r\\n        },\\r\\n        headers: new HeadersContainer({\\r\\n            columns: new Array(100).fill(null).map(() => ({})),\\r\\n            rows: new Array(200).fill(null).map(() => ({})),\\r\\n            columnWidth: 100,\\r\\n            rowHeight: 24,\\r\\n            headersHeight: 24,\\r\\n            headersWidth: 50\\r\\n        })\\r\\n    };\\r\\n\\r\\n    excelIndex(index: number) {\\r\\n        index++;\\r\\n        let c = '';\\r\\n\\r\\n        for (let a = 1, b = 26; (index -= a) >= 0; a = b, b *= 26) {\\r\\n            c = String.fromCharCode(~~((index % b) / a) + 65) + c;\\r\\n        }\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    renderCell = ({ style, columnIndex, rowIndex, source, theme }: ICellRendererEvent) => {\\r\\n        let key = `${rowIndex} x ${columnIndex}`;\\r\\n        let display = source[key] === void 0 ? key : source[key];\\r\\n\\r\\n        return (\\r\\n            <div\\r\\n                style={{\\r\\n                    ...style,\\r\\n                    boxSizing: 'border-box',\\r\\n                    borderRight: `solid 1px ${theme.cellBorderColor}`,\\r\\n                    borderBottom: `solid 1px ${theme.cellBorderColor}`,\\r\\n                    padding: '0 3px',\\r\\n                    display: 'flex',\\r\\n                    alignItems: 'center',\\r\\n                    color: theme.cellTextColor,\\r\\n                    background: (\\r\\n                        rowIndex % 2\\r\\n                            ? theme.cellBackgroundEven\\r\\n                            : theme.cellBackgroundOdd\\r\\n                    )\\r\\n                }}\\r\\n            >\\r\\n                {display}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    renderHeader = ({ style, type, selection, viewIndex, theme }: IHeaderRendererEvent) => {\\r\\n        let rcolor = (\\r\\n            type === HeaderType.Row && selection\\r\\n                ? theme.headerBorderColorSelected\\r\\n                : theme.headerBorderColor\\r\\n        );\\r\\n\\r\\n        let bcolor = (\\r\\n            type === HeaderType.Column && selection\\r\\n                ? theme.headerBorderColorSelected\\r\\n                : theme.headerBorderColor\\r\\n        );\\r\\n\\r\\n        let nextStyle: React.CSSProperties = {\\r\\n            ...style,\\r\\n            boxSizing: 'border-box',\\r\\n            borderRight: `solid 1px ${rcolor}`,\\r\\n            borderBottom: `solid 1px ${bcolor}`,\\r\\n            padding: '0 3px',\\r\\n            display: 'flex',\\r\\n            alignItems: 'center'\\r\\n        };\\r\\n\\r\\n        if (selection) {\\r\\n            nextStyle.backgroundColor = theme.headerBackgroundColorSelected;\\r\\n        }\\r\\n\\r\\n        if (type === HeaderType.Row) {\\r\\n            nextStyle.justifyContent = 'flex-end';\\r\\n        }\\r\\n\\r\\n        return (\\r\\n            <div style={nextStyle}>\\r\\n                {\\r\\n                    type === HeaderType.Column && viewIndex != null\\r\\n                        ? this.excelIndex(viewIndex)\\r\\n                        : viewIndex\\r\\n                }\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    renderSelection = ({ key, style, active, edit, theme }: ISelectionRendererEvent) => {\\r\\n        style.left--;\\r\\n        style.top--;\\r\\n        style.width++;\\r\\n        style.height++;\\r\\n\\r\\n        return (\\r\\n            <div\\r\\n                key={key}\\r\\n                style={{\\r\\n                    ...style,\\r\\n                    boxSizing: 'border-box',\\r\\n                    backgroundColor: (active || edit) ? theme.selectionBackgroundActive : theme.selectionBackground,\\r\\n                    border: active ? theme.selectionBorderActive : theme.selectionBorder\\r\\n                }}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <Grid\\r\\n                readOnly\\r\\n                headers={this.state.headers}\\r\\n                overscanRows={3}\\r\\n                source={this.state.data}\\r\\n                theme={Theme}\\r\\n                onRenderCell={this.renderCell}\\r\\n                onRenderHeader={this.renderHeader}\\r\\n                onRenderSelection={this.renderSelection}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Example;\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/articles/content/example-grid-simple.tsx\n// module id = 60\n// module chunks = 1","module.exports = \"import { IGridTheme } from 'react-bolivianite-grid';\\r\\n\\r\\nconst REQUIRED_THEME: IGridTheme = {\\r\\n    // Scroller theme\\r\\n    scrollbarWidth: 15,\\r\\n    scrollbarWidthMinimized: 5,\\r\\n    scrollbarMinimizeDistance: 100,\\r\\n    styleTrackRoot: {\\r\\n        transition: 'ease all 100ms',\\r\\n        background: `rgba(0, 0, 0, 0.2)`\\r\\n    },\\r\\n    styleThumb: {\\r\\n        background: `rgba(0, 0, 0, 0.8)`\\r\\n    },\\r\\n\\r\\n    // Grid theme\\r\\n    style: {\\r\\n        background: '#FFFFFF'\\r\\n    },\\r\\n    styleGridColumns: {\\r\\n        background: '#3C3744',\\r\\n        boxShadow: '0 0 5px #000',\\r\\n        color: '#DBDADD'\\r\\n    },\\r\\n    styleGridRows: {\\r\\n        background: '#3C3744',\\r\\n        boxShadow: '0 0 5px #000',\\r\\n        color: '#DBDADD'\\r\\n    },\\r\\n    styleGridCorner: {\\r\\n        borderRight: 'solid 1px #000',\\r\\n        borderBottom: 'solid 1px #000',\\r\\n        background: '#3C3744',\\r\\n        color: '#DBDADD',\\r\\n        boxSizing: 'border-box'\\r\\n    },\\r\\n};\\r\\n\\r\\nconst THEME = {\\r\\n    ...REQUIRED_THEME,\\r\\n\\r\\n    // Custom grid theme properties\\r\\n    cellTextColor: '#211E26',\\r\\n    cellBorderColor: '#918B9C',\\r\\n    cellBackgroundEven: '#EFEFEF',\\r\\n    cellBackgroundOdd: '#FFFFFF',\\r\\n    editorBorderColor: '#918B9C',\\r\\n    editorBackground: '#FFFFFF',\\r\\n    headerBorderColor: '#000000',\\r\\n    headerBorderColorSelected: '#0F0126',\\r\\n    headerBackgroundColorSelected: '#0F0126',\\r\\n    selectionBackground: 'rgba(15, 1, 38, 0.2)',\\r\\n    selectionBackgroundActive: 'transparent',\\r\\n    selectionBorder: 'solid 1px #0F0126',\\r\\n    selectionBorderActive: 'solid 2px #0F0126',\\r\\n    resizerBackground: 'rgba(0, 0, 0, 0.4)'\\r\\n};\\r\\n\\r\\nexport default THEME;\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/articles/content/grid-theme.ts\n// module id = 61\n// module chunks = 1","module.exports = \"import * as React from 'react';\\r\\n\\r\\nexport interface EditorProps {\\r\\n    initialValue: string;\\r\\n    update: (v: any) => void;\\r\\n}\\r\\n\\r\\nexport class Editor extends React.PureComponent<EditorProps, any> {\\r\\n    state = {\\r\\n        value: this.props.initialValue == null ? '' : this.props.initialValue\\r\\n    };\\r\\n\\r\\n    private _ref: HTMLInputElement;\\r\\n\\r\\n    private _onRef = (r: any) => {\\r\\n        this._ref = r;\\r\\n    }\\r\\n\\r\\n    public componentDidMount() {\\r\\n        if (!this._ref) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._ref.focus();\\r\\n        this._ref.select();\\r\\n    }\\r\\n\\r\\n    public componentWillUnmount() {\\r\\n        if (this.state.value !== this.props.initialValue) {\\r\\n            this.props.update(this.state.value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public render() {\\r\\n        return (\\r\\n            <input\\r\\n                ref={this._onRef}\\r\\n                style={{\\r\\n                    width: '100%',\\r\\n                    height: '100%',\\r\\n                    padding: 0,\\r\\n                    margin: 0,\\r\\n                    border: 0,\\r\\n                    background: 'transparent',\\r\\n                    outline: 'none',\\r\\n                    fontFamily: 'Verdana',\\r\\n                    fontSize: 14\\r\\n                }}\\r\\n                value={this.state.value}\\r\\n                onChange={(e) => {\\r\\n                    this.setState({ value: e.target.value });\\r\\n                }}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Editor;\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/articles/content/simple-editor.tsx\n// module id = 62\n// module chunks = 1","import * as React from 'react';\r\n\r\nimport Grid, {\r\n    HeadersContainer, HeaderType, ICellRendererEvent, IHeaderRendererEvent, ISelectionRendererEvent\r\n} from 'react-bolivianite-grid';\r\n\r\nimport Theme from './grid-theme';\r\n\r\n\r\nexport class Example extends React.Component {\r\n    state = {\r\n        data: {} as {\r\n            [key: string]: string;\r\n        },\r\n        headers: new HeadersContainer({\r\n            columns: new Array(100).fill(null).map(() => ({})),\r\n            rows: new Array(200).fill(null).map(() => ({})),\r\n            columnWidth: 100,\r\n            rowHeight: 24,\r\n            headersHeight: 24,\r\n            headersWidth: 50\r\n        })\r\n    };\r\n\r\n    excelIndex(index: number) {\r\n        index++;\r\n        let c = '';\r\n\r\n        for (let a = 1, b = 26; (index -= a) >= 0; a = b, b *= 26) {\r\n            c = String.fromCharCode(~~((index % b) / a) + 65) + c;\r\n        }\r\n\r\n        return c;\r\n    }\r\n\r\n    renderCell = ({ style, columnIndex, rowIndex, source, theme }: ICellRendererEvent) => {\r\n        let key = `${rowIndex} x ${columnIndex}`;\r\n        let display = source[key] === void 0 ? key : source[key];\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    ...style,\r\n                    boxSizing: 'border-box',\r\n                    borderRight: `solid 1px ${theme.cellBorderColor}`,\r\n                    borderBottom: `solid 1px ${theme.cellBorderColor}`,\r\n                    padding: '0 3px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    color: theme.cellTextColor,\r\n                    background: (\r\n                        rowIndex % 2\r\n                            ? theme.cellBackgroundEven\r\n                            : theme.cellBackgroundOdd\r\n                    )\r\n                }}\r\n            >\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderHeader = ({ style, type, selection, viewIndex, theme }: IHeaderRendererEvent) => {\r\n        let rcolor = (\r\n            type === HeaderType.Row && selection\r\n                ? theme.headerBorderColorSelected\r\n                : theme.headerBorderColor\r\n        );\r\n\r\n        let bcolor = (\r\n            type === HeaderType.Column && selection\r\n                ? theme.headerBorderColorSelected\r\n                : theme.headerBorderColor\r\n        );\r\n\r\n        let nextStyle: React.CSSProperties = {\r\n            ...style,\r\n            boxSizing: 'border-box',\r\n            borderRight: `solid 1px ${rcolor}`,\r\n            borderBottom: `solid 1px ${bcolor}`,\r\n            padding: '0 3px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        };\r\n\r\n        if (selection) {\r\n            nextStyle.backgroundColor = theme.headerBackgroundColorSelected;\r\n        }\r\n\r\n        if (type === HeaderType.Row) {\r\n            nextStyle.justifyContent = 'flex-end';\r\n        }\r\n\r\n        return (\r\n            <div style={nextStyle}>\r\n                {\r\n                    type === HeaderType.Column && viewIndex != null\r\n                        ? this.excelIndex(viewIndex)\r\n                        : viewIndex\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSelection = ({ key, style, active, edit, theme }: ISelectionRendererEvent) => {\r\n        style.left--;\r\n        style.top--;\r\n        style.width++;\r\n        style.height++;\r\n\r\n        return (\r\n            <div\r\n                key={key}\r\n                style={{\r\n                    ...style,\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: (active || edit) ? theme.selectionBackgroundActive : theme.selectionBackground,\r\n                    border: active ? theme.selectionBorderActive : theme.selectionBorder\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                readOnly\r\n                headers={this.state.headers}\r\n                overscanRows={3}\r\n                source={this.state.data}\r\n                theme={Theme}\r\n                onRenderCell={this.renderCell}\r\n                onRenderHeader={this.renderHeader}\r\n                onRenderSelection={this.renderSelection}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/content/example-grid-simple.tsx","export * from './components';\r\nexport * from './models';\r\nimport { Grid } from './components';\r\n\r\nexport default Grid;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/index.tsx","export * from './grid';\r\nexport * from './resizer';\r\nexport * from './types';\r\nexport * from './scrollview';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/index.tsx","import * as React from 'react';\r\nimport { getScrollbarSize, getRelativePosition, render } from '../controllers';\r\n\r\nexport interface IScrollViewUpdateEvent {\r\n    scrollLeft: number;\r\n    scrollTop: number;\r\n    scrollWidth: number;\r\n    scrollHeight: number;\r\n    clientWidth: number;\r\n    clientHeight: number;\r\n}\r\n\r\nexport type TScrollViewPartial<T = any> = JSX.Element | ((props: T) => JSX.Element);\r\n\r\nexport interface IScrollViewThemingProps {\r\n    scrollbarWidth?: number;\r\n    scrollbarWidthMinimized?: number;\r\n    scrollbarTrackMinimum?: number;\r\n    scrollbarMinimizeDistance?: number;\r\n\r\n    className?: string;\r\n    classNameTrackCorner?: string;\r\n    classNameTrackRoot?: string;\r\n    classNameTrack?: string;\r\n    classNameThumb?: string;\r\n    classNameTrackRootRight?: string;\r\n    classNameTrackRight?: string;\r\n    classNameThumbRight?: string;\r\n    classNameTrackRootBottom?: string;\r\n    classNameTrackBottom?: string;\r\n    classNameThumbBottom?: string;\r\n\r\n    style?: React.CSSProperties;\r\n    styleTrackCorner?: React.CSSProperties;\r\n    styleTrackRoot?: React.CSSProperties;\r\n    styleTrack?: React.CSSProperties;\r\n    styleThumb?: React.CSSProperties;\r\n    styleTrackRootRight?: React.CSSProperties;\r\n    styleTrackRight?: React.CSSProperties;\r\n    styleThumbRight?: React.CSSProperties;\r\n    styleTrackRootBottom?: React.CSSProperties;\r\n    styleTrackBottom?: React.CSSProperties;\r\n    styleThumbBottom?: React.CSSProperties;\r\n}\r\n\r\nexport interface IScrollViewProps extends IScrollViewThemingProps {\r\n    middleLayer?: boolean;\r\n    height?: number | string;\r\n    width?: number | string;\r\n    lock?: 'x' | 'y';\r\n    scrollerProps?: React.HTMLProps<HTMLDivElement>;\r\n    renderAfter?: TScrollViewPartial<IScrollViewUpdateEvent>;\r\n    onScroll?: (event: IScrollViewUpdateEvent) => void;\r\n}\r\n\r\nexport class ScrollView extends React.Component<IScrollViewProps, any> {\r\n    state = {\r\n        xEnabled: false,\r\n        yEnabled: false,\r\n        minimized: true\r\n    };\r\n\r\n    private _scrollBarSize = getScrollbarSize();\r\n    private _a: HTMLDivElement;\r\n    private _r: HTMLDivElement;\r\n    private _x: HTMLDivElement;\r\n    private _y: HTMLDivElement;\r\n    private _taskResize: any = null;\r\n    private _xpos = 0;\r\n    private _ypos = 0;\r\n    private _xratio = 1;\r\n    private _yratio = 1;\r\n    private _xsize = 0; // internal\r\n    private _ysize = 0;\r\n    private _xlen = 0; // external\r\n    private _ylen = 0;\r\n    private _xmove = -1; // scroll moving start positions\r\n    private _xmoveScrollPos = 0;\r\n    private _ymove = -1;\r\n    private _ymoveScrollPos = 0;\r\n\r\n    constructor(p: IScrollViewProps, c: any) {\r\n        super(p, c);\r\n    }\r\n\r\n    public get minimized() {\r\n        return this._xmove === -1 && this._ymove === -1 && this.state.minimized;\r\n    }\r\n\r\n    public get scrollbarMinimizeDistance() {\r\n        return Math.max(0, this.props.scrollbarMinimizeDistance || 100);\r\n    }\r\n\r\n    public get scrollbarTrackMinimum() {\r\n        return Math.max(0, this.props.scrollbarTrackMinimum || 20);\r\n    }\r\n\r\n    public get scrollbarSize() {\r\n        return Math.max(0, this.props.scrollbarWidth || 0);\r\n    }\r\n\r\n    public get currentScrollbarSize() {\r\n        const size = (\r\n            this.minimized\r\n                ? this.props.scrollbarWidthMinimized\r\n                : this.props.scrollbarWidth\r\n        );\r\n\r\n        return Math.max(0, size || 0);\r\n    }\r\n\r\n    public get scrollLeft() {\r\n        return this._r.scrollLeft;\r\n    }\r\n\r\n    public set scrollLeft(v) {\r\n        this._r.scrollLeft = v;\r\n    }\r\n\r\n    public get scrollTop() {\r\n        return this._r.scrollTop;\r\n    }\r\n\r\n    public set scrollTop(v) {\r\n        this._r.scrollTop = v;\r\n    }\r\n\r\n    public get scrollWidth() {\r\n        return this._r.scrollWidth;\r\n    }\r\n\r\n    public get scrollHeight() {\r\n        return this._r.scrollHeight;\r\n    }\r\n\r\n    public get clientWidth() {\r\n        return this._a.clientWidth;\r\n    }\r\n\r\n    public get clientHeight() {\r\n        return this._a.clientHeight;\r\n    }\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._r = r;\r\n    }\r\n\r\n    private _onRefA = (a: HTMLDivElement) => {\r\n        this._a = a;\r\n    }\r\n\r\n    private _onRefX = (x: HTMLDivElement) => {\r\n        this._x = x;\r\n    }\r\n\r\n    private _onRefY = (y: HTMLDivElement) => {\r\n        this._y = y;\r\n    }\r\n\r\n    private _onScroll = (e: UIEvent) => {\r\n        if (e && this._r !== e.target) {\r\n            return;\r\n        }\r\n\r\n        if (e) {\r\n            this._updateScrollbars();\r\n        }\r\n\r\n        if (this.props.onScroll) {\r\n            this.props.onScroll(this._getUpdateEventObject());\r\n        }\r\n    }\r\n\r\n    private _onMouseDownX = (e: MouseEvent) => {\r\n        this._xmove = e.clientX;\r\n        this._xmoveScrollPos = this._r.scrollLeft;\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onMouseDownY = (e: MouseEvent) => {\r\n        this._ymove = e.clientY;\r\n        this._ymoveScrollPos = this._r.scrollTop;\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onMouseMove = (e: MouseEvent) => {\r\n        if (this._xmove > -1) {\r\n            this._r.scrollLeft = this._xmoveScrollPos + (e.clientX - this._xmove) / this._xratio;\r\n        }\r\n\r\n        if (this._ymove > -1) {\r\n            this._r.scrollTop = this._ymoveScrollPos + (e.clientY - this._ymove) / this._yratio;\r\n        }\r\n    }\r\n\r\n    private _onRootMouseMove = (e: React.MouseEvent<HTMLElement>) => {\r\n        let { x, y } = getRelativePosition(e.pageX, e.pageY, this._a);\r\n        let h = this._a.clientHeight;\r\n        let w = this._a.clientWidth;\r\n        let t = this.scrollbarMinimizeDistance;\r\n        let minimized = (\r\n            (this.props.lock && this.props.lock !== 'y' || w - x > t) &&\r\n            (this.props.lock && this.props.lock !== 'x' || h - y > t)\r\n        );\r\n\r\n        if (minimized !== this.state.minimized) {\r\n            this.setState({ minimized });\r\n        }\r\n    }\r\n\r\n    private _onRootMouseLeave = () => {\r\n        this.setState({ minimized: true });\r\n    }\r\n\r\n    private _onMouseUp = () => {\r\n        if (this._xmove === -1 && this._ymove === -1) {\r\n            return;\r\n        }\r\n\r\n        this._xmove = -1;\r\n        this._ymove = -1;\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _onScrollMouseY = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!this.state.yEnabled || !this._r || e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let cp = e.nativeEvent.offsetY;\r\n        let sp = this._ypos;\r\n        let ss = this._ysize;\r\n\r\n        if (cp < sp) {\r\n            this.scrollTop = Math.max(0, this.scrollTop - this.clientHeight);\r\n        } else if (cp > sp + ss) {\r\n            this.scrollTop = Math.min(this.scrollHeight, this.scrollTop + this.clientHeight);\r\n        }\r\n    }\r\n\r\n    private _onScrollMouseX = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!this.state.xEnabled || !this._r || e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let cp = e.nativeEvent.offsetX;\r\n        let sp = this._xpos;\r\n        let ss = this._xsize;\r\n\r\n        if (cp < sp) {\r\n            this.scrollLeft = Math.max(0, this.scrollLeft - this.clientWidth);\r\n        } else if (cp > sp + ss) {\r\n            this.scrollLeft = Math.min(this.scrollWidth, this.scrollLeft + this.clientWidth);\r\n        }\r\n    }\r\n\r\n    private _getUpdateEventObject(): IScrollViewUpdateEvent {\r\n        if (!this._r) {\r\n            return {\r\n                scrollLeft: 0,\r\n                scrollTop: 0,\r\n                scrollWidth: 0,\r\n                scrollHeight: 0,\r\n                clientWidth: 0,\r\n                clientHeight: 0\r\n            };\r\n        }\r\n\r\n        return {\r\n            scrollLeft: this.scrollLeft,\r\n            scrollTop: this.scrollTop,\r\n            scrollWidth: this.scrollWidth,\r\n            scrollHeight: this.scrollHeight,\r\n            clientWidth: this.clientWidth,\r\n            clientHeight: this.clientHeight\r\n        };\r\n    }\r\n\r\n    private _joinClassNames(...cn: string[]) {\r\n        return cn.map(v => (v || '').trim()).filter(v => !!v).join(' ');\r\n    }\r\n\r\n    private _joinStyles(...s: React.CSSProperties[]): React.CSSProperties {\r\n        return Object.assign({}, ...(s.map(v => v || {})));\r\n    }\r\n\r\n    private _getClassNames(type: 'Right' | 'Bottom') {\r\n        const p = this.props as any;\r\n        return {\r\n            classNameTrackRoot: this._joinClassNames(p.classNameTrackRoot, p[`classNameTrackRoot${type}`]),\r\n            classNameTrack: this._joinClassNames(p.classNameTrack, p[`classNameTrack${type}`]),\r\n            classNameThumb: this._joinClassNames(p.classNameThumb, p[`classNameThumb${type}`]),\r\n        };\r\n    }\r\n\r\n    private _getStyles(type: 'Right' | 'Bottom') {\r\n        const p = this.props as any;\r\n        return {\r\n            styleTrackRoot: this._joinStyles(p.styleTrackRoot, p[`styleTrackRoot${type}`]),\r\n            styleTrack: this._joinStyles(p.styleTrack, p[`styleTrack${type}`]),\r\n            styleThumb: this._joinStyles(p.styleThumb, p[`styleThumb${type}`]),\r\n        };\r\n    }\r\n\r\n    /** Calculates scrollbar size, position and scale ratio. Then updates scrollbars directly. */\r\n    private _updateScrollbars(cb?: () => void) {\r\n        let t = this._r;\r\n        let ss = this.scrollbarSize;\r\n        let sx = this.props.lock === 'x' ? 0 : ss;\r\n        let sy = this.props.lock === 'y' ? 0 : ss;\r\n        let sm = this.scrollbarTrackMinimum; // scrollbar minimum length\r\n\r\n        // size of the canvas\r\n        let c = t.children[0] as HTMLElement;\r\n        this._xlen = c.clientWidth + c.offsetLeft;\r\n        this._ylen = c.clientHeight + c.offsetTop;\r\n\r\n        let viewportWidth = t.clientWidth;\r\n        let viewportHeight = t.clientHeight;\r\n\r\n        this._xratio = viewportWidth === this._xlen ? 1 : Math.max(0, Math.min(1, (viewportWidth - ss) / this._xlen));\r\n        this._yratio = viewportHeight === this._ylen ? 1 : Math.max(0, Math.min(1, (viewportHeight - ss) / this._ylen));\r\n        this._xsize = Math.round(this._xratio * viewportWidth);\r\n        this._ysize = Math.round(this._yratio * viewportHeight);\r\n\r\n        if (this._xsize < sm) {\r\n            this._xratio = Math.max(0, Math.min(1, (viewportWidth - ss - (sm - this._xsize)) / this._xlen));\r\n            this._xsize = sm;\r\n        }\r\n\r\n        if (this._ysize < sm) {\r\n            this._yratio = Math.max(0, Math.min(1, (viewportHeight - ss - (sm - this._ysize)) / this._ylen));\r\n            this._ysize = sm;\r\n        }\r\n\r\n        this._xpos = Math.round(t.scrollLeft / (t.scrollWidth - viewportWidth) * (viewportWidth - this._xsize - sx));\r\n        this._ypos = Math.round(t.scrollTop / (t.scrollHeight - viewportHeight) * (viewportHeight - this._ysize - sy));\r\n\r\n        this._x.style.left = `${this._xpos}px`;\r\n        this._y.style.top = `${this._ypos}px`;\r\n        this._x.style.width = `${this._xsize}px`;\r\n        this._y.style.height = `${this._ysize}px`;\r\n\r\n        let xEnabled = this.state.xEnabled;\r\n        let yEnabled = this.state.yEnabled;\r\n\r\n        if (this._xratio === 1 && this.state.xEnabled) {\r\n            xEnabled = false;\r\n        } else if (this._xratio < 1 && !this.state.xEnabled) {\r\n            xEnabled = true;\r\n        }\r\n\r\n        if (this._yratio === 1 && this.state.yEnabled) {\r\n            yEnabled = false;\r\n        } else if (this._yratio < 1 && !this.state.yEnabled) {\r\n            yEnabled = true;\r\n        }\r\n\r\n        this.setState({ xEnabled, yEnabled }, cb);\r\n    }\r\n\r\n    private _renderBody() {\r\n        let ap: any = {};\r\n\r\n        if (this.props.lock === 'x') {\r\n            ap['overflowY'] = 'hidden';\r\n        } else if (this.props.lock === 'y') {\r\n            ap['overflowX'] = 'hidden';\r\n        }\r\n\r\n        return (\r\n            <div\r\n                {...this.props.scrollerProps}\r\n                ref={this._onRef}\r\n                style={{\r\n                    ...(this.props.scrollerProps && this.props.scrollerProps.style || {}),\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    top: 0,\r\n                    right: this.props.lock === 'x' ? 0 : -this._scrollBarSize,\r\n                    bottom: this.props.lock === 'y' ? 0 : -this._scrollBarSize,\r\n                    overflow: 'scroll',\r\n                    boxSizing: 'content-box',\r\n                    ...ap\r\n                }}\r\n            >\r\n                {\r\n                    this.props.middleLayer\r\n                        ? <div>{this.props.children}</div>\r\n                        : this.props.children\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderXScrollbar(scrollSize: number) {\r\n        const { classNameThumb, classNameTrack, classNameTrackRoot } = this._getClassNames('Bottom');\r\n        const { styleThumb, styleTrack, styleTrackRoot } = this._getStyles('Bottom');\r\n\r\n        return (\r\n            <div\r\n                className={classNameTrackRoot}\r\n                style={{\r\n                    ...styleTrackRoot,\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: this.props.lock === 'x' ? 0 : scrollSize,\r\n                    bottom: 0,\r\n                    height: scrollSize,\r\n                    display: !this.state.xEnabled || this.props.lock === 'y' ? 'none' : '',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                <div\r\n                    className={classNameTrack}\r\n                    style={{\r\n                        ...styleTrack,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    onMouseDown={this._onScrollMouseX}\r\n                />\r\n                <div\r\n                    className={classNameThumb}\r\n                    ref={this._onRefX}\r\n                    style={{\r\n                        ...styleThumb,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        height: '100%'\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderYScrollbar(scrollSize: number) {\r\n        const { classNameThumb, classNameTrack, classNameTrackRoot } = this._getClassNames('Right');\r\n        const { styleThumb, styleTrack, styleTrackRoot } = this._getStyles('Right');\r\n\r\n        return (\r\n            <div\r\n                className={classNameTrackRoot}\r\n                style={{\r\n                    ...styleTrackRoot,\r\n                    position: 'absolute',\r\n                    right: 0,\r\n                    bottom: this.props.lock === 'y' ? 0 : scrollSize,\r\n                    top: 0,\r\n                    width: scrollSize,\r\n                    display: !this.state.yEnabled || this.props.lock === 'x' ? 'none' : '',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                <div\r\n                    className={classNameTrack}\r\n                    style={{\r\n                        ...styleTrack,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    onMouseDown={this._onScrollMouseY}\r\n                />\r\n                <div\r\n                    className={classNameThumb}\r\n                    ref={this._onRefY}\r\n                    style={{\r\n                        ...styleThumb,\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        width: '100%'\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderZScrollbar(scrollSize: number) {\r\n        return (\r\n            <div\r\n                className={this._joinClassNames(\r\n                    this.props.classNameTrackRoot,\r\n                    this.props.classNameTrackCorner\r\n                )}\r\n                style={{\r\n                    ...(this._joinStyles(\r\n                        this.props.styleTrackRoot || {},\r\n                        this.props.styleTrackCorner || {}\r\n                    )),\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    height: scrollSize,\r\n                    width: scrollSize,\r\n                    display: (\r\n                        (\r\n                            (!this.state.xEnabled && !this.state.yEnabled) ||\r\n                            (this.props.lock === 'x' || this.props.lock === 'y')\r\n                        )\r\n                            ? 'none'\r\n                            : ''\r\n                    ),\r\n                    zIndex: 1\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.setState({\r\n            scrollHeight: this._r.offsetHeight - this._r.clientHeight,\r\n            scrollWidth: this._r.offsetWidth - this._r.clientWidth\r\n        });\r\n\r\n        this._r.addEventListener('scroll', this._onScroll);\r\n        this._x.addEventListener('mousedown', this._onMouseDownX);\r\n        this._y.addEventListener('mousedown', this._onMouseDownY);\r\n        window.addEventListener('mousemove', this._onMouseMove);\r\n        window.addEventListener('mouseup', this._onMouseUp);\r\n\r\n        let t = this._r;\r\n        let c = t.children[0] as HTMLElement;\r\n\r\n        let rootWidth = t.clientWidth;\r\n        let rootHeight = t.clientHeight;\r\n        let canvasWidth = c ? c.clientWidth + c.offsetLeft : 0;\r\n        let canvasHeight = c ? c.clientHeight + c.offsetTop : 0;\r\n\r\n        this._taskResize = setInterval(() => {\r\n            let newRootWidth = t.clientWidth;\r\n            let newRootHeight = t.clientHeight;\r\n            let newCanvasWidth = c ? c.clientWidth + c.offsetLeft : 0;\r\n            let newCanvasHeight = c ? c.clientHeight + c.offsetTop : 0;\r\n\r\n            if (\r\n                newRootWidth !== rootWidth || newRootHeight !== rootHeight ||\r\n                newCanvasWidth !== canvasWidth || newCanvasHeight !== canvasHeight\r\n            ) {\r\n                rootWidth = newRootWidth;\r\n                rootHeight = newRootHeight;\r\n                canvasWidth = newCanvasWidth;\r\n                canvasHeight = newCanvasHeight;\r\n                this._updateScrollbars();\r\n                this._onScroll(null);\r\n            }\r\n        }, 20);\r\n\r\n        this._updateScrollbars(() => {\r\n            if (this.props.onScroll) {\r\n                this.props.onScroll(this._getUpdateEventObject());\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._r.removeEventListener('scroll', this._onScroll);\r\n        this._x.removeEventListener('mousedown', this._onMouseDownX);\r\n        this._y.removeEventListener('mousedown', this._onMouseDownY);\r\n        window.removeEventListener('mousemove', this._onMouseMove);\r\n        window.removeEventListener('mouseup', this._onMouseUp);\r\n        clearInterval(this._taskResize);\r\n    }\r\n\r\n    public render() {\r\n        let { currentScrollbarSize, props } = this;\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                ref={this._onRefA}\r\n                style={{\r\n                    height: props.height == void 0 ? '100%' : props.height,\r\n                    width: props.width == void 0 ? '100%' : props.width,\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    ...this.props.style\r\n                }}\r\n                onMouseMove={this._onRootMouseMove}\r\n                onMouseLeave={this._onRootMouseLeave}\r\n            >\r\n                {this._renderBody()}\r\n                {render(props.renderAfter, () => this._getUpdateEventObject())}\r\n                {this._renderXScrollbar(currentScrollbarSize)}\r\n                {this._renderYScrollbar(currentScrollbarSize)}\r\n                {this._renderZScrollbar(currentScrollbarSize)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollView;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/scrollview.tsx","export * from './debounce';\r\nexport * from './controller';\r\nexport * from './keyboard';\r\nexport * from './mouse';\r\nexport * from './renderthrottler';\r\nexport * from './scrollbar-size';\r\nexport * from './shallow';\r\nexport * from './relative-position';\r\nexport * from './render';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/index.ts","export enum HeaderType {\r\n    Row = 1,\r\n    Column\r\n}\r\n\r\nexport interface IHeader {\r\n    /** Unique header identifier for **all** headers in container. Do not edit. Assigned by header container if not provided. */\r\n    $id?: number | string;\r\n    /** List of children headers. */\r\n    $children?: IHeader[];\r\n    /** Size of current header. */\r\n    $size?: number;\r\n    /** Filter flag. */\r\n    $collapsed?: boolean;\r\n\r\n    [prop: string]: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/header.ts","export class RenderThrottler {\r\n    private _ids = 0;\r\n    private _tasks: {\r\n        [id: string]: Function\r\n    } = {};\r\n    private _active = true;\r\n\r\n    constructor() {\r\n        window.requestAnimationFrame(this._step);\r\n    }\r\n\r\n    private _step = () => {\r\n        let c = 0;\r\n        for (let id of Object.keys(this._tasks)) {\r\n            let f = this._tasks[id];\r\n\r\n            if (f) {\r\n                f();\r\n            }\r\n\r\n            delete this._tasks[id];\r\n            c++;\r\n        }\r\n\r\n        if (!c) {\r\n            this._active = false;\r\n        } else {\r\n            window.requestAnimationFrame(this._step);\r\n        }\r\n    }\r\n\r\n    public create() {\r\n        const id = this._ids++;\r\n        return (fn: Function) => {\r\n            this._tasks[id] = fn;\r\n\r\n            if (!this._active) {\r\n                this._active = true;\r\n                window.requestAnimationFrame(this._step);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default RenderThrottler;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/renderthrottler.ts","import * as React from 'react';\r\n\r\nexport interface EditorProps {\r\n    initialValue: string;\r\n    update: (v: any) => void;\r\n}\r\n\r\nexport class Editor extends React.PureComponent<EditorProps, any> {\r\n    state = {\r\n        value: this.props.initialValue == null ? '' : this.props.initialValue\r\n    };\r\n\r\n    private _ref: HTMLInputElement;\r\n\r\n    private _onRef = (r: any) => {\r\n        this._ref = r;\r\n    }\r\n\r\n    public componentDidMount() {\r\n        if (!this._ref) {\r\n            return;\r\n        }\r\n\r\n        this._ref.focus();\r\n        this._ref.select();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        if (this.state.value !== this.props.initialValue) {\r\n            this.props.update(this.state.value);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <input\r\n                ref={this._onRef}\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    padding: 0,\r\n                    margin: 0,\r\n                    border: 0,\r\n                    background: 'transparent',\r\n                    outline: 'none',\r\n                    fontFamily: 'Verdana',\r\n                    fontSize: 14\r\n                }}\r\n                value={this.state.value}\r\n                onChange={(e) => {\r\n                    this.setState({ value: e.target.value });\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/articles/content/simple-editor.tsx","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render((\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n), document.getElementsByTagName('app')[0]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.tsx","export * from './toolbar';\r\nexport * from './navigation-item';\r\nexport * from './github-icon';\r\nexport * from './app-max-width';\r\nexport * from './page';\r\nexport * from './page-articles';\r\nexport * from './code';\r\nexport * from './markdown';\r\nexport * from './code-view';\r\nexport * from './split-view';\r\nexport * from './scroll-view';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ui/index.tsx"],"sourceRoot":""}