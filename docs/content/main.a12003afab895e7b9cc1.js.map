{"version":3,"sources":["webpack:///../src/models/index.ts","webpack:///../src/components/index.tsx","webpack:///../src/components/scrollview.tsx","webpack:///../src/controllers/index.ts","webpack:///../src/models/header.ts","webpack:///./src/index.tsx","webpack:///./src/components/app.tsx","webpack:///./src/components/app.scss","webpack:///../src/controllers/controller.ts","webpack:///./src/components/scrollview.tsx","webpack:///../src/index.tsx","webpack:///../src/components/grid.tsx","webpack:///../src/controllers/debounce.ts","webpack:///../src/controllers/keyboard.ts","webpack:///../src/controllers/mouse.ts","webpack:///../src/models/container.ts","webpack:///../src/controllers/renderthrottler.ts","webpack:///../src/controllers/scrollbar-size.ts","webpack:///../src/controllers/shallow.ts","webpack:///../src/controllers/relative-position.ts","webpack:///../src/components/resizer.tsx","webpack:///./src/components/scrollview.scss","webpack:///./src/components/index.tsx"],"names":["__export","__webpack_require__","React","controllers_1","ScrollView","_super","p","c","_this","call","this","state","xEnabled","yEnabled","minimized","_sh","root","Shallow","body","bodyPadding","xRoot","xTrack","xThumb","yRoot","yTrack","yThumb","zRoot","zTrack","_scrollBarSize","getScrollbarSize","_taskResize","_xpos","_ypos","_xratio","_yratio","_xsize","_ysize","_xlen","_ylen","_xmove","_xmoveScrollPos","_ymove","_ymoveScrollPos","_onRef","r","_r","_onRefA","a","_a","_onRefX","x","_x","_onRefY","y","_y","_onScroll","e","target","_updateScrollbars","props","onUpdate","_getUpdateEventObject","_onMouseDownX","clientX","scrollLeft","preventDefault","_onMouseDownY","clientY","scrollTop","_onMouseMove","_onRootMouseMove","_b","getRelativePosition","pageX","pageY","h","clientHeight","w","clientWidth","t","hover","lock","setState","_onRootMouseLeave","_onMouseUp","_onScrollMouseY","button","cp","nativeEvent","offsetY","sp","ss","Math","max","min","scrollHeight","_onScrollMouseX","offsetX","scrollWidth","__extends","Object","defineProperty","prototype","theme","classNames","styles","scrollSize","scrollSizeMinimized","scrollMinimum","trackRoot","track","thumb","bottomThumb","bottomTrack","rightTrack","rightThumb","scrollCorner","_theme","size","v","cb","sx","sy","sm","children","viewportWidth","viewportHeight","round","style","left","top","width","height","_renderPartial","jsx","getProps","cloneElement","Children","only","_renderBody","paddingSize","ap","createElement","__assign","scrollerProps","ref","position","right","bottom","overflow","boxSizing","display","paddingRight","paddingBottom","_renderXScrollbar","className","background","trackBackground","zIndex","filter","join","onMouseDown","xBackgroundContent","thumbBackground","xScrollContent","_renderYScrollbar","yBackgroundContent","yScrollContent","_renderZScrollbar","pointerEvents","zBackgroundContent","componentDidMount","offsetHeight","offsetWidth","addEventListener","window","setInterval","nw","nh","componentWillUnmount","removeEventListener","clearInterval","render","scrollbarSize","onMouseMove","onMouseLeave","after","Component","exports","default","HeaderType","ReactDOM","components_1","App","document","getElementsByTagName","Style","module","IS_MACOS","navigator","platform","slice","Controller","_props","_state","_getModifiers","ctrlKey","altKey","shiftKey","cmdKey","getModifierState","macCmdKey","_clampAddress","column","row","rows","columns","_splitSelection","selection","prev","last","pop","_getSelectedCells","map","_i","selection_1","length","rLast","cLast","key","keys","sort","k","_request","getState","react_bolivianite_grid_1","THEME","Grid","PropTypes","scrollview_1","models_1","_shallow","colHeaders","rowHeaders","crnHeaders","_blockContextMenu","_onContextMenuListener","_rt","RenderThrottler","_scrollUpdateTrottled","create","_ref","_refView","_scrollerProps","willChange","_lastView","_lastOverscan","_focused","_kbCtr","_msCtr","_currentEdit","viewHeight","viewWidth","active","edit","resizeHeaderPreview","resizeLevelPreview","_onRefView","_onBlur","_onFocus","_onScrollViewUpdate","_onKeyDown","persist","keydown","_onMouseDown","Number","currentTarget","getAttribute","focus","mousedown","_onMouseDownHeader","type","id","headers","getHeader","onHeaderRightClick","header","event","defaultPrevented","indices","getHeaderLeaves","getViewIndex","apply","headerdown","_onMouseEnter","mouseenter","rect","getBoundingClientRect","rootleave","_onRootMouseEnter","rootenter","_onRootMouseDown","_renderHeaderContainers","headersHeight","headersWidth","_renderHeaders","Column","Row","gridCorner","_renderResizing","openEditor","cell","closeEditor","commit","callback","col","nextValue","updatedValue","value","_onAfterUpdate","debounce","bind","editor","focused","_columnCount","_rowCount","view","readOnly","onScroll","scrollTo","onUpdateSelection","KeyboardController","onCloseEditor","onOpenEditor","onCopy","cells","withHeaders","onPaste","clipboard","getAllSelectedCells","getLastSelectedCells","onNullify","onRemove","onSpace","MouseController","onRightClick","getChildContext","grid","_onAutoMeasureApply","result","behavior","columnHeaders","result_1","rowIndex","columnIndex","ch","getManualResized","$size","getHeaderType","rh","onHeaderResize","concat","_onAutoMeasure","onAutoMeasure","firstColumn","firstRow","lastRow","lastColumn","push","source","columnHeader","rowHeader","_createView","sl","st","vw","_headersWidth","vh","_headersHeight","rowsHeight","columnsWidth","colIndex","_c","rhLast","chLast","getPosition","_createOverscan","overscanRows","overscanColumns","_prepareCellProps","_renderCell","onRenderCell","x-row","x-col","onMouseEnter","_renderEditor","onRenderEditor","cellProps","close","update","_renderData","columnCount","rowCount","irlen","iclen","Array","i","ir","ic","_renderHeader","out","index","scrollPos","parent","$id","$children","level","getLevel","getLeftLevelPosition","getLeftLevelWidth","leftLevels","getTopLevelPosition","getTopLevelHeight","topLevels","s","headerParent","getParent","onRenderHeader","parentHeader","viewIndex","x-type","x-id","isRow","first","len","ix","Fragment","orientation","onRenderResizer","styleInitial","styleChanged","change","headerType","headerPosition","resizer","_renderSelections","l","reduce","n","onRenderSelection","ax","blur","rowPos","rowSize","colPos","colSize","resizeHeaders","resizeLevel","onHeaderLevelResize","autoMeasure","batch","batch_1","list_1","previewResizeHeader","previewResizeLevel","componentDidUpdate","dispose","tabIndex","onBlur","onFocus","userSelect","outline","onKeyDown","marginLeft","marginTop","childContextTypes","object","PureComponent","time","fn","task","args","arguments","clearTimeout","setTimeout","_paste","clipboardData","_isInput","keyCode","_moveSelection","direction","distance","nextScroll","nextActive","nextSelection","next","delta","newColumn","newWidth","newRow","newHeight","lastPos","_onTab","insideSelection","_onEnter","_onSpace","_onPageUpDown","pageColumns","pageRows","_onHomeEnd","_onArrows","_onCopy","_onNullify","_onRemove","rowMap","colMap","forEach","_onSelectAll","_onData","_lastMouseDown","_down","_scrollBySelect","_scrollTask","_autoscroll","scroll","_mouseup","_mouseSelectFromActive","clickInEditor","Date","now","err","console","log","header_1","HeadersContainer","_idCounter","_idMap","viewColumns","viewRows","viewLeftLevels","viewTopLevels","types","positions","levels","parents","manualResized","_create","_calcPosition","_calcLevels","toJSON","list","assignParent","$collapsed","_createClone","_applyHeaderLevel","seek","_applyParentPosition","_proceedHeaders","from","cursor","parent_1","columnWidth","rowHeight","_getLevelPosition","_getLeaves","_getResizeList","clamp","prevSize","leaves","d","floor","m","_getHeaderAddress","reverse","_mapBranch","address","_recalcHeaders","_updateHeaders","branchMap","sourceList","branchList","branch","split","updateMap","getSource","updateFilter","updateHeaders","updates","mapColumns","mapRows","branchName","u","isManual_1","Infinity","_ids","_tasks","_active","_step","f","requestAnimationFrame","appendChild","removeChild","is","nextKeys","prevKeys","prevKeys_1","hasOwnProperty","element","parentElement","offsetLeft","offsetTop","offsetParent","Resizer","_moving","_moveListener","_upListener","_escListener","_moved","_container","_unbind","movingType","_lastClick","_grid","start","_onChange","ev","_onMove","context","contextTypes"],"mappings":"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","file":"content/main.a12003afab895e7b9cc1.js","sourcesContent":["export * from './header';\r\nexport * from './container';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/index.ts","export * from './grid';\r\nexport * from './resizer';\r\nexport * from './types';\r\nexport * from './scrollview';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/index.tsx","import * as React from 'react';\r\nimport { getScrollbarSize, getRelativePosition, Shallow } from '../controllers';\r\n\r\nexport interface IScrollViewUpdateEvent {\r\n    scrollLeft: number;\r\n    scrollTop: number;\r\n    scrollWidth: number;\r\n    scrollHeight: number;\r\n    clientWidth: number;\r\n    clientHeight: number;\r\n}\r\n\r\nexport type TScrollViewPartial<T = any> = JSX.Element | ((props: T) => JSX.Element);\r\n\r\nexport interface IScrollViewThemeClassNames {\r\n    trackRoot?: string;\r\n    track?: string;\r\n    thumb?: string;\r\n    bottomTrack?: string;\r\n    bottomThumb?: string;\r\n    rightTrack?: string;\r\n    rightThumb?: string;\r\n    scrollCorner?: string;\r\n}\r\n\r\nexport interface IScrollViewThemeStyles {\r\n    trackRoot?: React.CSSProperties;\r\n    track?: React.CSSProperties;\r\n    thumb?: React.CSSProperties;\r\n    bottomTrack?: React.CSSProperties;\r\n    bottomThumb?: React.CSSProperties;\r\n    rightTrack?: React.CSSProperties;\r\n    rightThumb?: React.CSSProperties;\r\n    scrollCorner?: React.CSSProperties;\r\n}\r\n\r\nexport interface IScrollViewTheme {\r\n    scrollSize?: number;\r\n    scrollSizeMinimized?: number;\r\n    scrollMinimum?: number;\r\n    trackBackground?: string;\r\n    thumbBackground?: string;\r\n    classNames?: IScrollViewThemeClassNames;\r\n    styles?: IScrollViewThemeStyles;\r\n}\r\n\r\nexport interface IScrollViewProps {\r\n    height?: number | string;\r\n    width?: number | string;\r\n    /** If defined scrollbars will be rendered over content. No padding for scrollbars. Value defines hover detect size. */\r\n    hover?: number;\r\n    /** If defined - scrollbar will br enabled only for x or y axis */\r\n    lock?: 'x' | 'y';\r\n    /** Css props passed to scroller element */\r\n    scrollerProps?: React.HTMLProps<HTMLDivElement>;\r\n\r\n    after?: TScrollViewPartial<IScrollViewUpdateEvent>;\r\n\r\n    theme?: IScrollViewTheme;\r\n\r\n    xScrollContent?: TScrollViewPartial;\r\n    xBackgroundContent?: TScrollViewPartial;\r\n\r\n    yScrollContent?: TScrollViewPartial;\r\n    yBackgroundContent?: TScrollViewPartial;\r\n\r\n    zBackgroundContent?: TScrollViewPartial;\r\n\r\n    onUpdate?: (event: IScrollViewUpdateEvent) => void;\r\n}\r\n\r\nexport class ScrollView extends React.Component<IScrollViewProps, any> {\r\n    state = {\r\n        xEnabled: false,\r\n        yEnabled: false,\r\n        minimized: true\r\n    };\r\n\r\n    private _sh = {\r\n        root: Shallow<React.CSSProperties>(),\r\n        body: Shallow<React.CSSProperties>(),\r\n        bodyPadding: Shallow<React.CSSProperties>(),\r\n        xRoot: Shallow<React.CSSProperties>(),\r\n        xTrack: Shallow<React.CSSProperties>(),\r\n        xThumb: Shallow<React.CSSProperties>(),\r\n        yRoot: Shallow<React.CSSProperties>(),\r\n        yTrack: Shallow<React.CSSProperties>(),\r\n        yThumb: Shallow<React.CSSProperties>(),\r\n        zRoot: Shallow<React.CSSProperties>(),\r\n        zTrack: Shallow<React.CSSProperties>(),\r\n    };\r\n\r\n    private _scrollBarSize = getScrollbarSize();\r\n    private _a: HTMLDivElement;\r\n    private _r: HTMLDivElement;\r\n    private _x: HTMLDivElement;\r\n    private _y: HTMLDivElement;\r\n    private _taskResize: any = null;\r\n    private _xpos = 0;\r\n    private _ypos = 0;\r\n    private _xratio = 1;\r\n    private _yratio = 1;\r\n    private _xsize = 0; // internal\r\n    private _ysize = 0;\r\n    private _xlen = 0; // external\r\n    private _ylen = 0;\r\n    private _xmove = -1; // scroll moving start positions\r\n    private _xmoveScrollPos = 0;\r\n    private _ymove = -1;\r\n    private _ymoveScrollPos = 0;\r\n\r\n    constructor(p: IScrollViewProps, c: any) {\r\n        super(p, c);\r\n    }\r\n\r\n    private get _theme() {\r\n        let theme = this.props.theme || {};\r\n        theme.classNames = theme.classNames || {};\r\n        theme.styles = theme.styles || {};\r\n        theme.scrollSize = theme.scrollSize || 17;\r\n        theme.scrollSizeMinimized = theme.scrollSizeMinimized || 5;\r\n        theme.scrollMinimum = theme.scrollMinimum || 20;\r\n        theme.styles.trackRoot = theme.styles.trackRoot || {};\r\n        theme.styles.track = theme.styles.track || {};\r\n        theme.styles.thumb = theme.styles.thumb || {};\r\n        theme.styles.bottomThumb = theme.styles.bottomThumb || {};\r\n        theme.styles.bottomTrack = theme.styles.bottomTrack || {};\r\n        theme.styles.rightTrack = theme.styles.rightTrack || {};\r\n        theme.styles.rightThumb = theme.styles.rightThumb || {};\r\n        theme.styles.scrollCorner = theme.styles.scrollCorner || {};\r\n        return theme;\r\n    }\r\n\r\n    public get size() {\r\n        return this.props.hover ? 0 : Math.max(0, this._theme.scrollSize || 0);\r\n    }\r\n\r\n    public get scrollbarSize() {\r\n        const size = (\r\n            this.props.hover && this.state.minimized\r\n                ? this._theme.scrollSizeMinimized\r\n                : this._theme.scrollSize\r\n        );\r\n\r\n        return Math.max(0, size || 0);\r\n    }\r\n\r\n    public get scrollLeft() {\r\n        return this._r.scrollLeft;\r\n    }\r\n\r\n    public set scrollLeft(v) {\r\n        this._r.scrollLeft = v;\r\n    }\r\n\r\n    public get scrollTop() {\r\n        return this._r.scrollTop;\r\n    }\r\n\r\n    public set scrollTop(v) {\r\n        this._r.scrollTop = v;\r\n    }\r\n\r\n    public get scrollWidth() {\r\n        let size = this.props.lock === 'x' ? 0 : this.size;\r\n        return this._r.scrollWidth - (this.props.hover ? 0 : size);\r\n    }\r\n\r\n    public get scrollHeight() {\r\n        let size = this.props.lock === 'y' ? 0 : this.size;\r\n        return this._r.scrollHeight - (this.props.hover ? 0 : size);\r\n    }\r\n\r\n    public get clientWidth() {\r\n        let size = this.props.lock === 'x' ? 0 : this.size;\r\n        return this._a.clientWidth - (this.props.hover ? 0 : size);\r\n    }\r\n\r\n    public get clientHeight() {\r\n        let size = this.props.lock === 'y' ? 0 : this.size;\r\n        return this._a.clientHeight - (this.props.hover ? 0 : size);\r\n    }\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._r = r;\r\n    }\r\n\r\n    private _onRefA = (a: HTMLDivElement) => {\r\n        this._a = a;\r\n    }\r\n\r\n    private _onRefX = (x: HTMLDivElement) => {\r\n        this._x = x;\r\n    }\r\n\r\n    private _onRefY = (y: HTMLDivElement) => {\r\n        this._y = y;\r\n    }\r\n\r\n    private _onScroll = (e: UIEvent) => {\r\n        if (e && this._r !== e.target) {\r\n            return;\r\n        }\r\n\r\n        if (e) {\r\n            this._updateScrollbars();\r\n        }\r\n\r\n        if (this.props.onUpdate) {\r\n            this.props.onUpdate(this._getUpdateEventObject());\r\n        }\r\n    }\r\n\r\n    private _onMouseDownX = (e: MouseEvent) => {\r\n        this._xmove = e.clientX;\r\n        this._xmoveScrollPos = this._r.scrollLeft;\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onMouseDownY = (e: MouseEvent) => {\r\n        this._ymove = e.clientY;\r\n        this._ymoveScrollPos = this._r.scrollTop;\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onMouseMove = (e: MouseEvent) => {\r\n        if (this._xmove > -1) {\r\n            this._r.scrollLeft = this._xmoveScrollPos + (e.clientX - this._xmove) / this._xratio;\r\n        }\r\n\r\n        if (this._ymove > -1) {\r\n            this._r.scrollTop = this._ymoveScrollPos + (e.clientY - this._ymove) / this._yratio;\r\n        }\r\n    }\r\n\r\n    private _onRootMouseMove = (e: React.MouseEvent<HTMLElement>) => {\r\n        let { x, y } = getRelativePosition(e.pageX, e.pageY, this._a);\r\n        let h = this._a.clientHeight;\r\n        let w = this._a.clientWidth;\r\n        let t = this.props.hover;\r\n        let minimized = (\r\n            (this.props.lock && this.props.lock !== 'y' || w - x > t) &&\r\n            (this.props.lock && this.props.lock !== 'x' || h - y > t)\r\n        );\r\n\r\n        if (minimized !== this.state.minimized) {\r\n            this.setState({ minimized });\r\n        }\r\n    }\r\n\r\n    private _onRootMouseLeave = () => {\r\n        this.setState({ minimized: true });\r\n    }\r\n\r\n    private _onMouseUp = () => {\r\n        this._xmove = -1;\r\n        this._ymove = -1;\r\n    }\r\n\r\n    private _onScrollMouseY = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!this.state.yEnabled || !this._r || e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let cp = e.nativeEvent.offsetY;\r\n        let sp = this._ypos;\r\n        let ss = this._ysize;\r\n\r\n        if (cp < sp) {\r\n            this.scrollTop = Math.max(0, this.scrollTop - this.clientHeight);\r\n        } else if (cp > sp + ss) {\r\n            this.scrollTop = Math.min(this.scrollHeight, this.scrollTop + this.clientHeight);\r\n        }\r\n    }\r\n\r\n    private _onScrollMouseX = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!this.state.xEnabled || !this._r || e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let cp = e.nativeEvent.offsetX;\r\n        let sp = this._xpos;\r\n        let ss = this._xsize;\r\n\r\n        if (cp < sp) {\r\n            this.scrollLeft = Math.max(0, this.scrollLeft - this.clientWidth);\r\n        } else if (cp > sp + ss) {\r\n            this.scrollLeft = Math.min(this.scrollWidth, this.scrollLeft + this.clientWidth);\r\n        }\r\n    }\r\n\r\n    private _getUpdateEventObject(): IScrollViewUpdateEvent {\r\n        if (!this._r) {\r\n            return {\r\n                scrollLeft: 0,\r\n                scrollTop: 0,\r\n                scrollWidth: 0,\r\n                scrollHeight: 0,\r\n                clientWidth: 0,\r\n                clientHeight: 0\r\n            };\r\n        }\r\n\r\n        return {\r\n            scrollLeft: this.scrollLeft,\r\n            scrollTop: this.scrollTop,\r\n            scrollWidth: this.scrollWidth,\r\n            scrollHeight: this.scrollHeight,\r\n            clientWidth: this.clientWidth,\r\n            clientHeight: this.clientHeight\r\n        };\r\n    }\r\n\r\n    /** Calculates scrollbar size, position and scale ratio. Then updates scrollbars directly. */\r\n    private _updateScrollbars(cb?: () => void) {\r\n        let t = this._r;\r\n        let ss = this.size;\r\n        let sx = this.props.lock === 'x' ? 0 : ss;\r\n        let sy = this.props.lock === 'y' ? 0 : ss;\r\n        let sm = this._theme.scrollMinimum; // scrollbar minimum length\r\n\r\n        // size of the canvas\r\n        this._xlen = t.children[0].clientWidth;\r\n        this._ylen = t.children[0].clientHeight;\r\n\r\n        let viewportWidth = t.clientWidth;\r\n        let viewportHeight = t.clientHeight;\r\n\r\n        this._xratio = Math.max(0, Math.min(1, (viewportWidth - ss) / this._xlen));\r\n        this._yratio = Math.max(0, Math.min(1, (viewportHeight - ss) / this._ylen));\r\n        this._xsize = Math.round(this._xratio * viewportWidth);\r\n        this._ysize = Math.round(this._yratio * viewportHeight);\r\n\r\n        if (this._xsize < sm) {\r\n            this._xratio = Math.max(0, Math.min(1, (viewportWidth - ss - (sm - this._xsize)) / this._xlen));\r\n            this._xsize = sm;\r\n        }\r\n\r\n        if (this._ysize < sm) {\r\n            this._yratio = Math.max(0, Math.min(1, (viewportHeight - ss - (sm - this._ysize)) / this._ylen));\r\n            this._ysize = sm;\r\n        }\r\n\r\n        this._xpos = Math.round(t.scrollLeft / (t.scrollWidth - viewportWidth) * (viewportWidth - this._xsize - sx));\r\n        this._ypos = Math.round(t.scrollTop / (t.scrollHeight - viewportHeight) * (viewportHeight - this._ysize - sy));\r\n\r\n        this._x.style.left = `${this._xpos}px`;\r\n        this._y.style.top = `${this._ypos}px`;\r\n        this._x.style.width = `${this._xsize}px`;\r\n        this._y.style.height = `${this._ysize}px`;\r\n\r\n        let xEnabled = this.state.xEnabled;\r\n        let yEnabled = this.state.yEnabled;\r\n\r\n        if (this._xratio === 1 && this.state.xEnabled) {\r\n            xEnabled = false;\r\n        } else if (this._xratio < 1 && !this.state.xEnabled) {\r\n            xEnabled = true;\r\n        }\r\n\r\n        if (this._yratio === 1 && this.state.yEnabled) {\r\n            yEnabled = false;\r\n        } else if (this._yratio < 1 && !this.state.yEnabled) {\r\n            yEnabled = true;\r\n        }\r\n\r\n        this.setState({ xEnabled, yEnabled }, cb);\r\n    }\r\n\r\n    private _renderPartial(jsx: JSX.Element | ((props?: any) => JSX.Element), getProps?: () => any) {\r\n        if (!jsx) {\r\n            return jsx;\r\n        }\r\n\r\n        const props = getProps ? getProps() : {};\r\n        return typeof jsx === 'function' ? jsx(props) : React.cloneElement(React.Children.only(jsx), props);\r\n    }\r\n\r\n    private _renderBody(paddingSize: number) {\r\n        let ap: any = {};\r\n\r\n        if (this.props.lock === 'x') {\r\n            ap['overflowY'] = 'hidden';\r\n        } else if (this.props.lock === 'y') {\r\n            ap['overflowX'] = 'hidden';\r\n        }\r\n\r\n        return (\r\n            <div\r\n                {...this.props.scrollerProps}\r\n                ref={this._onRef}\r\n                style={this._sh.body({\r\n                    ...(this.props.scrollerProps && this.props.scrollerProps.style || {}),\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    top: 0,\r\n                    right: this.props.lock === 'x' ? 0 : -this._scrollBarSize,\r\n                    bottom: this.props.lock === 'y' ? 0 : -this._scrollBarSize,\r\n                    overflow: 'scroll',\r\n                    boxSizing: 'content-box',\r\n                    ...ap\r\n                })}\r\n            >\r\n                <div\r\n                    style={this._sh.bodyPadding({\r\n                        display: 'inline-flex',\r\n                        paddingRight: this.props.lock === 'x' ? 0 : paddingSize,\r\n                        paddingBottom: this.props.lock === 'y' ? 0 : paddingSize\r\n                    })}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderXScrollbar(scrollSize: number) {\r\n        return (\r\n            <div\r\n                className={this._theme.classNames.trackRoot}\r\n                style={this._sh.xRoot({\r\n                    ...this._theme.styles.trackRoot,\r\n                    background: this._theme.trackBackground,\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: this.props.lock === 'x' ? 0 : scrollSize,\r\n                    bottom: 0,\r\n                    height: scrollSize,\r\n                    display: this.props.lock === 'y' ? 'none' : '',\r\n                    zIndex: 1\r\n                })}\r\n            >\r\n                <div\r\n                    className={[this._theme.classNames.track, this._theme.classNames.bottomTrack].filter(v => !!v).join(' ')}\r\n                    style={this._sh.xTrack({\r\n                        ...this._theme.styles.track,\r\n                        ...this._theme.styles.bottomTrack,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden'\r\n                    })}\r\n                    onMouseDown={this._onScrollMouseX}\r\n                >\r\n                    {this._renderPartial(this.props.xBackgroundContent)}\r\n                </div>\r\n                <div\r\n                    className={this._theme.classNames.bottomThumb}\r\n                    ref={this._onRefX}\r\n                    style={this._sh.xThumb({\r\n                        background: this._theme.thumbBackground,\r\n                        ...this._theme.styles.thumb,\r\n                        ...this._theme.styles.bottomThumb,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        height: '100%',\r\n                        display: this.state.xEnabled ? '' : 'none'\r\n                    })}\r\n                >\r\n                    {this._renderPartial(this.props.xScrollContent)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderYScrollbar(scrollSize: number) {\r\n        return (\r\n            <div\r\n                className={this._theme.classNames.trackRoot}\r\n                style={this._sh.yRoot({\r\n                    ...this._theme.styles.trackRoot,\r\n                    background: this._theme.trackBackground,\r\n                    position: 'absolute',\r\n                    right: 0,\r\n                    bottom: this.props.lock === 'y' ? 0 : scrollSize,\r\n                    top: 0,\r\n                    width: scrollSize,\r\n                    display: this.props.lock === 'x' ? 'none' : '',\r\n                    zIndex: 1\r\n                })}\r\n            >\r\n                <div\r\n                    className={[this._theme.classNames.track, this._theme.classNames.rightTrack].filter(v => !!v).join(' ')}\r\n                    style={this._sh.yTrack({\r\n                        ...this._theme.styles.track,\r\n                        ...this._theme.styles.rightTrack,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden'\r\n                    })}\r\n                    onMouseDown={this._onScrollMouseY}\r\n                >\r\n                    {this._renderPartial(this.props.yBackgroundContent)}\r\n                </div>\r\n                <div\r\n                    className={this._theme.classNames.rightTrack}\r\n                    ref={this._onRefY}\r\n                    style={this._sh.yThumb({\r\n                        background: this._theme.thumbBackground,\r\n                        ...this._theme.styles.thumb,\r\n                        ...this._theme.styles.rightThumb,\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        width: '100%',\r\n                        display: this.state.yEnabled ? '' : 'none'\r\n                    })}\r\n                >\r\n                    {this._renderPartial(this.props.yScrollContent)}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderZScrollbar(scrollSize: number) {\r\n        return (\r\n            <div\r\n                className={this._theme.classNames.trackRoot}\r\n                style={this._sh.zRoot({\r\n                    ...this._theme.styles.trackRoot,\r\n                    background: this._theme.trackBackground,\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    height: scrollSize,\r\n                    width: scrollSize,\r\n                    display: (this.props.lock === 'x' || this.props.lock === 'y') ? 'none' : '',\r\n                    zIndex: 1\r\n                })}\r\n            >\r\n                <div\r\n                    className={this._theme.classNames.scrollCorner}\r\n                    style={this._sh.zTrack({\r\n                        ...this._theme.styles.scrollCorner,\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        overflow: 'hidden',\r\n                        pointerEvents: 'none'\r\n                    })}\r\n                >\r\n                    {this._renderPartial(this.props.zBackgroundContent)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.setState({\r\n            scrollHeight: this._r.offsetHeight - this._r.clientHeight,\r\n            scrollWidth: this._r.offsetWidth - this._r.clientWidth\r\n        });\r\n\r\n        this._r.addEventListener('scroll', this._onScroll);\r\n        this._x.addEventListener('mousedown', this._onMouseDownX);\r\n        this._y.addEventListener('mousedown', this._onMouseDownY);\r\n        window.addEventListener('mousemove', this._onMouseMove);\r\n        window.addEventListener('mouseup', this._onMouseUp);\r\n\r\n        let w = this._r.clientWidth;\r\n        let h = this._r.clientHeight;\r\n\r\n        this._taskResize = setInterval(() => {\r\n            let nw = this._r.clientWidth;\r\n            let nh = this._r.clientHeight;\r\n\r\n            if (nw !== w || nh !== h) {\r\n                h = nh;\r\n                w = nw;\r\n                this._updateScrollbars();\r\n                this._onScroll(null);\r\n            }\r\n        }, 20);\r\n\r\n        this._updateScrollbars(() => {\r\n            if (this.props.onUpdate) {\r\n                this.props.onUpdate(this._getUpdateEventObject());\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._r.removeEventListener('scroll', this._onScroll);\r\n        this._x.removeEventListener('mousedown', this._onMouseDownX);\r\n        this._y.removeEventListener('mousedown', this._onMouseDownY);\r\n        window.removeEventListener('mousemove', this._onMouseMove);\r\n        window.removeEventListener('mouseup', this._onMouseUp);\r\n        clearInterval(this._taskResize);\r\n    }\r\n\r\n    public render() {\r\n        let ss = this.scrollbarSize;\r\n        return (\r\n            <div\r\n                ref={this._onRefA}\r\n                style={this._sh.root({\r\n                    height: this.props.height == void 0 ? '100%' : this.props.height,\r\n                    width: this.props.width == void 0 ? '100%' : this.props.width,\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative'\r\n                })}\r\n                onMouseMove={this._onRootMouseMove}\r\n                onMouseLeave={this._onRootMouseLeave}\r\n            >\r\n                {this._renderBody(this.size)}\r\n                {this._renderPartial(this.props.after, () => this._getUpdateEventObject())}\r\n                {this._renderXScrollbar(ss)}\r\n                {this._renderYScrollbar(ss)}\r\n                {this._renderZScrollbar(ss)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollView;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/scrollview.tsx","export * from './debounce';\r\nexport * from './controller';\r\nexport * from './keyboard';\r\nexport * from './mouse';\r\nexport * from './renderthrottler';\r\nexport * from './scrollbar-size';\r\nexport * from './shallow';\r\nexport * from './relative-position';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/index.ts","export enum HeaderType {\r\n    Row = 1,\r\n    Column\r\n}\r\n\r\nexport interface IHeader {\r\n    /** Unique header identifier for **all** headers in container. Do not edit. Assigned by header container if not provided. */\r\n    $id?: number | string;\r\n    /** List of children headers. */\r\n    $children?: IHeader[];\r\n    /** Size of current header. */\r\n    $size?: number;\r\n    /** Filter flag. */\r\n    $collapsed?: boolean;\r\n\r\n    [prop: string]: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/header.ts","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n\r\nReactDOM.render(<App/>, document.getElementsByTagName('app')[0]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.tsx","import * as React from 'react';\r\nimport { ScrollView } from '~/components';\r\nconst Style = require('./app.scss');\r\n\r\nimport 'redux';\r\nimport 'redux-thunk';\r\nimport 'react-redux';\r\n\r\nexport class App extends React.Component<any, any> {\r\n    public render() {\r\n        return (\r\n            <ScrollView\r\n                lock=\"y\"\r\n            >\r\n                {Style.root}\r\n                <div style={{ height: '300vh' }}/>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/app.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"root\":\"app__root___QpY_Y\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/app.scss\n// module id = 40\n// module chunks = 1","import { KeyboardEvent, MouseEvent } from 'react';\r\nimport { IGridAddress, IGridSelection, IGridView } from '../components';\r\n\r\nconst IS_MACOS = navigator.platform.slice(0, 3) === 'Mac';\r\n\r\nexport interface IState {\r\n    focused: boolean;\r\n    editor: IGridAddress;\r\n    active: IGridAddress;\r\n    selection: IGridSelection[];\r\n    view: IGridView;\r\n    rows: number;\r\n    columns: number;\r\n    readOnly: boolean;\r\n}\r\n\r\nexport interface IUpdateSelectionEvent {\r\n    active?: IGridAddress;\r\n    selection?: IGridSelection[];\r\n}\r\n\r\nexport interface IControllerProps {\r\n    getState: () => IState;\r\n    onScroll: (cell: IGridAddress) => void;\r\n    onUpdateSelection: (next: IUpdateSelectionEvent, callback?: () => void) => void;\r\n    onCloseEditor: (commit: boolean, onClosed?: () => void) => void;\r\n    onOpenEditor: (next: IGridAddress) => void;\r\n}\r\n\r\nexport class Controller {\r\n    protected _state: IState = null;\r\n\r\n    constructor(protected _props: IControllerProps) { }\r\n\r\n    protected _getModifiers(e: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement>) {\r\n        const { ctrlKey, altKey, shiftKey } = e;\r\n        const cmdKey = e.getModifierState('Meta'); // Command key for Mac OS\r\n\r\n        return {\r\n            ctrlKey,\r\n            macCmdKey: cmdKey,\r\n            cmdKey: IS_MACOS ? cmdKey : ctrlKey,\r\n            shiftKey,\r\n            altKey\r\n        };\r\n    }\r\n\r\n    protected _clampAddress({ column, row }: IGridAddress) {\r\n        const { rows, columns } = this._state;\r\n        return {\r\n            column: Math.min(Math.max(0, column), columns - 1),\r\n            row: Math.min(Math.max(0, row), rows - 1)\r\n        } as IGridAddress;\r\n    }\r\n\r\n    protected _splitSelection(selection: IGridSelection[]) {\r\n        let prev = selection.slice();\r\n        let last = prev.pop();\r\n\r\n        return {\r\n            prev, last\r\n        };\r\n    }\r\n\r\n    protected _getSelectedCells(selection: IGridSelection[]) {\r\n        let map: {\r\n            [key: string]: IGridAddress;\r\n        } = {};\r\n\r\n        for (const { column, row, height, width } of selection) {\r\n            for (let r = row, rLast = row + height; r <= rLast; r++) {\r\n                for (let c = column, cLast = column + width; c <= cLast; c++) {\r\n                    let key = `${r}x${c}`;\r\n\r\n                    if (map[key]) {\r\n                        continue;\r\n                    }\r\n\r\n                    map[key] = { row: r, column: c };\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.keys(map).sort().map(k => map[k]);\r\n    }\r\n\r\n    protected _request() {\r\n        return this._state = this._props.getState();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/controller.ts","import * as React from 'react';\r\nimport { ScrollView as View, IScrollViewTheme } from 'react-bolivianite-grid';\r\nconst Style = require('./scrollview.scss');\r\n\r\nexport interface IScrollViewProps {\r\n    lock?: 'x' | 'y';\r\n}\r\n\r\nconst THEME: IScrollViewTheme = {\r\n    thumbBackground: 'rgba(0, 0, 0, 0.8)',\r\n    trackBackground: 'rgba(0, 0, 0, 0.2)',\r\n    classNames: {\r\n        trackRoot: Style.track\r\n    }\r\n};\r\n\r\nexport class ScrollView extends React.Component<any, any> {\r\n    public render() {\r\n        return (\r\n            <View\r\n                lock={this.props.lock}\r\n                hover={100}\r\n                theme={THEME}\r\n            >\r\n                {this.props.children}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/scrollview.tsx","export * from './components';\r\nexport * from './models';\r\nimport { Grid } from './components';\r\n\r\nexport default Grid;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/index.tsx","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport ScrollView, { IScrollViewUpdateEvent } from './scrollview';\r\nimport {\r\n    debounce, Shallow, RenderThrottler, KeyboardController,\r\n    IUpdateSelectionEvent, IKeyboardControllerRemoveEvent,\r\n    MouseController, IKeyboardControllerPasteEvent\r\n} from '../controllers';\r\nimport {\r\n    IHeader, HeaderResizeBehavior, HeadersContainer, HeaderType\r\n} from '../models';\r\nimport {\r\n    IGridProps, ICellMeasureResult, ICellRenderBaseEvent, ICellRendererEvent,\r\n    IGridResizeHeaderLevelEvent, IGridResizeHeadersEvent, IGridAddress, IGridSelection, IGridView, IGridOverscan\r\n} from './types';\r\n\r\nexport class Grid extends React.PureComponent<IGridProps, any> {\r\n    /** React v17 deprecated */\r\n    static childContextTypes = {\r\n        grid: PropTypes.object,\r\n        headers: PropTypes.object\r\n    };\r\n\r\n    /** React v17 deprecated */\r\n    getChildContext(this: Grid) {\r\n        return {\r\n            grid: this,\r\n            headers: this.props.headers as HeadersContainer /*typescript workaround*/\r\n        };\r\n    }\r\n\r\n    private _shallow = {\r\n        colHeaders: Shallow<React.CSSProperties>(),\r\n        rowHeaders: Shallow<React.CSSProperties>(),\r\n        crnHeaders: Shallow<React.CSSProperties>()\r\n    };\r\n\r\n    private _blockContextMenu = false;\r\n    private _onContextMenuListener: any = null;\r\n    private _rt = new RenderThrottler();\r\n    private _scrollUpdateTrottled = this._rt.create();\r\n    private _ref: HTMLDivElement = null;\r\n    private _refView: ScrollView = null;\r\n    private _scrollerProps: React.HTMLProps<HTMLDivElement> = { style: { willChange: 'transform', zIndex: 0 } };\r\n    private _lastView: IGridView = null;\r\n    private _lastOverscan: IGridOverscan = null;\r\n    private _focused = false;\r\n    private _kbCtr: KeyboardController = null;\r\n    private _msCtr: MouseController = null;\r\n    private _currentEdit: {\r\n        row: number;\r\n        col: number;\r\n        nextValue: any;\r\n        updatedValue: boolean;\r\n    } = null;\r\n\r\n    state = {\r\n        scrollLeft: 0,\r\n        scrollTop: 0,\r\n        viewHeight: 0,\r\n        viewWidth: 0,\r\n        active: {\r\n            row: 0,\r\n            column: 0\r\n        } as IGridAddress,\r\n        edit: null as IGridAddress,\r\n        selection: [{\r\n            row: 0,\r\n            column: 0,\r\n            width: 0,\r\n            height: 0\r\n        }] as IGridSelection[],\r\n        resizeHeaderPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        },\r\n        resizeLevelPreview: null as {\r\n            header: IHeader;\r\n            change: number;\r\n        }\r\n    };\r\n\r\n    constructor(p: IGridProps, c: any) {\r\n        super(p, c);\r\n\r\n        this._onAfterUpdate = debounce(500, this._onAfterUpdate.bind(this));\r\n\r\n        const getState = () => ({\r\n            active: this.state.active,\r\n            editor: this.state.edit,\r\n            selection: this.state.selection,\r\n            focused: this._focused,\r\n            columns: this._columnCount,\r\n            rows: this._rowCount,\r\n            view: this._lastView,\r\n            readOnly: this.props.readOnly\r\n        });\r\n\r\n        const onScroll = this.scrollTo.bind(this);\r\n        const onUpdateSelection = ({ active, selection }: IUpdateSelectionEvent, callback: () => void) => {\r\n            if (!active && !selection) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                active: active || this.state.active,\r\n                selection: selection || this.state.selection\r\n            }, callback);\r\n        };\r\n\r\n        const onRightClick = (cell: IGridAddress) => {\r\n            if (this.props.onRightClick) {\r\n                this.props.onRightClick(cell);\r\n            }\r\n        };\r\n\r\n        const onCopy = (cells: IGridAddress[], withHeaders: boolean) => {\r\n            if (this.props.onCopy) {\r\n                this.props.onCopy({ withHeaders, cells });\r\n            }\r\n        };\r\n\r\n        const onPaste = ({ clipboard, getAllSelectedCells, getLastSelectedCells }: IKeyboardControllerPasteEvent) => {\r\n            if (this.props.onPaste) {\r\n                this.props.onPaste({\r\n                    clipboard,\r\n                    getAllSelectedCells,\r\n                    getLastSelectedCells,\r\n                    target: {\r\n                        ...this.state.active\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        const onNullify = (cells: IGridAddress[]) => {\r\n            if (this.props.onNullify) {\r\n                this.props.onNullify({ cells });\r\n            }\r\n        };\r\n\r\n        const onRemove = (event: IKeyboardControllerRemoveEvent) => {\r\n            if (this.props.onRemove) {\r\n                this.props.onRemove(event);\r\n            }\r\n        };\r\n\r\n        const onSpace = (cells: IGridAddress[]) => {\r\n            if (this.props.onSpace) {\r\n                this.props.onSpace({ cells });\r\n            }\r\n        };\r\n\r\n        this._kbCtr = new KeyboardController({\r\n            getState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll,\r\n            onUpdateSelection,\r\n            onCopy,\r\n            onPaste,\r\n            onNullify,\r\n            onRemove,\r\n            onSpace\r\n        });\r\n\r\n        this._msCtr = new MouseController({\r\n            getState,\r\n            onCloseEditor: this.closeEditor,\r\n            onOpenEditor: this.openEditor,\r\n            onScroll,\r\n            onUpdateSelection,\r\n            onRightClick\r\n        });\r\n    }\r\n\r\n    private get _theme() {\r\n        let theme = this.props.theme || {};\r\n        theme.classNames = theme.classNames || {};\r\n        theme.styles = theme.styles || {};\r\n        theme.styles.grid = theme.styles.grid || {};\r\n        theme.styles.gridCorner = theme.styles.gridCorner || {};\r\n        theme.styles.rows = theme.styles.rows || {};\r\n        theme.styles.columns = theme.styles.columns || {};\r\n        return theme;\r\n    }\r\n\r\n    private get _columnCount() {\r\n        return this.props.headers ? this.props.headers.columns.length : 0;\r\n    }\r\n\r\n    private get _rowCount() {\r\n        return this.props.headers ? this.props.headers.rows.length : 0;\r\n    }\r\n\r\n    private get _headersHeight() {\r\n        return this.props.headers.headersHeight || 0;\r\n    }\r\n\r\n    private get _headersWidth() {\r\n        return this.props.headers.headersWidth || 0;\r\n    }\r\n\r\n    private _onRef = (r: HTMLDivElement) => {\r\n        this._ref = r;\r\n    }\r\n\r\n    private _onRefView = (r: ScrollView) => {\r\n        this._refView = r;\r\n    }\r\n\r\n    private _onBlur = () => {\r\n        this._focused = false;\r\n    }\r\n\r\n    private _onFocus = () => {\r\n        this._focused = true;\r\n    }\r\n\r\n    private _onScrollViewUpdate = (e: IScrollViewUpdateEvent) => {\r\n        this._scrollUpdateTrottled(() => {\r\n            if (this.state.viewWidth !== e.clientWidth || this.state.viewHeight !== e.clientHeight) {\r\n                this.setState({ viewWidth: e.clientWidth, viewHeight: e.clientHeight });\r\n            }\r\n\r\n            if (this.state.scrollLeft !== e.scrollLeft) {\r\n                this.setState({ scrollLeft: e.scrollLeft });\r\n            }\r\n\r\n            if (this.state.scrollTop !== e.scrollTop) {\r\n                this.setState({ scrollTop: e.scrollTop });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAutoMeasureApply(result: ICellMeasureResult[], behavior: HeaderResizeBehavior) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        result = result.filter(v => !!v);\r\n\r\n        if (!result.length) {\r\n            return;\r\n        }\r\n\r\n        const columnHeaders = this.props.headers.columns;\r\n        const rowHeaders = this.props.headers.rows;\r\n\r\n        let columns: { [colIndex: string]: number } = {};\r\n        let rows: { [rowIndex: string]: number } = {};\r\n\r\n        for (let { rowIndex, columnIndex, height, width } of result) {\r\n            columns[columnIndex] = columns[columnIndex] == null ? width : Math.max(width, columns[columnIndex]);\r\n            rows[rowIndex] = rows[rowIndex] == null ? height : Math.max(height, rows[rowIndex]);\r\n        }\r\n\r\n        let ch = Object\r\n            .keys(columns)\r\n            .map(k => ({ columnIndex: Number(k), width: columns[k] }))\r\n            .filter(({ width, columnIndex }) => {\r\n                let h = columnHeaders[columnIndex];\r\n                return h && (behavior === 'reset' || !this.props.headers.getManualResized(h) && h.$size < width);\r\n            })\r\n            .map(({ columnIndex, width }) => ({\r\n                header: columnHeaders[columnIndex],\r\n                size: width,\r\n                type: this.props.headers.getHeaderType(columnHeaders[columnIndex])\r\n            }));\r\n\r\n        let rh = Object\r\n            .keys(rows)\r\n            .map(k => ({ rowIndex: Number(k), height: rows[k] }))\r\n            .filter(({ rowIndex, height }) => {\r\n                let h = rowHeaders[rowIndex];\r\n                return h && (behavior === 'reset' || !this.props.headers.getManualResized(h) && h.$size < height);\r\n            })\r\n            .map(({ rowIndex, height }) => ({\r\n                header: rowHeaders[rowIndex],\r\n                size: height,\r\n                type: this.props.headers.getHeaderType(rowHeaders[rowIndex])\r\n            }));\r\n\r\n        if (ch.length || rh.length) {\r\n            this.props.onHeaderResize({ headers: [...ch, ...rh], behavior: behavior });\r\n        }\r\n    }\r\n\r\n    private _onAutoMeasure() {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const { columns, rows } = this.props.headers;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let r = firstRow; r <= lastRow; r++) {\r\n            for (let c = firstColumn; c <= lastColumn; c++) {\r\n                cells.push({\r\n                    columnIndex: c,\r\n                    rowIndex: r,\r\n                    source: this.props.source,\r\n                    columnHeader: columns[c],\r\n                    rowHeader: rows[r]\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            callback: (result: ICellMeasureResult[]) => {\r\n                this._onAutoMeasureApply(result, 'auto');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onAfterUpdate() {\r\n        this._onAutoMeasure();\r\n    }\r\n\r\n    private _onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        this._kbCtr.keydown(e);\r\n    }\r\n\r\n    private _onMouseDown = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n\r\n        this.focus();\r\n\r\n        this._msCtr.mousedown(e, row, column);\r\n    }\r\n\r\n    private _onMouseDownHeader = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.persist();\r\n        let type: HeaderType = Number(e.currentTarget.getAttribute('x-type'));\r\n        let id = e.currentTarget.getAttribute('x-id');\r\n        let h = this.props.headers.getHeader(id);\r\n        this.focus();\r\n\r\n        if (!h) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.onHeaderRightClick) {\r\n            this.props.onHeaderRightClick({ header: h, event: e });\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let leaves = this.props.headers.getHeaderLeaves(h);\r\n        let indices = leaves.map(v => this.props.headers.getViewIndex(v));\r\n\r\n        if (!indices.length) {\r\n            return;\r\n        }\r\n\r\n        let min = Math.min(...indices);\r\n        let max = Math.max(...indices);\r\n\r\n        this._msCtr.headerdown(e, type, min, max);\r\n    }\r\n\r\n    private _onMouseEnter = (e: React.MouseEvent<HTMLElement>) => {\r\n        let row = Number(e.currentTarget.getAttribute('x-row'));\r\n        let column = Number(e.currentTarget.getAttribute('x-col'));\r\n        this._msCtr.mouseenter(row, column);\r\n    }\r\n\r\n    private _onRootMouseLeave = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.persist();\r\n        let x = e.pageX;\r\n        let y = e.pageY;\r\n        let rect = this._ref.getBoundingClientRect();\r\n        this._msCtr.rootleave(x, y, rect);\r\n    }\r\n\r\n    private _onRootMouseEnter = () => {\r\n        this._msCtr.rootenter();\r\n    }\r\n\r\n    private _onRootMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (e.button === 2) {\r\n            this._blockContextMenu = true;\r\n        }\r\n    }\r\n\r\n    private _createView() {\r\n        const sl = this.state.scrollLeft;\r\n        const st = this.state.scrollTop;\r\n        const vw = this.state.viewWidth - this._headersWidth;\r\n        const vh = this.state.viewHeight - this._headersHeight;\r\n\r\n        let rowsHeight = 0;\r\n        let firstRow = -1;\r\n        let lastRow = -1;\r\n        let rowIndex = 0;\r\n\r\n        for (let rh of this.props.headers.rows) {\r\n            if (firstRow === -1 && rowsHeight >= st - rh.$size) {\r\n                firstRow = rowIndex;\r\n            }\r\n\r\n            rowsHeight += rh.$size;\r\n\r\n            if (lastRow === -1 && rowsHeight >= st + vh + this._theme.scrollSize) {\r\n                lastRow = rowIndex;\r\n                break;\r\n            }\r\n\r\n            rowIndex++;\r\n        }\r\n\r\n        if (lastRow === -1 && firstRow !== -1) {\r\n            lastRow = rowIndex;\r\n        }\r\n\r\n        let columnsWidth = 0;\r\n        let firstColumn = -1;\r\n        let lastColumn = -1;\r\n        let colIndex = 0;\r\n\r\n        for (let ch of this.props.headers.columns) {\r\n            if (firstColumn === -1 && columnsWidth >= sl - ch.$size) {\r\n                firstColumn = colIndex;\r\n            }\r\n\r\n            columnsWidth += ch.$size;\r\n\r\n            if (lastColumn === -1 && columnsWidth >= sl + vw + this._theme.scrollSize) {\r\n                lastColumn = colIndex;\r\n                break;\r\n            }\r\n\r\n            colIndex++;\r\n        }\r\n\r\n        if (lastColumn === -1 && firstColumn !== -1) {\r\n            lastColumn = colIndex;\r\n        }\r\n\r\n        let rhLast = this.props.headers.rows[this.props.headers.rows.length - 1];\r\n        let chLast = this.props.headers.columns[this.props.headers.columns.length - 1];\r\n        rowsHeight = this.props.headers.getPosition(rhLast) + rhLast.$size;\r\n        columnsWidth = this.props.headers.getPosition(chLast) + chLast.$size;\r\n\r\n        this._lastView = { firstRow, lastRow, firstColumn, lastColumn, rowsHeight, columnsWidth };\r\n    }\r\n\r\n    private _createOverscan() {\r\n        if (!this._lastView) {\r\n            return;\r\n        }\r\n\r\n        let { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n\r\n        if (this.props.overscanRows) {\r\n            firstRow = Math.max(0, firstRow - this.props.overscanRows);\r\n            lastRow = Math.min(Math.max(0, this._rowCount - 1), lastRow + this.props.overscanRows);\r\n        } else {\r\n            firstRow = Math.max(0, firstRow);\r\n        }\r\n\r\n        if (this.props.overscanColumns) {\r\n            firstColumn = Math.max(0, firstColumn - this.props.overscanColumns);\r\n            lastColumn = Math.min(Math.max(0, this._columnCount - 1), lastColumn + this.props.overscanColumns);\r\n        } else {\r\n            firstColumn = Math.max(0, firstColumn);\r\n        }\r\n\r\n        this._lastOverscan = {\r\n            firstRow, lastRow, firstColumn, lastColumn\r\n        };\r\n    }\r\n\r\n    private _prepareCellProps(row: number, col: number) {\r\n        let rh = this.props.headers.rows[row];\r\n        let ch = this.props.headers.columns[col];\r\n\r\n        return {\r\n            rowIndex: row,\r\n            columnIndex: col,\r\n            rowHeader: rh,\r\n            columnHeader: ch,\r\n            active: row === this.state.active.row && col === this.state.active.column,\r\n            source: this.props.source,\r\n            theme: this.props.theme,\r\n            style: {\r\n                top: this.props.headers.getPosition(rh),\r\n                left: this.props.headers.getPosition(ch),\r\n                height: rh.$size,\r\n                width: ch.$size,\r\n                position: 'absolute',\r\n                zIndex: 1\r\n            }\r\n        } as ICellRendererEvent;\r\n    }\r\n\r\n    private _renderCell(row: number, col: number) {\r\n        let cell = this.props.onRenderCell(this._prepareCellProps(row, col));\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `C${row}x${col}`,\r\n            onMouseDown: this._onMouseDown,\r\n            onMouseEnter: this._onMouseEnter\r\n        });\r\n    }\r\n\r\n    private _renderEditor(row: number, col: number) {\r\n        if (!this.props.onRenderEditor) {\r\n            return this._renderCell(row, col);\r\n        }\r\n\r\n\r\n        if (!this._currentEdit || (this._currentEdit.row !== row || this._currentEdit.col !== col)) {\r\n            this._currentEdit = {\r\n                row, col,\r\n                nextValue: null,\r\n                updatedValue: false\r\n            };\r\n        }\r\n\r\n        let cellProps = this._prepareCellProps(row, col);\r\n        let cell = this.props.onRenderEditor({\r\n            ...cellProps,\r\n            close: (commit: boolean) => {\r\n                this.closeEditor(commit);\r\n            },\r\n            update: (nextValue: any) => {\r\n                this._currentEdit.nextValue = nextValue;\r\n                this._currentEdit.updatedValue = true;\r\n            }\r\n        });\r\n\r\n        return React.cloneElement(React.Children.only(cell), {\r\n            'x-row': row,\r\n            'x-col': col,\r\n            key: `E${row}x${col}`\r\n        });\r\n    }\r\n\r\n    private _renderData() {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const columnCount = this._columnCount;\r\n        const rowCount = this._rowCount;\r\n\r\n        if (!columnCount || !rowCount) {\r\n            return null;\r\n        }\r\n\r\n        let irlen = Math.max(0, Math.min(rowCount - firstRow, 1 + lastRow - firstRow));\r\n        let iclen = Math.max(0, Math.min(columnCount - firstColumn, 1 + lastColumn - firstColumn));\r\n        let jsx: JSX.Element[] = new Array(irlen * iclen);\r\n        let i = 0;\r\n        let { edit } = this.state;\r\n\r\n        for (let ir = 0; ir < irlen; ir++) {\r\n            for (let ic = 0; ic < iclen; ic++) {\r\n                let r = ir + firstRow;\r\n                let c = ic + firstColumn;\r\n\r\n                if (edit && edit.column === c && edit.row === r) {\r\n                    jsx[i++] = this._renderEditor(r, c);\r\n                } else {\r\n                    jsx[i++] = this._renderCell(r, c);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (edit && (\r\n            (edit.column < firstColumn) || (edit.column > lastColumn) ||\r\n            (edit.row < firstRow) || (edit.row > lastRow)\r\n        )\r\n        ) {\r\n            jsx.push(this._renderEditor(edit.row, edit.column));\r\n        }\r\n\r\n        return jsx;\r\n    }\r\n\r\n    private _renderHeader(\r\n        out: JSX.Element[],\r\n        type: HeaderType,\r\n        index: number,\r\n        header: IHeader,\r\n        scrollPos: number,\r\n        lock: { [id: string]: boolean },\r\n        parent: boolean\r\n    ) {\r\n        let { $id, $children } = header;\r\n\r\n        if (lock[$id]) {\r\n            return;\r\n        }\r\n\r\n        lock[$id] = true;\r\n\r\n        let style: React.CSSProperties = {\r\n            position: 'absolute',\r\n            zIndex: 1\r\n        };\r\n\r\n        let level = this.props.headers.getLevel(header);\r\n\r\n        if (type === HeaderType.Row) {\r\n            style.left = this.props.headers.getLeftLevelPosition(level); // 0;\r\n            style.width = this.props.headers.getLeftLevelWidth(level); // headersWidth;\r\n            style.top = this.props.headers.getPosition(header) - scrollPos;\r\n            style.height = header.$size;\r\n\r\n            let levels = this.props.headers.leftLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.width = this.props.headers.headersWidth - style.left;\r\n            }\r\n        } else {\r\n            style.top = this.props.headers.getTopLevelPosition(level);\r\n            style.height = this.props.headers.getTopLevelHeight(level); // headersHeight;\r\n            style.left = this.props.headers.getPosition(header) - scrollPos;\r\n            style.width = header.$size;\r\n\r\n            let levels = this.props.headers.topLevels;\r\n            if (level < (levels - 1) && (!$children || !$children.length)) {\r\n                style.height = this.props.headers.headersHeight - style.top;\r\n            }\r\n        }\r\n\r\n        let selection = false;\r\n\r\n        for (let s of this.state.selection) {\r\n            if (type === HeaderType.Row) {\r\n                if (index >= s.row && index <= (s.row + s.height)) {\r\n                    selection = true;\r\n                    break;\r\n                }\r\n            } else {\r\n                if (index >= s.column && index <= (s.column + s.width)) {\r\n                    selection = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let headerParent = this.props.headers.getParent(header);\r\n\r\n        let cell = this.props.onRenderHeader({\r\n            type, header, style, parent,\r\n            selection: parent ? false : selection,\r\n            parentHeader: headerParent,\r\n            theme: this.props.theme,\r\n            viewIndex: this.props.headers.getViewIndex(header)\r\n        });\r\n\r\n        out.push(React.cloneElement(React.Children.only(cell), {\r\n            'x-type': type,\r\n            'x-id': $id,\r\n            key: $id,\r\n            onMouseDown: this._onMouseDownHeader\r\n        }));\r\n\r\n        if (headerParent) {\r\n            this._renderHeader(out, type, index, headerParent, scrollPos, lock, true);\r\n        }\r\n    }\r\n\r\n    private _renderHeaders(type: HeaderType, scrollPos: number) {\r\n        if (!this._lastOverscan) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastOverscan;\r\n        const isRow = type === HeaderType.Row;\r\n        const first = isRow ? firstRow : firstColumn;\r\n        const last = isRow ? lastRow : lastColumn;\r\n        const max = isRow ? this._rowCount : this._columnCount;\r\n        const headers = isRow ? this.props.headers.rows : this.props.headers.columns;\r\n\r\n        let len = Math.max(0, Math.min(max - first, 1 + last - first));\r\n        let jsx: JSX.Element[] = [];\r\n        let lock: { [id: string]: boolean } = {};\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let ix = i + first;\r\n            this._renderHeader(jsx, type, ix, headers[ix], scrollPos, lock, false);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {jsx}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private _renderResizing({ scrollLeft, scrollTop }: IScrollViewUpdateEvent) {\r\n        if (!this.props.onRenderResizer || !this.state.resizeHeaderPreview && !this.state.resizeLevelPreview) {\r\n            return null;\r\n        }\r\n\r\n        let type: 'level' | 'header';\r\n        let orientation: 'horizontal' | 'vertical';\r\n\r\n        let styleInitial = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none'\r\n        } as React.CSSProperties;\r\n\r\n        let styleChanged = {\r\n            position: 'absolute',\r\n            pointerEvents: 'none'\r\n        } as React.CSSProperties;\r\n\r\n        if (this.state.resizeHeaderPreview) {\r\n            type = 'header';\r\n\r\n            let { change, header } = this.state.resizeHeaderPreview;\r\n            let headerType = this.props.headers.getHeaderType(header);\r\n            let headerPosition = this.props.headers.getPosition(header);\r\n\r\n            if (headerType === HeaderType.Row) {\r\n                orientation = 'horizontal';\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = this.props.headers.headersHeight + headerPosition - scrollTop;\r\n                styleInitial.height = header.$size;\r\n                styleChanged.height = header.$size + change;\r\n            } else {\r\n                orientation = 'vertical';\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = this.props.headers.headersWidth + headerPosition - scrollLeft;\r\n                styleInitial.width = header.$size;\r\n                styleChanged.width = header.$size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeLevelPreview) {\r\n            type = 'level';\r\n\r\n            let { change, header } = this.state.resizeLevelPreview;\r\n            let headerType = this.props.headers.getHeaderType(header);\r\n            let level = this.props.headers.getLevel(header);\r\n\r\n            if (headerType === HeaderType.Row) { // resizing left level\r\n                orientation = 'vertical';\r\n                let position = this.props.headers.getLeftLevelPosition(level);\r\n                let size = this.props.headers.getLeftLevelWidth(level);\r\n                styleChanged.top = styleInitial.top = 0;\r\n                styleChanged.bottom = styleInitial.bottom = 0;\r\n                styleChanged.left = styleInitial.left = position - scrollLeft;\r\n                styleInitial.width = size;\r\n                styleChanged.width = size + change;\r\n            } else { // resizing top level\r\n                orientation = 'horizontal';\r\n                let position = this.props.headers.getTopLevelPosition(level);\r\n                let size = this.props.headers.getTopLevelHeight(level);\r\n                styleChanged.left = styleInitial.left = 0;\r\n                styleChanged.right = styleInitial.right = 0;\r\n                styleChanged.top = styleInitial.top = position - scrollTop;\r\n                styleInitial.height = size;\r\n                styleChanged.height = size + change;\r\n            }\r\n        }\r\n\r\n        if (this.state.resizeHeaderPreview || this.state.resizeLevelPreview) {\r\n            return (\r\n                <>\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleInitial, resizer: 'initial', theme: this.props.theme })}\r\n                    {this.props.onRenderResizer({ type, orientation, style: styleChanged, resizer: 'changed', theme: this.props.theme })}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _renderHeaderContainers = (event: IScrollViewUpdateEvent) => {\r\n        const { clientWidth, clientHeight, scrollLeft, scrollTop } = event;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: clientWidth + this._theme.scrollSize,\r\n                    height: clientHeight + this._theme.scrollSize,\r\n                    pointerEvents: 'none',\r\n                    zIndex: 1\r\n                }}\r\n            >\r\n                {!!this.props.headers.headersHeight &&\r\n                    <div\r\n                        className={this._theme.classNames.columns}\r\n                        style={this._shallow.colHeaders({\r\n                            ...this._theme.styles.columns,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: this.props.headers.headersWidth,\r\n                            top: 0,\r\n                            right: 0,\r\n                            height: this.props.headers.headersHeight\r\n                        })}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Column, scrollLeft)}\r\n                    </div>\r\n                }\r\n                {!!this.props.headers.headersWidth &&\r\n                    <div\r\n                        className={this._theme.classNames.rows}\r\n                        style={this._shallow.rowHeaders({\r\n                            ...this._theme.styles.rows,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: this.props.headers.headersHeight,\r\n                            bottom: 0,\r\n                            width: this.props.headers.headersWidth\r\n                        })}\r\n                    >\r\n                        {this._renderHeaders(HeaderType.Row, scrollTop)}\r\n                    </div>\r\n                }\r\n                {!!(this.props.headers.headersHeight || this.props.headers.headersWidth) &&\r\n                    <div\r\n                        className={this._theme.classNames.gridCorner}\r\n                        style={this._shallow.crnHeaders({\r\n                            ...this._theme.styles.gridCorner,\r\n                            pointerEvents: 'initial',\r\n                            position: 'absolute',\r\n                            overflow: 'hidden',\r\n                            left: 0,\r\n                            top: 0,\r\n                            height: this.props.headers.headersHeight,\r\n                            width: this.props.headers.headersWidth\r\n                        })}\r\n                    >\r\n                    </div>\r\n                }\r\n                {this._renderResizing(event)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderSelections(): JSX.Element[] {\r\n        if (!this.props.headers.columns.length || !this.props.headers.rows.length) {\r\n            return null;\r\n        }\r\n\r\n        let jsx = this.state.selection.map(({ row, column, width, height }, i) => {\r\n            let l = this.props.headers.getPosition(this.props.headers.columns[column]);\r\n            let t = this.props.headers.getPosition(this.props.headers.rows[row]);\r\n            let w = this.props.headers.columns.slice(column, column + width + 1).reduce((r, n) => r + n.$size, 0);\r\n            let h = this.props.headers.rows.slice(row, row + height + 1).reduce((r, n) => r + n.$size, 0);\r\n\r\n            return this.props.onRenderSelection({\r\n                key: i,\r\n                active: false,\r\n                edit: !!this.state.edit,\r\n                theme: this.props.theme,\r\n                style: {\r\n                    position: 'absolute',\r\n                    zIndex: i,\r\n                    left: l,\r\n                    top: t,\r\n                    width: w,\r\n                    height: h\r\n                }\r\n            });\r\n        });\r\n\r\n        let ax = jsx.length;\r\n\r\n        let rh = this.props.headers.rows[this.state.active.row];\r\n        let ch = this.props.headers.columns[this.state.active.column];\r\n\r\n        jsx.push(this.props.onRenderSelection({\r\n            key: ax,\r\n            active: true,\r\n            edit: !!this.state.edit,\r\n            theme: this.props.theme,\r\n            style: {\r\n                position: 'absolute',\r\n                zIndex: ax,\r\n                left: this.props.headers.getPosition(ch),\r\n                top: this.props.headers.getPosition(rh),\r\n                width: ch.$size,\r\n                height: rh.$size\r\n            }\r\n        }));\r\n\r\n        return jsx;\r\n    }\r\n\r\n    public focus() {\r\n        if (this._ref) {\r\n            this._ref.focus();\r\n        }\r\n    }\r\n\r\n    public blur() {\r\n        if (this._ref) {\r\n            this._ref.blur();\r\n        }\r\n    }\r\n\r\n    /** TODO: instead of using column index - use cell position and viewport minus scroll size */\r\n    public scrollTo(cell: { column?: number; row?: number; }) {\r\n        if (!this._refView || !this.props.headers.columns.length || !this.props.headers.rows.length) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastColumn, lastRow } = this._lastView;\r\n        let { column, row } = cell;\r\n\r\n        if (row != null) {\r\n            row = Math.min(Math.max(0, row), this._rowCount - 1);\r\n            if (row <= firstRow || row >= lastRow) {\r\n                let rowPos = this.props.headers.getPosition(this.props.headers.rows[row]);\r\n                if (row <= firstRow) { // to top\r\n                    this._refView.scrollTop = rowPos;\r\n                } else { // to bottom\r\n                    let rowSize = this.props.headers.rows[row].$size;\r\n                    this._refView.scrollTop = rowPos + rowSize - this.state.viewHeight + this._headersHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (column != null) {\r\n            column = Math.min(Math.max(0, column), this._columnCount - 1);\r\n            if (column <= firstColumn || column >= lastColumn) {\r\n                let colPos = this.props.headers.getPosition(this.props.headers.columns[column]);\r\n                if (column <= firstColumn) { // to left\r\n                    this._refView.scrollLeft = colPos;\r\n                } else { // to right\r\n                    let colSize = this.props.headers.columns[column].$size;\r\n                    this._refView.scrollLeft = colPos + colSize - this.state.viewWidth + this._headersWidth;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public openEditor = (cell: IGridAddress) => {\r\n        let e = this.state.edit;\r\n\r\n        if (e) {\r\n            if (e.row === cell.row && e.column === cell.column) {\r\n                return;\r\n            }\r\n\r\n            this.closeEditor(true, () => {\r\n                this.setState({ edit: cell });\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: cell });\r\n    }\r\n\r\n    public closeEditor = (commit: boolean, callback?: () => void) => {\r\n        if (!this.state.edit) {\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.setState({ edit: null }, () => {\r\n            let e = this._currentEdit;\r\n            this._currentEdit = null;\r\n            this.focus();\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            if (this.props.onUpdate && e) {\r\n                let { col, row, nextValue, updatedValue } = e;\r\n\r\n                if (commit && updatedValue) {\r\n                    this.props.onUpdate({ cell: { row, column: col }, value: nextValue });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public resizeHeaders(e: IGridResizeHeadersEvent) {\r\n        if (this.props.onHeaderResize) {\r\n            this.props.onHeaderResize(e);\r\n        }\r\n    }\r\n\r\n    public resizeLevel(e: IGridResizeHeaderLevelEvent) {\r\n        if (this.props.onHeaderLevelResize) {\r\n            this.props.onHeaderLevelResize(e);\r\n        }\r\n    }\r\n\r\n    public autoMeasure(headers: IHeader[]) {\r\n        if (this.state.edit || !this.props.onAutoMeasure || !this.props.onHeaderResize || !this._lastView) {\r\n            return;\r\n        }\r\n\r\n        const { firstColumn, firstRow, lastRow, lastColumn } = this._lastView;\r\n\r\n        if (firstColumn === -1 || firstRow === -1) {\r\n            return;\r\n        }\r\n\r\n        const batch = headers.map(h => this.props.headers.getHeaderLeaves(h));\r\n        const { columns, rows } = this.props.headers;\r\n        const cells: ICellRenderBaseEvent[] = [];\r\n\r\n        for (let list of batch) {\r\n            for (let h of list) {\r\n                let t = this.props.headers.getHeaderType(h);\r\n\r\n                if (t === HeaderType.Column) {\r\n                    let c = this.props.headers.getViewIndex(h);\r\n\r\n                    for (let r = firstRow; r <= lastRow; r++) {\r\n                        cells.push({\r\n                            columnIndex: c,\r\n                            rowIndex: r,\r\n                            source: this.props.source,\r\n                            columnHeader: columns[c],\r\n                            rowHeader: rows[r]\r\n                        });\r\n                    }\r\n                } else {\r\n                    let r = this.props.headers.getViewIndex(h);\r\n\r\n                    for (let c = firstColumn; c <= lastColumn; c++) {\r\n                        cells.push({\r\n                            columnIndex: c,\r\n                            rowIndex: r,\r\n                            source: this.props.source,\r\n                            columnHeader: columns[c],\r\n                            rowHeader: rows[r]\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n\r\n        this.props.onAutoMeasure({\r\n            cells,\r\n            callback: (result: ICellMeasureResult[]) => {\r\n                this._onAutoMeasureApply(result, 'reset');\r\n            }\r\n        });\r\n    }\r\n\r\n    public previewResizeHeader(resizeHeaderPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeHeaderPreview });\r\n    }\r\n\r\n    public previewResizeLevel(resizeLevelPreview: { header: IHeader; change: number; }) {\r\n        this.setState({ resizeLevelPreview });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        document.body.addEventListener('contextmenu', this._onContextMenuListener = (e: any) => {\r\n            if (this._blockContextMenu) {\r\n                this._blockContextMenu = false;\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    public componentDidUpdate() {\r\n        this._onAfterUpdate();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.body.removeEventListener('contextmenu', this._onContextMenuListener);\r\n        this._kbCtr.dispose();\r\n        this._msCtr.dispose();\r\n    }\r\n\r\n    public render() {\r\n        this._createView();\r\n        this._createOverscan();\r\n\r\n        const { rowsHeight, columnsWidth } = this._lastView;\r\n\r\n        return (\r\n            <div\r\n                className={this._theme.classNames.grid}\r\n                tabIndex={this.props.tabIndex == null ? -1 : this.props.tabIndex}\r\n                ref={this._onRef}\r\n                onBlur={this._onBlur}\r\n                onFocus={this._onFocus}\r\n                style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    userSelect: 'none',\r\n                    outline: 'none',\r\n                    ...this._theme.styles.grid\r\n                }}\r\n                onKeyDown={this._onKeyDown}\r\n                onMouseLeave={this._onRootMouseLeave}\r\n                onMouseEnter={this._onRootMouseEnter}\r\n                onMouseDown={this._onRootMouseDown}\r\n            >\r\n                <ScrollView\r\n                    hover={this._theme.hover}\r\n                    ref={this._onRefView}\r\n                    onUpdate={this._onScrollViewUpdate}\r\n                    scrollerProps={this._scrollerProps}\r\n                    after={this._renderHeaderContainers}\r\n                    theme={this.props.theme}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: rowsHeight,\r\n                            width: columnsWidth,\r\n                            boxSizing: 'border-box',\r\n                            position: 'relative',\r\n                            marginLeft: this._headersWidth,\r\n                            marginTop: this._headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderData()}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            pointerEvents: 'none',\r\n                            zIndex: 1,\r\n                            left: this._headersWidth,\r\n                            top: this._headersHeight\r\n                        }}\r\n                    >\r\n                        {this._renderSelections()}\r\n                    </div>\r\n                </ScrollView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/grid.tsx","export function debounce(time: number, fn: Function) {\r\n    let task: any = null;\r\n\r\n    return (...args: any[]) => {\r\n        if (task) {\r\n            clearTimeout(task);\r\n        }\r\n\r\n        task = setTimeout(() => {\r\n            task = null;\r\n            fn(...args);\r\n        }, time);\r\n    };\r\n}\r\n\r\nexport default debounce;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/debounce.ts","import { KeyboardEvent } from 'react';\r\nimport { IGridAddress, IGridSelection } from '../components';\r\nimport { Controller, IControllerProps } from './controller';\r\n\r\nexport interface IKeyboardControllerRemoveEvent {\r\n    rows: number[];\r\n    columns: number[];\r\n}\r\n\r\nexport interface IKeyboardControllerPasteEvent {\r\n    clipboard: DataTransfer;\r\n    getAllSelectedCells: () => IGridAddress[];\r\n    getLastSelectedCells: () => IGridAddress[];\r\n}\r\n\r\nexport interface IKeyboardControllerProps extends IControllerProps {\r\n    onNullify: (cells: IGridAddress[]) => void;\r\n    onRemove: (props: IKeyboardControllerRemoveEvent) => void;\r\n    onSpace: (cells: IGridAddress[]) => void;\r\n    onCopy: (cells: IGridAddress[], withHeaders: boolean) => void;\r\n    onPaste: (event: IKeyboardControllerPasteEvent) => void;\r\n}\r\n\r\nexport class KeyboardController extends Controller {\r\n    constructor(protected _props: IKeyboardControllerProps) {\r\n        super(_props);\r\n\r\n        document.body.addEventListener('paste', this._paste);\r\n    }\r\n\r\n    private _isInput(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { keyCode } = e;\r\n        const { ctrlKey, altKey, macCmdKey } = this._getModifiers(e);\r\n\r\n        if (ctrlKey || altKey || macCmdKey) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            (48 <= keyCode && keyCode <= 57) ||\r\n            (65 <= keyCode && keyCode <= 90) ||\r\n            (96 <= keyCode && keyCode <= 111) ||\r\n            (186 <= keyCode && keyCode <= 222)\r\n        );\r\n    }\r\n\r\n    private _moveSelection(shiftKey: boolean, cmdKey: boolean, direction: 'left' | 'up' | 'right' | 'down', distance: number) {\r\n        const { active, rows, columns, selection } = this._state;\r\n\r\n        let nextScroll: IGridAddress = null;\r\n        let nextActive: IGridAddress = null;\r\n        let nextSelection: IGridSelection[] = null;\r\n\r\n        if (shiftKey && cmdKey) {\r\n            let { prev, last } = this._splitSelection(selection);\r\n            let next: IGridSelection = null;\r\n\r\n            switch (direction) {\r\n                case 'left':\r\n                    next = {\r\n                        ...last,\r\n                        column: 0,\r\n                        width: active.column\r\n                    };\r\n                    nextScroll = {\r\n                        row: null,\r\n                        column: 0\r\n                    };\r\n                    break;\r\n\r\n                case 'up':\r\n                    next = {\r\n                        ...last,\r\n                        row: 0,\r\n                        height: active.row\r\n                    };\r\n                    nextScroll = {\r\n                        row: 0,\r\n                        column: null\r\n                    };\r\n                    break;\r\n\r\n                case 'right':\r\n                    next = {\r\n                        ...last,\r\n                        column: active.column,\r\n                        width: columns - active.column - 1\r\n                    };\r\n                    nextScroll = {\r\n                        row: null,\r\n                        column: columns - 1\r\n                    };\r\n                    break;\r\n\r\n                case 'down':\r\n                    next = {\r\n                        ...last,\r\n                        row: active.row,\r\n                        height: rows - active.row - 1\r\n                    };\r\n                    nextScroll = {\r\n                        row: rows - 1,\r\n                        column: null\r\n                    };\r\n                    break;\r\n            }\r\n\r\n            if (next) {\r\n                nextSelection = [\r\n                    ...prev,\r\n                    next\r\n                ];\r\n            }\r\n        } else if (cmdKey) {\r\n            switch (direction) {\r\n                case 'left':\r\n                    nextActive = this._clampAddress({ row: active.row, column: 0 });\r\n                    break;\r\n\r\n                case 'up':\r\n                    nextActive = this._clampAddress({ row: 0, column: active.column });\r\n                    break;\r\n\r\n                case 'right':\r\n                    nextActive = this._clampAddress({ row: active.row, column: columns - 1 });\r\n                    break;\r\n\r\n                case 'down':\r\n                    nextActive = this._clampAddress({ row: rows - 1, column: active.column });\r\n                    break;\r\n            }\r\n\r\n            nextScroll = nextActive;\r\n\r\n            nextSelection = [{\r\n                ...nextActive,\r\n                width: 0,\r\n                height: 0\r\n            }];\r\n        } else if (shiftKey) {\r\n            let { prev, last } = this._splitSelection(selection);\r\n            let next: IGridSelection = null;\r\n            let delta = distance;\r\n\r\n            switch (direction) {\r\n                case 'left':\r\n                    if (last.column + last.width === active.column) {\r\n                        if (last.column) {\r\n                            let newColumn = last.column - distance;\r\n\r\n                            if (newColumn < 0) {\r\n                                delta = distance + newColumn;\r\n                                newColumn = 0;\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                column: newColumn,\r\n                                width: last.width + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: next.column,\r\n                                row: null\r\n                            };\r\n                        }\r\n                    } else if (last.width) {\r\n                        let newWidth = last.width - distance;\r\n\r\n                        if (newWidth < 0) {\r\n                            delta = distance + newWidth;\r\n                            newWidth = 0;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            column: last.column,\r\n                            width: newWidth\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: next.column + last.width - delta,\r\n                            row: null\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'up':\r\n                    if (last.row + last.height === active.row) {\r\n                        if (last.row) {\r\n                            let newRow = last.row - distance;\r\n\r\n                            if (newRow < 0) {\r\n                                delta = distance + newRow;\r\n                                newRow = 0;\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                row: newRow,\r\n                                height: last.height + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: null,\r\n                                row: next.row\r\n                            };\r\n                        }\r\n                    } else if (last.height) {\r\n                        let newHeight = last.height - distance;\r\n\r\n                        if (newHeight < 0) {\r\n                            delta = distance + newHeight;\r\n                            newHeight = 0;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            row: last.row,\r\n                            height: newHeight\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: null,\r\n                            row: next.row + last.height - delta\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'right':\r\n                    if (last.column === active.column) {\r\n                        let lastPos = last.column + last.width;\r\n                        if (lastPos < columns - 1) {\r\n                            if (lastPos + distance > columns - 1) {\r\n                                delta = (\r\n                                    distance >= columns - 1 - lastPos\r\n                                        ? columns - 1 - last.column\r\n                                        : last.width + distance - columns - 1\r\n                                );\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                width: last.width + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: next.column + next.width,\r\n                                row: null\r\n                            };\r\n                        }\r\n                    } else if (last.width) {\r\n                        if (last.column + delta > active.column) {\r\n                            delta = active.column - last.column;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            column: last.column + delta,\r\n                            width: last.width - delta\r\n                        };\r\n\r\n                        nextScroll = {\r\n                            column: next.column,\r\n                            row: null\r\n                        };\r\n                    }\r\n                    break;\r\n\r\n                case 'down':\r\n                    if (last.row === active.row) {\r\n                        let lastPos = last.row + last.height;\r\n\r\n                        if (lastPos < rows - 1) {\r\n                            if (lastPos + distance > rows - 1) {\r\n                                delta = (\r\n                                    distance >= rows - 1 - lastPos\r\n                                        ? rows - 1 - last.row\r\n                                        : lastPos + distance - rows - 1\r\n                                );\r\n                            }\r\n\r\n                            next = {\r\n                                ...last,\r\n                                height: last.height + delta\r\n                            };\r\n\r\n                            nextScroll = {\r\n                                column: null,\r\n                                row: next.row + next.height\r\n                            };\r\n                        }\r\n                    } else if (last.height) {\r\n                        if (last.row + delta > active.row) {\r\n                            delta = active.row - last.row;\r\n                        }\r\n\r\n                        next = {\r\n                            ...last,\r\n                            row: last.row + delta,\r\n                            height: last.height - delta\r\n                        };\r\n                        nextScroll = {\r\n                            column: null,\r\n                            row: next.row\r\n                        };\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (next) {\r\n                nextSelection = [\r\n                    ...prev,\r\n                    next\r\n                ];\r\n            }\r\n        } else {\r\n            switch (direction) {\r\n                case 'left':\r\n                    nextActive = this._clampAddress({ row: active.row, column: active.column - distance });\r\n                    break;\r\n\r\n                case 'up':\r\n                    nextActive = this._clampAddress({ row: active.row - distance, column: active.column });\r\n                    break;\r\n\r\n                case 'right':\r\n                    nextActive = this._clampAddress({ row: active.row, column: active.column + distance });\r\n                    break;\r\n\r\n                case 'down':\r\n                    nextActive = this._clampAddress({ row: active.row + distance, column: active.column });\r\n                    break;\r\n            }\r\n\r\n            nextScroll = nextActive;\r\n\r\n            nextSelection = [{\r\n                ...nextActive,\r\n                width: 0,\r\n                height: 0\r\n            }];\r\n        }\r\n\r\n        if (nextActive || nextSelection) {\r\n            this._props.onUpdateSelection({\r\n                active: nextActive,\r\n                selection: nextSelection\r\n            });\r\n        }\r\n\r\n        if (nextScroll) {\r\n            this._props.onScroll(nextScroll);\r\n        }\r\n    }\r\n\r\n    private _onTab(e: KeyboardEvent<HTMLDivElement>, callback?: () => void) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let { active, rows, columns, selection } = this._state;\r\n\r\n        if (cmdKey) {\r\n            return;\r\n        }\r\n\r\n        let { last } = this._splitSelection(selection);\r\n        let firstRow = 0;\r\n        let firstColumn = 0;\r\n        let lastRow = rows - 1;\r\n        let lastColumn = columns - 1;\r\n        let insideSelection = false;\r\n        active = { ...active };\r\n\r\n        if (last.height || last.width) {\r\n            insideSelection = true;\r\n            firstRow = last.row;\r\n            firstColumn = last.column;\r\n            lastRow = firstRow + last.height;\r\n            lastColumn = firstColumn + last.width;\r\n        }\r\n\r\n        if (shiftKey) {\r\n            active.column--;\r\n            if (active.column < firstColumn) {\r\n                active.column = lastColumn;\r\n                active.row--;\r\n            }\r\n\r\n            if (active.row < firstRow) {\r\n                active.row = lastRow;\r\n            }\r\n        } else {\r\n            active.column++;\r\n\r\n            if (active.column > lastColumn) {\r\n                active.column = firstColumn;\r\n                active.row++;\r\n            }\r\n\r\n            if (active.row > lastRow) {\r\n                active.row = firstRow;\r\n            }\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: active,\r\n            selection: (\r\n                insideSelection\r\n                    ? null\r\n                    : [{ ...active, height: 0, width: 0 }]\r\n            )\r\n        }, () => {\r\n            this._props.onScroll(active);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private _onEnter(e: KeyboardEvent<HTMLDivElement>, callback?: () => void) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let { active, rows, selection } = this._state;\r\n\r\n        if (cmdKey) {\r\n            this._props.onOpenEditor(active);\r\n            return;\r\n        }\r\n\r\n        let { last } = this._splitSelection(selection);\r\n        let firstRow = 0;\r\n        let firstColumn = active.column;\r\n        let lastRow = rows - 1;\r\n        let lastColumn = active.column;\r\n        let insideSelection = false;\r\n        active = { ...active };\r\n\r\n        if (last.height || last.width) {\r\n            insideSelection = true;\r\n            firstRow = last.row;\r\n            firstColumn = last.column;\r\n            lastRow = firstRow + last.height;\r\n            lastColumn = firstColumn + last.width;\r\n        }\r\n\r\n        if (shiftKey) {\r\n            active.row--;\r\n\r\n            if (insideSelection) {\r\n                if (active.row < firstRow) {\r\n                    active.row = lastRow;\r\n                    active.column--;\r\n                }\r\n\r\n                if (active.column < firstColumn) {\r\n                    active.column = lastColumn;\r\n                }\r\n            } else if (active.row < 0) {\r\n                active.row = 0;\r\n            }\r\n        } else {\r\n            active.row++;\r\n\r\n            if (insideSelection) {\r\n                if (active.row > lastRow) {\r\n                    active.row = firstRow;\r\n                    active.column++;\r\n                }\r\n\r\n                if (active.column > lastColumn) {\r\n                    active.column = firstColumn;\r\n                }\r\n            } else if (active.row > rows - 1) {\r\n                active.row = rows - 1;\r\n            }\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: active,\r\n            selection: (\r\n                insideSelection\r\n                    ? null\r\n                    : [{ ...active, height: 0, width: 0 }]\r\n            )\r\n        }, () => {\r\n            this._props.onScroll(active);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private _onSpace(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onSpace(cells);\r\n    }\r\n\r\n    private _onPageUpDown(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey, altKey } = this._getModifiers(e);\r\n        let { view } = this._state;\r\n        let direction: 'left' | 'right' | 'up' | 'down' = (\r\n            e.keyCode === 33\r\n                ? altKey\r\n                    ? 'left'\r\n                    : 'up'\r\n                : altKey\r\n                    ? 'right'\r\n                    : 'down'\r\n        );\r\n\r\n        let pageColumns = view.lastColumn - view.firstColumn;\r\n        let pageRows = view.lastRow - view.firstRow;\r\n\r\n\r\n        switch (e.keyCode) {\r\n            case 37: direction = 'left'; break;\r\n            case 38: direction = 'up'; break;\r\n            case 39: direction = 'right'; break;\r\n            case 40: direction = 'down'; break;\r\n        }\r\n\r\n        this._moveSelection(shiftKey, cmdKey, direction, altKey ? pageColumns : pageRows);\r\n    }\r\n\r\n    private _onHomeEnd(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { shiftKey, cmdKey, altKey } = this._getModifiers(e);\r\n\r\n        if (altKey) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        let direction: 'home' | 'end' = e.keyCode === 36 ? 'home' : 'end';\r\n        let { active, rows, columns, selection } = this._state;\r\n        let nextActive: IGridAddress = null;\r\n        let nextSelection: IGridSelection[] = null;\r\n\r\n        let nextScroll: IGridAddress = {\r\n            row: cmdKey ? direction === 'home' ? 0 : (rows - 1) : active.row,\r\n            column: direction === 'home' ? 0 : (columns - 1)\r\n        };\r\n\r\n        if (shiftKey) {\r\n            let { prev } = this._splitSelection(selection);\r\n\r\n            nextSelection = [\r\n                ...prev,\r\n                {\r\n                    row: cmdKey && direction === 'home' ? 0 : active.row,\r\n                    column: direction === 'home' ? 0 : active.column,\r\n                    height: cmdKey ? (direction === 'home' ? active.row : rows - active.row - 1) : 0,\r\n                    width: direction === 'home' ? active.column : columns - active.column - 1\r\n                }\r\n            ];\r\n        } else {\r\n            nextActive = nextScroll;\r\n            nextSelection = [{ ...nextActive, width: 0, height: 0 }];\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            active: nextActive,\r\n            selection: nextSelection\r\n        });\r\n\r\n        this._props.onScroll(nextScroll);\r\n    }\r\n\r\n    private _onArrows(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { shiftKey, cmdKey } = this._getModifiers(e);\r\n        let direction: 'left' | 'up' | 'down' | 'right';\r\n\r\n        switch (e.keyCode) {\r\n            case 37: direction = 'left'; break;\r\n            case 38: direction = 'up'; break;\r\n            case 39: direction = 'right'; break;\r\n            case 40: direction = 'down'; break;\r\n        }\r\n\r\n        this._moveSelection(shiftKey, cmdKey, direction, 1);\r\n    }\r\n\r\n    private _onCopy(withHeaders: boolean) {\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onCopy(cells, withHeaders);\r\n    }\r\n\r\n    private _onNullify() {\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        const cells = this._getSelectedCells(this._state.selection);\r\n        this._props.onNullify(cells);\r\n    }\r\n\r\n    private _onRemove() {\r\n        if (this._state.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let rowMap: { [row: number]: boolean } = {};\r\n        let colMap: { [col: number]: boolean } = {};\r\n\r\n        this._getSelectedCells(this._state.selection).forEach(({ column, row }) => {\r\n            if (!rowMap[row]) {\r\n                rowMap[row] = true;\r\n            }\r\n\r\n            if (!colMap[column]) {\r\n                colMap[row] = true;\r\n            }\r\n        });\r\n\r\n        this._props.onRemove({\r\n            rows: Object.keys(rowMap).map(Number).sort(),\r\n            columns: Object.keys(colMap).map(Number).sort()\r\n        });\r\n    }\r\n\r\n    private _onSelectAll(e: KeyboardEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n\r\n        const { cmdKey } = this._getModifiers(e);\r\n\r\n        if (!cmdKey) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns } = this._state;\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [{\r\n                row: 0,\r\n                column: 0,\r\n                width: columns - 1,\r\n                height: rows - 1\r\n            }]\r\n        });\r\n    }\r\n\r\n    private _onData(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { cmdKey, altKey, shiftKey } = this._getModifiers(e);\r\n\r\n        switch (e.keyCode) {\r\n            case 45: // insert\r\n                if (!shiftKey && !cmdKey) {\r\n                    break;\r\n                }\r\n\r\n                if (shiftKey && !cmdKey) {\r\n                    // this._onPaste();\r\n                } else if (!shiftKey && cmdKey) {\r\n                    e.preventDefault();\r\n                    this._onCopy(altKey);\r\n                }\r\n                break;\r\n\r\n            case 8: // backspace\r\n            case 46: // delete\r\n                e.preventDefault();\r\n                if (shiftKey && !cmdKey) {\r\n                    this._onCopy(false);\r\n                    this._onNullify();\r\n                } else if (!shiftKey && cmdKey) {\r\n                    this._onRemove();\r\n                } else if (!shiftKey && !cmdKey) {\r\n                    this._onNullify();\r\n                }\r\n                break;\r\n\r\n            case 67: // c\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n                e.preventDefault();\r\n                this._onCopy(altKey);\r\n                break;\r\n\r\n            case 86: // v\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n\r\n                // this._onPaste();\r\n                break;\r\n\r\n            case 88: // x\r\n                if (!cmdKey) {\r\n                    break;\r\n                }\r\n                e.preventDefault();\r\n                this._onCopy(false);\r\n                this._onNullify();\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected _paste = (e: ClipboardEvent) => {\r\n        const { focused, readOnly, selection } = this._props.getState();\r\n\r\n        if (!focused || readOnly) {\r\n            return;\r\n        }\r\n\r\n        this._props.onPaste({\r\n            clipboard: e.clipboardData,\r\n            getAllSelectedCells: () => {\r\n                return this._getSelectedCells(selection);\r\n            },\r\n            getLastSelectedCells: () => {\r\n                let { last } = this._splitSelection(selection);\r\n                return this._getSelectedCells([last]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public keydown(e: KeyboardEvent<HTMLDivElement>) {\r\n        const { editor, active, focused, rows, columns } = this._request();\r\n\r\n        if (!rows || !columns) {\r\n            return;\r\n        }\r\n\r\n        if (editor) {\r\n            switch (e.keyCode) {\r\n                case 9: // tab\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._onTab(e, () => {\r\n                            this._props.onOpenEditor(this._request().active);\r\n                        });\r\n                    });\r\n                    break;\r\n\r\n                case 13: // enter\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._onEnter(e, () => {\r\n                            this._props.onOpenEditor(this._request().active);\r\n                        });\r\n                    });\r\n                    break;\r\n\r\n                case 27: // esc\r\n                    this._props.onCloseEditor(false);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!focused) {\r\n            return;\r\n        }\r\n\r\n        if (this._isInput(e)) {\r\n            this._props.onOpenEditor(active);\r\n            return;\r\n        }\r\n\r\n        switch (e.keyCode) {\r\n            case 9: // tab\r\n                this._onTab(e);\r\n                break;\r\n\r\n            case 13: // enter\r\n                this._onEnter(e);\r\n                break;\r\n\r\n            case 32: // space\r\n                this._onSpace(e);\r\n                break;\r\n\r\n            case 33: // page up\r\n            case 34: // page down\r\n                this._onPageUpDown(e);\r\n                break;\r\n\r\n            case 35: // end\r\n            case 36: // home\r\n                this._onHomeEnd(e);\r\n                break;\r\n\r\n            case 37: // left\r\n            case 38: // up\r\n            case 39: // right\r\n            case 40: // down\r\n                this._onArrows(e);\r\n                break;\r\n\r\n            case 65: // a\r\n                this._onSelectAll(e);\r\n                break;\r\n\r\n            case 8: // backspace\r\n            case 45: // insert\r\n            case 46: // delete\r\n            case 67: // c\r\n            case 86: // v\r\n            case 88: // x\r\n                this._onData(e);\r\n                break;\r\n\r\n            case 113: // F2\r\n                this._props.onOpenEditor({ ...active });\r\n                break;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        document.body.removeEventListener('paste', this._paste);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/keyboard.ts","import { MouseEvent } from 'react';\r\nimport { IGridAddress } from '../components';\r\nimport { HeaderType } from '../models';\r\nimport { Controller, IControllerProps } from './controller';\r\n\r\nexport interface IMouseControllerProps extends IControllerProps {\r\n    onRightClick: (cell: IGridAddress) => void;\r\n}\r\n\r\nexport class MouseController extends Controller {\r\n    protected _lastMouseDown = {\r\n        time: 0,\r\n        row: -1,\r\n        column: -1\r\n    };\r\n    protected _down: {\r\n        row: number;\r\n        column: number;\r\n    } = null;\r\n    protected _scrollBySelect: { h: 'L' | 'R', v: 'T' | 'B' } = null;\r\n    protected _scrollTask: any = null;\r\n\r\n    constructor(protected _props: IMouseControllerProps) {\r\n        super(_props);\r\n        window.addEventListener('mouseup', this._mouseup);\r\n    }\r\n\r\n    protected _mouseSelectFromActive(row: number, column: number) {\r\n        let { selection, active } = this._state;\r\n        let { prev } = this._splitSelection(selection);\r\n        let last = { row, column, width: 0, height: 0 };\r\n\r\n        if (column <= active.column) {\r\n            last.width = active.column - column;\r\n        } else {\r\n            last.column = active.column;\r\n            last.width = column - active.column;\r\n        }\r\n\r\n        if (row <= active.row) {\r\n            last.height = active.row - row;\r\n        } else {\r\n            last.row = active.row;\r\n            last.height = row - active.row;\r\n        }\r\n\r\n        this._props.onUpdateSelection({\r\n            selection: [\r\n                ...prev,\r\n                last\r\n            ]\r\n        });\r\n    }\r\n\r\n    protected _autoscroll = () => {\r\n        if (!this._scrollBySelect) {\r\n            return;\r\n        }\r\n\r\n        let { rows, columns, view } = this._request();\r\n        let { h, v } = this._scrollBySelect;\r\n        let scroll = {\r\n            row: null as number,\r\n            column: null as number\r\n        };\r\n\r\n        if (h === 'L') {\r\n            if (view.firstColumn) {\r\n                scroll.column = view.firstColumn - 1;\r\n            }\r\n        } else if (h === 'R') {\r\n            if (view.lastColumn !== columns - 1) {\r\n                scroll.column = view.lastColumn + 1;\r\n            }\r\n        }\r\n\r\n        if (v === 'T') {\r\n            if (view.firstRow) {\r\n                scroll.row = view.firstRow - 1;\r\n            }\r\n        } else if (v === 'B') {\r\n            if (view.lastRow !== rows - 1) {\r\n                scroll.row = view.lastRow + 1;\r\n            }\r\n        }\r\n\r\n        this._props.onScroll(scroll);\r\n    }\r\n\r\n    protected _mouseup = () => {\r\n        this._down = null;\r\n        this.rootenter();\r\n    }\r\n\r\n    public rootleave(x: number, y: number, rect: ClientRect) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n\r\n        this._scrollBySelect = {\r\n            h: null,\r\n            v: null\r\n        };\r\n\r\n        if (x < rect.left) {\r\n            this._scrollBySelect.h = 'L';\r\n        } else if (x > rect.left + rect.width) {\r\n            this._scrollBySelect.h = 'R';\r\n        }\r\n\r\n        if (y < rect.top) {\r\n            this._scrollBySelect.v = 'T';\r\n        } else if (y > rect.top + rect.height) {\r\n            this._scrollBySelect.v = 'B';\r\n        }\r\n\r\n        this._scrollTask = setInterval(this._autoscroll, 50);\r\n    }\r\n\r\n    public rootenter() {\r\n        if (this._scrollTask) {\r\n            clearInterval(this._scrollTask);\r\n            this._scrollTask = null;\r\n        }\r\n\r\n        this._scrollBySelect = null;\r\n    }\r\n\r\n    public mouseenter(row: number, column: number) {\r\n        if (!this._down) {\r\n            return;\r\n        }\r\n\r\n        this._request();\r\n        this._mouseSelectFromActive(row, column);\r\n    }\r\n\r\n    public headerdown(e: MouseEvent<HTMLElement>, type: HeaderType, first: number, last = first) {\r\n        if (e.defaultPrevented) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        const { editor, rows, columns } = this._request();\r\n\r\n        if (editor) {\r\n            return;\r\n        }\r\n\r\n        let { shiftKey } = this._getModifiers(e);\r\n\r\n        if (shiftKey) {\r\n\r\n        } else {\r\n            let active = {\r\n                row: type === HeaderType.Column ? 0 : first,\r\n                column: type === HeaderType.Column ? first : 0\r\n            };\r\n\r\n            this._props.onUpdateSelection({\r\n                active,\r\n                selection: [{\r\n                    ...active,\r\n                    height: type === HeaderType.Column ? rows - 1 : last - first,\r\n                    width: type === HeaderType.Column ? last - first : columns - 1\r\n                }]\r\n            });\r\n        }\r\n    }\r\n\r\n    public mousedown(e: MouseEvent<HTMLElement>, row: number, column: number) {\r\n        const { selection, editor } = this._request();\r\n        const { cmdKey, shiftKey } = this._getModifiers(e);\r\n\r\n        const clickInEditor = editor && editor.row === row && editor.column === column;\r\n\r\n        if (!clickInEditor && e.button !== 1) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (editor && !clickInEditor && e.button !== 1) {\r\n            this._props.onCloseEditor(true);\r\n        }\r\n\r\n        if (!cmdKey && shiftKey && e.button === 0) {\r\n            this._mouseSelectFromActive(row, column);\r\n            this._down = { row, column };\r\n        } else if (cmdKey && !shiftKey && e.button == 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [\r\n                    ...selection,\r\n                    { row, column, height: 0, width: 0 }\r\n                ]\r\n            });\r\n            this._down = { row, column };\r\n        } else if (e.button === 0) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            let t = Date.now();\r\n            let openEditor = (\r\n                !clickInEditor &&\r\n                t - this._lastMouseDown.time < 500 &&\r\n                this._lastMouseDown.row === row &&\r\n                this._lastMouseDown.column === column\r\n            );\r\n\r\n            this._lastMouseDown.time = t;\r\n            this._lastMouseDown.row = row;\r\n            this._lastMouseDown.column = column;\r\n\r\n            if (openEditor) {\r\n                this._down = null;\r\n                if (editor) {\r\n                    this._props.onCloseEditor(true, () => {\r\n                        this._props.onOpenEditor({ row, column });\r\n                    });\r\n                } else {\r\n                    this._props.onOpenEditor({ row, column });\r\n                }\r\n            } else {\r\n                this._down = { row, column };\r\n            }\r\n        } else if (e.button === 2) {\r\n            this._props.onUpdateSelection({\r\n                active: { row, column },\r\n                selection: [{ row, column, height: 0, width: 0 }]\r\n            });\r\n\r\n            try {\r\n                this._props.onRightClick({ row, column });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this.rootenter();\r\n        window.removeEventListener('mouseup', this._mouseup);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/mouse.ts","import { IHeader, HeaderType } from './header';\r\n\r\nexport type HeaderResizeBehavior = 'auto' | 'manual' | 'reset';\r\n\r\nexport type IContainerHeadersFilter = (h: IHeader, type: HeaderType) => boolean;\r\n\r\nexport type HeaderClampFunction = (props: { header: IHeader, type: HeaderType, size: number }) => number;\r\n\r\nexport interface IContainerProps {\r\n    rows: IHeader[];\r\n    columns: IHeader[];\r\n\r\n    columnWidth: number;\r\n    rowHeight: number;\r\n    headersHeight: number;\r\n    headersWidth: number;\r\n\r\n    filter?: IContainerHeadersFilter;\r\n}\r\n\r\nexport interface IContainerState extends IContainerProps {\r\n    viewColumns: IHeader[];\r\n    viewRows: IHeader[];\r\n    viewLeftLevels: number;\r\n    viewTopLevels: number;\r\n    leftLevels: { [level: number]: number };\r\n    topLevels: { [level: number]: number };\r\n    types: { [headerId: string]: HeaderType };\r\n    indices: { [headerId: string]: number };\r\n    positions: { [headerId: string]: number };\r\n    levels: { [headerId: string]: number };\r\n    parents: { [headerId: string]: IHeader };\r\n    manualResized: { [headerId: string]: boolean };\r\n}\r\n\r\nexport class HeadersContainer {\r\n    private _idCounter = 0;\r\n    private _state: IContainerState;\r\n    private _idMap: { [id: string]: IHeader; } = {};\r\n    private _headersWidth = 0;\r\n    private _headersHeight = 0;\r\n\r\n    constructor(props: IContainerProps) {\r\n        if (!props) {\r\n            return;\r\n        }\r\n\r\n        this._state = {\r\n            ...props,\r\n            viewColumns: null,\r\n            viewRows: null,\r\n            viewLeftLevels: 0,\r\n            viewTopLevels: 0,\r\n            leftLevels: {},\r\n            topLevels: {},\r\n            types: {},\r\n            indices: {},\r\n            positions: {},\r\n            levels: {},\r\n            parents: {},\r\n            manualResized: {}\r\n        };\r\n\r\n        this._state.viewColumns = this._create(props.columns, [], HeaderType.Column, props.filter);\r\n        this._state.viewRows = this._create(props.rows, [], HeaderType.Row, props.filter);\r\n\r\n        this._calcPosition();\r\n        this._calcLevels();\r\n    }\r\n\r\n    get headersWidth() {\r\n        return this._headersWidth;\r\n    }\r\n\r\n    get headersHeight() {\r\n        return this._headersHeight;\r\n    }\r\n\r\n    get topLevels() {\r\n        return this._state.viewTopLevels;\r\n    }\r\n\r\n    get leftLevels() {\r\n        return this._state.viewLeftLevels;\r\n    }\r\n\r\n    get columns() {\r\n        return this._state.viewColumns;\r\n    }\r\n\r\n    get rows() {\r\n        return this._state.viewRows;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            columns: this.columns,\r\n            rows: this.rows\r\n        };\r\n    }\r\n\r\n    private _create(\r\n        list: IHeader[],\r\n        out: IHeader[],\r\n        type: HeaderType,\r\n        filter?: (h: IHeader, type: HeaderType) => boolean,\r\n        assignParent?: IHeader\r\n    ) {\r\n        list.forEach((h) => {\r\n            h.$id = h.$id || ++this._idCounter;\r\n\r\n            this._state.positions[h.$id] = 0;\r\n\r\n            if (assignParent) {\r\n                this._state.parents[h.$id] = assignParent;\r\n            }\r\n\r\n            if (h.$collapsed || (filter && !filter(h, type))) {\r\n                return;\r\n            }\r\n\r\n            if ((h.$children && h.$children.length)) {\r\n                this._create(h.$children, out, type, filter, h);\r\n                return;\r\n            }\r\n\r\n            out.push(h);\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    private _createClone() {\r\n        let c = new HeadersContainer(null);\r\n\r\n        c._state = {\r\n            ...this._state,\r\n            leftLevels: { ...this._state.leftLevels },\r\n            topLevels: { ...this._state.topLevels },\r\n            types: { ...this._state.types },\r\n            indices: { ...this._state.indices },\r\n            positions: { ...this._state.positions },\r\n            levels: { ...this._state.levels },\r\n            parents: { ...this._state.parents },\r\n            manualResized: { ...this._state.manualResized }\r\n        };\r\n\r\n        return c;\r\n    }\r\n\r\n    private _applyHeaderLevel(h: IHeader) {\r\n        let level = 0;\r\n        let seek = h;\r\n\r\n        while (this._state.parents[seek.$id]) {\r\n            level++;\r\n            seek = this._state.parents[seek.$id];\r\n        }\r\n\r\n        this._state.levels[h.$id] = level;\r\n\r\n        if (this._state.parents[h.$id]) {\r\n            this._applyHeaderLevel(this._state.parents[h.$id]);\r\n        }\r\n\r\n        return level;\r\n    }\r\n\r\n    private _applyParentPosition(list: IHeader[], type: HeaderType) {\r\n        let lock: { [k: string]: boolean } = {};\r\n        let parents: IHeader[] = [];\r\n\r\n        list.forEach((h) => {\r\n            this._idMap[h.$id] = h;\r\n            this._state.types[h.$id] = type;\r\n\r\n            let first = h.$children[0];\r\n            let last = h.$children[h.$children.length - 1];\r\n\r\n            this._state.positions[h.$id] = this._state.positions[first.$id];\r\n            h.$size = this._state.positions[last.$id] + last.$size - this._state.positions[first.$id];\r\n\r\n            let parent = this._state.parents[h.$id];\r\n\r\n            if (parent && !lock[parent.$id]) {\r\n                lock[parent.$id] = true;\r\n                parents.push(parent);\r\n            }\r\n        });\r\n\r\n        if (parents.length) {\r\n            this._applyParentPosition(parents, type);\r\n        }\r\n    }\r\n\r\n    private _proceedHeaders(list: IHeader[], from: number, size: number, type: HeaderType) {\r\n        let cursor = this._state.positions[list[from].$id];\r\n        let len = list.length;\r\n\r\n        if (!len) {\r\n            return 0;\r\n        }\r\n\r\n        let levels = 0;\r\n        let lock: { [k: string]: boolean } = {};\r\n        let parents: IHeader[] = [];\r\n\r\n        for (let i = from; i < len; i++) {\r\n            let h = list[i];\r\n\r\n            if (!h.$size) {\r\n                h.$size = size;\r\n            }\r\n\r\n            this._state.indices[h.$id] = (h.$children && h.$children[0]) ? -1 : i;\r\n            this._state.positions[h.$id] = cursor;\r\n            cursor += h.$size;\r\n\r\n            this._state.types[h.$id] = type;\r\n\r\n            let l = this._applyHeaderLevel(h);\r\n\r\n            if (l > levels) {\r\n                levels = l;\r\n            }\r\n\r\n            this._idMap[h.$id] = h;\r\n\r\n            let parent = this._state.parents[h.$id];\r\n            if (parent && !lock[parent.$id]) {\r\n                lock[parent.$id] = true;\r\n                parents.push(parent);\r\n            }\r\n        }\r\n\r\n        if (parents.length) {\r\n            this._applyParentPosition(parents, type);\r\n        }\r\n\r\n        return levels + 1;\r\n    }\r\n\r\n    private _calcLevels() {\r\n        this._headersWidth = 0;\r\n        for (let i = 0; i < this._state.viewLeftLevels; i++) {\r\n            this._headersWidth += this.getLeftLevelWidth(i);\r\n        }\r\n\r\n        this._headersHeight = 0;\r\n        for (let i = 0; i < this._state.viewTopLevels; i++) {\r\n            this._headersHeight += this.getTopLevelHeight(i);\r\n        }\r\n    }\r\n\r\n    private _calcPosition(from = 0) {\r\n        this._state.viewTopLevels = this._proceedHeaders(this._state.viewColumns, from, this._state.columnWidth, HeaderType.Column);\r\n        this._state.viewLeftLevels = this._proceedHeaders(this._state.viewRows, from, this._state.rowHeight, HeaderType.Row);\r\n    }\r\n\r\n    private _getLevelPosition(type: 'left' | 'top', level: number) {\r\n        if (level >= (type === 'left' ? this._state.viewLeftLevels : this._state.viewTopLevels)) {\r\n            return 0;\r\n        }\r\n\r\n        let p = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            p += (type === 'left' ? this.getLeftLevelWidth(i) : this.getTopLevelHeight(i));\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    private _getLeaves(h: IHeader, out: IHeader[] = []) {\r\n        if (!h.$children || !h.$children.length) {\r\n            out.push(h);\r\n            return out;\r\n        }\r\n\r\n        h.$children.forEach(c => this._getLeaves(c, out));\r\n        return out;\r\n    }\r\n\r\n    private _getResizeList(h: IHeader, size: number, clamp: HeaderClampFunction) {\r\n        if (!h.$children || !h.$children.length) {\r\n            size = clamp({\r\n                header: h,\r\n                type: this._state.types[h.$id],\r\n                size\r\n            });\r\n        }\r\n\r\n        let prevSize = h.$size;\r\n\r\n        if (!h.$children || !h.$children.length) {\r\n            return [{\r\n                header: h,\r\n                size\r\n            }];\r\n        }\r\n\r\n        let leaves = this.getHeaderLeaves(h);\r\n\r\n        let d = 0;\r\n\r\n        if (clamp) {\r\n            leaves.forEach((c) => {\r\n                let n = Math.floor(c.$size * size / prevSize);\r\n                let m = clamp({\r\n                    header: h,\r\n                    type: this._state.types[h.$id],\r\n                    size: n - d\r\n                });\r\n\r\n                if (n < m) {\r\n                    d += m - n;\r\n                }\r\n            });\r\n        }\r\n\r\n        return leaves.map((c) => {\r\n            return {\r\n                header: c,\r\n                size: clamp({\r\n                    header: c,\r\n                    type: this._state.types[c.id],\r\n                    size: Math.floor(c.$size * size / prevSize) - d\r\n                })\r\n            };\r\n        });\r\n    }\r\n\r\n    private _getHeaderAddress(h: IHeader) {\r\n        let ix: number[] = [];\r\n        let seek = h;\r\n\r\n        while (seek) {\r\n            ix.push(this._state.indices[h.$id]);\r\n            seek = this._state.parents[seek.$id];\r\n        }\r\n\r\n        return ix.reverse();\r\n    }\r\n\r\n    private _mapBranch(address: number[], list: IHeader[], map: (h: IHeader) => IHeader): IHeader[] {\r\n        let len = address.length;\r\n\r\n        return list.map((h) => {\r\n            if (!len) {\r\n                return map(h);\r\n            }\r\n\r\n            return {\r\n                ...h,\r\n                $children: this._mapBranch(address.slice(1), h.$children, map)\r\n            };\r\n        });\r\n    }\r\n\r\n    private _recalcHeaders() {\r\n        this._state.viewColumns = null;\r\n        this._state.viewRows = null;\r\n        this._state.viewLeftLevels = 0;\r\n        this._state.viewTopLevels = 0;\r\n        this._state.types = {};\r\n        this._state.indices = {};\r\n        this._state.positions = {};\r\n        this._state.levels = {};\r\n        this._state.parents = {};\r\n        this._state.viewColumns = this._create(this._state.columns, [], HeaderType.Column, this._state.filter);\r\n        this._state.viewRows = this._create(this._state.rows, [], HeaderType.Row, this._state.filter);\r\n        this._calcPosition();\r\n        this._calcLevels();\r\n\r\n        return this;\r\n    }\r\n\r\n    private _updateHeaders(\r\n        branchMap: {\r\n            [branchName: string]: {\r\n                [$id: string]: IHeader;\r\n            };\r\n        },\r\n        sourceList: IHeader[]\r\n    ) {\r\n        let branchList = Object.keys(branchMap);\r\n\r\n        if (!branchList.length) {\r\n            return sourceList;\r\n        }\r\n\r\n        branchList.forEach((branch) => {\r\n            let address = branch.split('/').filter(v => !!v).map(Number);\r\n            let updateMap = branchMap[branch];\r\n\r\n            sourceList = this._mapBranch(address, sourceList, (h) => {\r\n                let update = updateMap[h.$id];\r\n\r\n                if (!update) {\r\n                    return h;\r\n                }\r\n\r\n                let next = { ...h };\r\n\r\n                Object.keys(update).forEach((key) => {\r\n                    if (key === '$id') {\r\n                        return;\r\n                    }\r\n\r\n                    next[key] = update[key];\r\n                });\r\n\r\n                return next;\r\n            });\r\n        });\r\n\r\n        return sourceList;\r\n    }\r\n\r\n    public getHeader(id: number | string) {\r\n        return this._idMap[id];\r\n    }\r\n\r\n    public getHeaderType(h: IHeader) {\r\n        return this._state.types[h.$id];\r\n    }\r\n\r\n    public getViewIndex(h: IHeader) {\r\n        return this._state.indices[h.$id];\r\n    }\r\n\r\n    public getPosition(h: IHeader) {\r\n        return this._state.positions[h.$id];\r\n    }\r\n\r\n    public getManualResized(h: IHeader) {\r\n        return !!this._state.manualResized[h.$id];\r\n    }\r\n\r\n    public getLevel(h: IHeader) {\r\n        return this._state.levels[h.$id];\r\n    }\r\n\r\n    public getParent(h: IHeader) {\r\n        return this._state.parents[h.$id];\r\n    }\r\n\r\n    public getTopLevelPosition(level: number) {\r\n        return this._getLevelPosition('top', level);\r\n    }\r\n\r\n    public getLeftLevelPosition(level: number) {\r\n        return this._getLevelPosition('left', level);\r\n    }\r\n\r\n    public getLeftLevelWidth(level: number) {\r\n        let v = this._state.leftLevels[level];\r\n        return v == null ? this._state.headersWidth : v;\r\n    }\r\n\r\n    public getTopLevelHeight(level: number) {\r\n        let v = this._state.topLevels[level];\r\n        return v == null ? this._state.headersHeight : v;\r\n    }\r\n\r\n    public getHeaderLeaves(h: IHeader) {\r\n        return this._getLeaves(h);\r\n    }\r\n\r\n    public getSource() {\r\n        return {\r\n            columns: this._state.columns,\r\n            rows: this._state.rows,\r\n            columnWidth: this._state.columnWidth,\r\n            rowHeight: this._state.rowHeight,\r\n            headersHeight: this._state.headersHeight,\r\n            headersWidth: this._state.headersWidth,\r\n            filter: this._state.filter\r\n        } as IContainerProps;\r\n    }\r\n\r\n    public updateFilter(filter: IContainerHeadersFilter) {\r\n        if (this._state.filter === filter) {\r\n            return this;\r\n        }\r\n\r\n        let next = this._createClone();\r\n        next._state.filter = filter;\r\n        return next._recalcHeaders();\r\n    }\r\n\r\n    public updateHeaders(updates: { header: IHeader, update: IHeader }[]) {\r\n        let mapColumns: {\r\n            [branchName: string]: {\r\n                [$id: string]: IHeader;\r\n            };\r\n        } = {};\r\n\r\n        let mapRows: typeof mapColumns = {};\r\n\r\n        updates.forEach(({ header, update }) => {\r\n            let headerType = this._state.types[header.$id];\r\n            let address = this._getHeaderAddress(header);\r\n            let map = headerType === HeaderType.Column ? mapColumns : mapRows;\r\n            let branchName = address.slice(0, address.length - 1).join('/');\r\n\r\n            if (!map[branchName]) {\r\n                map[branchName] = {};\r\n            }\r\n\r\n            map[branchName][header.$id] = update;\r\n        });\r\n\r\n        let next = this._createClone();\r\n\r\n        next._state.columns = this._updateHeaders(mapColumns, next._state.columns);\r\n        next._state.rows = this._updateHeaders(mapRows, next._state.rows);\r\n\r\n        return next._recalcHeaders();\r\n    }\r\n\r\n    /**\r\n     * Resize all provided headers.\r\n     * @param list Array of headers.\r\n     * @param clamp Size clamp function.\r\n     * @param behavior Defines flag when header was resized by autosize or manually.\r\n     * Header will not be autosized when it was manually resized. Default `\"manual\"`.\r\n     */\r\n    public resizeHeaders(\r\n        list: { header: IHeader, size: number }[],\r\n        clamp: HeaderClampFunction = ({ size }) => size,\r\n        behavior: HeaderResizeBehavior = 'manual'\r\n    ) {\r\n        let updates: { header: IHeader, update: IHeader }[] = [];\r\n        let leaves: IHeader[] = [];\r\n\r\n        list.forEach((u) => {\r\n            let resizeList = this._getResizeList(u.header, u.size, clamp);\r\n\r\n            resizeList.forEach(({ header, size }) => {\r\n                leaves.push(header);\r\n\r\n                updates.push({\r\n                    header,\r\n                    update: {\r\n                        $size: size\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        let c = this.updateHeaders(updates);\r\n\r\n        switch (behavior) {\r\n            case 'manual':\r\n            case 'reset':\r\n                let isManual = behavior === 'manual';\r\n                leaves.forEach((header) => {\r\n                    if (isManual) {\r\n                        c._state.manualResized[header.$id] = true;\r\n                    } else {\r\n                        delete c._state.manualResized[header.$id];\r\n                    }\r\n                });\r\n        }\r\n\r\n        return c;\r\n    }\r\n\r\n    public resizeLevel(type: HeaderType, level: number, size: number, min = 5, max = Infinity) {\r\n        let t: 'leftLevels' | 'topLevels' = type === HeaderType.Column ? 'topLevels' : 'leftLevels';\r\n        if (size <= min) {\r\n            size = min;\r\n        }\r\n\r\n        let next = this._createClone();\r\n\r\n        next._state[t][level] = Math.min(Math.max(min, size), max);\r\n        next._calcLevels();\r\n\r\n        return next;\r\n    }\r\n\r\n    public update(props: IContainerProps) {\r\n        let next = this._createClone();\r\n\r\n        next._state = {\r\n            ...next._state,\r\n            ...props\r\n        };\r\n\r\n        return next._recalcHeaders();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/models/container.ts","export class RenderThrottler {\r\n    private _ids = 0;\r\n    private _tasks: {\r\n        [id: string]: Function\r\n    } = {};\r\n    private _active = true;\r\n\r\n    constructor() {\r\n        window.requestAnimationFrame(this._step);\r\n    }\r\n\r\n    private _step = () => {\r\n        let c = 0;\r\n        for (let id of Object.keys(this._tasks)) {\r\n            let f = this._tasks[id];\r\n\r\n            if (f) {\r\n                f();\r\n            }\r\n\r\n            delete this._tasks[id];\r\n            c++;\r\n        }\r\n\r\n        if (!c) {\r\n            this._active = false;\r\n        } else {\r\n            window.requestAnimationFrame(this._step);\r\n        }\r\n    }\r\n\r\n    public create() {\r\n        const id = this._ids++;\r\n        return (fn: Function) => {\r\n            this._tasks[id] = fn;\r\n\r\n            if (!this._active) {\r\n                this._active = true;\r\n                window.requestAnimationFrame(this._step);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default RenderThrottler;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/renderthrottler.ts","let size: number = null;\r\n\r\nexport function getScrollbarSize() {\r\n    if (size !== null) {\r\n        return size;\r\n    }\r\n\r\n    let d = document.createElement('div');\r\n    d.style.overflow = 'scroll';\r\n    d.style.boxSizing = 'border-box';\r\n    d.style.position = 'fixed';\r\n    d.style.top = '-999px';\r\n    d.style.width = '100px';\r\n    d.style.height = '100px';\r\n\r\n    document.body.appendChild(d);\r\n\r\n    size = (100 - d.clientWidth) || (100 - d.clientHeight);\r\n\r\n    document.body.removeChild(d);\r\n\r\n    return size;\r\n}\r\n\r\nexport default getScrollbarSize;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/scrollbar-size.ts","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\nfunction is(x: any, y: any) {\r\n    return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;\r\n}\r\n\r\n/**\r\n * Shallow cache.\r\n *\r\n * If next object contains same keys and values - returns cached value instead.\r\n *\r\n * Optional callback called when changes were detected.\r\n */\r\nexport function Shallow<T>(callback?: () => void) {\r\n    let prev: T = void 0;\r\n\r\n    return (next: T) => {\r\n        if (is(prev, next)) {\r\n            return prev;\r\n        }\r\n\r\n        if (typeof prev !== 'object' || typeof next !== 'object') {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return prev = next;\r\n        }\r\n\r\n        let nextKeys = Object.keys(next);\r\n        let prevKeys = Object.keys(prev);\r\n\r\n        if (nextKeys.length !== prevKeys.length) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return prev = next;\r\n        }\r\n\r\n        for (const k of prevKeys) {\r\n            if (!next.hasOwnProperty(k) || !is((prev as any)[k], (next as any)[k])) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                return prev = next;\r\n            }\r\n        }\r\n\r\n        return prev;\r\n    };\r\n}\r\n\r\nexport default Shallow;\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/shallow.ts","/**  Get element relative coordinates. */\r\nexport function getRelativePosition(pageX: number, pageY: number, element: HTMLElement) {\r\n    if (!element || !element.parentElement) {\r\n        return { x: pageX, y: pageY };\r\n    }\r\n\r\n    let p = element;\r\n\r\n    do {\r\n        pageX -= p.offsetLeft;\r\n        pageY -= p.offsetTop;\r\n    } while (p = p.offsetParent as HTMLElement);\r\n\r\n    return { x: pageX, y: pageY };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/controllers/relative-position.ts","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { HeadersContainer, IHeader, HeaderType } from '../models';\r\nimport { Grid } from '../components/grid';\r\n\r\nexport interface IResizerProps {\r\n    header: IHeader;\r\n}\r\n\r\nexport class Resizer extends React.PureComponent<IResizerProps, any> {\r\n    /** React v17 deprecated */\r\n    static contextTypes = {\r\n        grid: PropTypes.object,\r\n        headers: PropTypes.object\r\n    };\r\n\r\n    private static _r: React.CSSProperties = {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        width: 6,\r\n        cursor: 'col-resize'\r\n    };\r\n\r\n    private static _b: React.CSSProperties = {\r\n        position: 'absolute',\r\n        right: 0,\r\n        height: 6,\r\n        bottom: 0,\r\n        left: 0,\r\n        cursor: 'row-resize'\r\n    };\r\n\r\n    private _moving: {\r\n        start: number;\r\n        type: 'left-level' | 'top-level' | 'row' | 'column';\r\n    } = null;\r\n\r\n    private _lastClick: {\r\n        type: 'left-level' | 'top-level' | 'row' | 'column';\r\n        time: number;\r\n    };\r\n\r\n    private _moveListener: any = null;\r\n    private _upListener: any = null;\r\n    private _escListener: any = null;\r\n    private _moved = false;\r\n\r\n    private get _grid() {\r\n        return this.context['grid'] as Grid;\r\n    }\r\n\r\n    private get _container() {\r\n        return this.context['headers'] as HeadersContainer;\r\n    }\r\n\r\n    private _unbind() {\r\n        if (this._moving) {\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n        }\r\n\r\n        if (this._moveListener) {\r\n            document.body.removeEventListener('mousemove', this._moveListener);\r\n            this._moveListener = null;\r\n        }\r\n\r\n        if (this._upListener) {\r\n            window.removeEventListener('mouseup', this._upListener);\r\n            this._upListener = null;\r\n        }\r\n\r\n        if (this._escListener) {\r\n            window.removeEventListener('keydown', this._escListener);\r\n            this._escListener = null;\r\n        }\r\n\r\n        this._moving = null;\r\n    }\r\n\r\n    private _onMove(change: number) {\r\n        if (!this._moving) {\r\n            return;\r\n        }\r\n\r\n        let { type } = this._moving;\r\n        let { header } = this.props;\r\n\r\n        switch (type) {\r\n            case 'column':\r\n            case 'row':\r\n                this._grid.previewResizeHeader({\r\n                    header: header,\r\n                    change: change,\r\n                });\r\n                break;\r\n\r\n            case 'left-level':\r\n            case 'top-level':\r\n                this._grid.previewResizeLevel({\r\n                    header: header,\r\n                    change: change,\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _onChange(change: number) {\r\n        if (!this._moving || !this._moved) {\r\n            return;\r\n        }\r\n\r\n        let { type } = this._moving;\r\n        let { header } = this.props;\r\n\r\n        switch (type) {\r\n            case 'column':\r\n            case 'row':\r\n                this._grid.resizeHeaders({\r\n                    headers: [{\r\n                        type: type === 'row' ? HeaderType.Row : HeaderType.Column,\r\n                        header: header,\r\n                        size: header.$size + change\r\n                    }],\r\n                    behavior: 'manual'\r\n                });\r\n                break;\r\n\r\n            case 'left-level':\r\n            case 'top-level':\r\n                let start = (\r\n                    type === 'left-level'\r\n                        ? this._container.getLeftLevelWidth(this._container.getLevel(header))\r\n                        : this._container.getTopLevelHeight(this._container.getLevel(header))\r\n                );\r\n                this._grid.resizeLevel({\r\n                    type: type === 'left-level' ? HeaderType.Row : HeaderType.Column,\r\n                    level: this._container.getLevel(header),\r\n                    size: start + change\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _onMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        this._moved = false;\r\n\r\n        e.preventDefault();\r\n\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let type = e.currentTarget.getAttribute('x-type') as ('r' | 'b');\r\n        let p = type === 'r' ? e.pageX : e.pageY;\r\n        let headerType = this._container.getHeaderType(this.props.header);\r\n        let isRow = headerType === HeaderType.Row;\r\n\r\n        this._unbind();\r\n\r\n        let now = Date.now();\r\n        let movingType = (\r\n            type === 'r'\r\n                ? isRow\r\n                    ? 'left-level'\r\n                    : 'column'\r\n                : isRow\r\n                    ? 'row'\r\n                    : 'top-level'\r\n        );\r\n\r\n        if (this._lastClick && this._lastClick.type === movingType && (now - this._lastClick.time < 500)) {\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n            this._unbind();\r\n            this._grid.autoMeasure([this.props.header]);\r\n            return;\r\n        }\r\n\r\n        this._moving = {\r\n            type: movingType as any,\r\n            start: p\r\n        };\r\n\r\n        this._lastClick = {\r\n            type: movingType as any,\r\n            time: now\r\n        };\r\n\r\n        let change = 0;\r\n\r\n        window.addEventListener('mouseup', this._upListener = () => {\r\n            this._onChange(change);\r\n\r\n            this._moved = false;\r\n\r\n            this._grid.previewResizeHeader(null);\r\n            this._grid.previewResizeLevel(null);\r\n            this._unbind();\r\n        });\r\n\r\n        window.addEventListener('keydown', this._escListener = (ev: KeyboardEvent) => {\r\n            if (ev.keyCode === 27) { // esc\r\n                this._unbind();\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('mousemove', this._moveListener = (ev: MouseEvent) => {\r\n            if (!this._moving) {\r\n                return;\r\n            }\r\n\r\n            this._moved = true;\r\n\r\n            let m = type === 'r' ? ev.pageX : ev.pageY;\r\n            change = m - this._moving.start;\r\n            this._onMove(change);\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._unbind();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    x-type=\"r\"\r\n                    style={Resizer._r}\r\n                    onMouseDown={this._onMouseDown}\r\n                />\r\n                <div\r\n                    x-type=\"b\"\r\n                    style={Resizer._b}\r\n                    onMouseDown={this._onMouseDown}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!../src/components/resizer.tsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"track\":\"scrollview__track___cj1HH\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/scrollview.scss\n// module id = 89\n// module chunks = 1","export * from './app';\r\nexport * from './scrollview';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/index.tsx"],"sourceRoot":""}